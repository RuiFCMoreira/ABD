explain analyze SELECT t.id, t.primary_title, tg.genres, te.season_number, count(*) AS views
FROM title t
JOIN titleEpisode te ON te.parent_title_id = t.id
JOIN title t2 ON t2.id = te.title_id
JOIN userHistory uh ON uh.title_id = t2.id
JOIN users u ON u.id = uh.user_id
JOIN (
    SELECT tg.title_id, array_agg(g.name) AS genres
    FROM titleGenre tg
    JOIN genre g ON g.id = tg.genre_id
    GROUP BY tg.title_id
) tg ON tg.title_id = t.id
WHERE t.title_type = 'tvSeries'
    AND uh.last_seen BETWEEN NOW() - INTERVAL '30 days' AND NOW()
    AND te.season_number IS NOT NULL
    AND u.country_code NOT IN ('US', 'GB')
GROUP BY t.id, t.primary_title, tg.genres, te.season_number
ORDER BY count(*) DESC, t.id
LIMIT 100;
                                                                                                   QUERY PLAN                                                                                                    
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1132650.93..1132651.18 rows=100 width=74) (actual time=32840.440..32919.573 rows=100 loops=1)
   ->  Sort  (cost=1132650.93..1132684.37 rows=13377 width=74) (actual time=32251.862..32330.987 rows=100 loops=1)
         Sort Key: (count(*)) DESC, t.id
         Sort Method: top-N heapsort  Memory: 40kB
         ->  Finalize GroupAggregate  (cost=126767.15..1132139.67 rows=13377 width=74) (actual time=17012.024..32324.328 rows=21491 loops=1)
               Group Key: t.id, (array_agg(g.name)), te.season_number
               ->  Gather Merge  (cost=126767.15..1131894.42 rows=11148 width=74) (actual time=17012.007..32311.433 rows=26194 loops=1)
                     Workers Planned: 2
                     Workers Launched: 2
                     ->  Partial GroupAggregate  (cost=125767.13..1129607.64 rows=5574 width=74) (actual time=16989.446..31655.168 rows=8731 loops=3)
                           Group Key: t.id, (array_agg(g.name)), te.season_number
                           ->  Incremental Sort  (cost=125767.13..1129496.16 rows=5574 width=66) (actual time=16989.412..31648.517 rows=11423 loops=3)
                                 Sort Key: t.id, (array_agg(g.name)), te.season_number
                                 Presorted Key: t.id
                                 Full-sort Groups: 351  Sort Method: quicksort  Average Memory: 29kB  Peak Memory: 29kB
                                 Worker 0:  Full-sort Groups: 339  Sort Method: quicksort  Average Memory: 29kB  Peak Memory: 29kB
                                 Worker 1:  Full-sort Groups: 348  Sort Method: quicksort  Average Memory: 29kB  Peak Memory: 29kB
                                 ->  Merge Join  (cost=125587.06..1129245.33 rows=5574 width=66) (actual time=16981.886..31634.982 rows=11423 loops=3)
                                       Merge Cond: ((te.parent_title_id)::text = (tg.title_id)::text)
                                       ->  Sort  (cost=125586.35..125586.45 rows=42 width=44) (actual time=16913.444..16919.855 rows=11812 loops=3)
                                             Sort Key: t.id
                                             Sort Method: quicksort  Memory: 1473kB
                                             Worker 0:  Sort Method: quicksort  Memory: 1458kB
                                             Worker 1:  Sort Method: quicksort  Memory: 1466kB
                                             ->  Nested Loop  (cost=1.59..125585.22 rows=42 width=44) (actual time=302.774..16891.199 rows=11812 loops=3)
                                                   ->  Nested Loop  (cost=1.30..125518.49 rows=42 width=48) (actual time=302.728..16811.329 rows=11910 loops=3)
                                                         ->  Nested Loop  (cost=0.87..124550.71 rows=1725 width=18) (actual time=301.172..12569.117 rows=12479 loops=3)
                                                               ->  Nested Loop  (cost=0.43..123161.81 rows=2873 width=24) (actual time=299.750..6352.257 rows=17406 loops=3)
                                                                     ->  Parallel Seq Scan on userhistory uh  (cost=0.00..111329.80 rows=2873 width=14) (actual time=298.509..2574.137 rows=17406 loops=3)
                                                                           Filter: ((last_seen <= now()) AND (last_seen >= (now() - '30 days'::interval)))
                                                                           Rows Removed by Filter: 1983225
                                                                     ->  Index Only Scan using title_pkey on title t2  (cost=0.43..4.12 rows=1 width=10) (actual time=0.216..0.216 rows=1 loops=52218)
                                                                           Index Cond: (id = (uh.title_id)::text)
                                                                           Heap Fetches: 0
                                                               ->  Index Scan using titleepisode_pkey on titleepisode te  (cost=0.43..0.48 rows=1 width=24) (actual time=0.356..0.356 rows=1 loops=52218)
                                                                     Index Cond: ((title_id)::text = (t2.id)::text)
                                                                     Filter: (season_number IS NOT NULL)
                                                                     Rows Removed by Filter: 0
                                                         ->  Index Scan using title_pkey on title t  (cost=0.43..0.56 rows=1 width=30) (actual time=0.338..0.338 rows=1 loops=37438)
                                                               Index Cond: ((id)::text = (te.parent_title_id)::text)
                                                               Filter: ((title_type)::text = 'tvSeries'::text)
                                                               Rows Removed by Filter: 0
                                                   ->  Index Scan using users_pkey on users u  (cost=0.29..1.59 rows=1 width=4) (actual time=0.005..0.005 rows=1 loops=35729)
                                                         Index Cond: (id = uh.user_id)
                                                         Filter: ((country_code)::text <> ALL ('{US,GB}'::text[]))
                                                         Rows Removed by Filter: 0
                                       ->  GroupAggregate  (cost=0.71..957035.80 rows=3725342 width=42) (actual time=1.752..13749.604 rows=9377752 loops=3)
                                             Group Key: tg.title_id
                                             ->  Nested Loop  (cost=0.71..834474.73 rows=15198860 width=17) (actual time=1.723..7531.431 rows=15198118 loops=3)
                                                   ->  Index Only Scan using titlegenre_pkey on titlegenre tg  (cost=0.56..462079.46 rows=15198860 width=14) (actual time=1.633..2861.964 rows=15198118 loops=3)
                                                         Heap Fetches: 0
                                                   ->  Memoize  (cost=0.15..0.17 rows=1 width=11) (actual time=0.000..0.000 rows=1 loops=45594354)
                                                         Cache Key: tg.genre_id
                                                         Cache Mode: logical
                                                         Hits: 15198088  Misses: 28  Evictions: 0  Overflows: 0  Memory Usage: 4kB
                                                         Worker 0:  Hits: 15198088  Misses: 28  Evictions: 0  Overflows: 0  Memory Usage: 4kB
                                                         Worker 1:  Hits: 15198094  Misses: 28  Evictions: 0  Overflows: 0  Memory Usage: 4kB
                                                         ->  Index Scan using genre_pkey on genre g  (cost=0.14..0.16 rows=1 width=11) (actual time=0.004..0.004 rows=1 loops=84)
                                                               Index Cond: (id = tg.genre_id)
 Planning Time: 16.531 ms
 JIT:
   Functions: 148
   Options: Inlining true, Optimization true, Expressions true, Deforming true
   Timing: Generation 9.047 ms, Inlining 298.223 ms, Optimization 663.557 ms, Emission 521.671 ms, Total 1492.498 ms
 Execution Time: 33352.155 ms
(65 rows)

