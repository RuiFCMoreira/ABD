explain analyze SELECT t.id, t.primary_title, tg.genres, te.season_number, count(*) AS views
FROM title t
JOIN titleEpisode te ON te.parent_title_id = t.id
JOIN title t2 ON t2.id = te.title_id
JOIN userHistory uh ON uh.title_id = t2.id
JOIN users u ON u.id = uh.user_id
JOIN (
    SELECT tg.title_id, array_agg(g.name) AS genres
    FROM titleGenre tg
    JOIN genre g ON g.id = tg.genre_id
    GROUP BY tg.title_id
) tg ON tg.title_id = t.id
WHERE t.title_type = 'tvSeries'
    AND uh.last_seen BETWEEN NOW() - INTERVAL '30 days' AND NOW()
    AND te.season_number IS NOT NULL
    AND u.country_code NOT IN ('US', 'GB')
GROUP BY t.id, t.primary_title, tg.genres, te.season_number
ORDER BY count(*) DESC, t.id
LIMIT 100;
                                                                                                   QUERY PLAN                                                                                                    
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1127229.66..1127229.91 rows=100 width=74) (actual time=32597.386..32597.578 rows=100 loops=1)
   ->  Sort  (cost=1127229.66..1127244.78 rows=6046 width=74) (actual time=31988.892..31989.076 rows=100 loops=1)
         Sort Key: (count(*)) DESC, t.id
         Sort Method: top-N heapsort  Memory: 40kB
         ->  Finalize GroupAggregate  (cost=118873.20..1126998.59 rows=6046 width=74) (actual time=17055.287..31982.458 rows=21517 loops=1)
               Group Key: t.id, (array_agg(g.name)), te.season_number
               ->  Gather Merge  (cost=118873.20..1126887.75 rows=5038 width=74) (actual time=17055.270..31969.990 rows=26181 loops=1)
                     Workers Planned: 2
                     Workers Launched: 2
                     ->  Partial GroupAggregate  (cost=117873.18..1125306.21 rows=2519 width=74) (actual time=17032.607..31522.729 rows=8727 loops=3)
                           Group Key: t.id, (array_agg(g.name)), te.season_number
                           ->  Incremental Sort  (cost=117873.18..1125255.83 rows=2519 width=66) (actual time=17032.577..31516.146 rows=11439 loops=3)
                                 Sort Key: t.id, (array_agg(g.name)), te.season_number
                                 Presorted Key: t.id
                                 Full-sort Groups: 351  Sort Method: quicksort  Average Memory: 29kB  Peak Memory: 29kB
                                 Worker 0:  Full-sort Groups: 349  Sort Method: quicksort  Average Memory: 29kB  Peak Memory: 29kB
                                 Worker 1:  Full-sort Groups: 342  Sort Method: quicksort  Average Memory: 30kB  Peak Memory: 30kB
                                 ->  Merge Join  (cost=117473.14..1125142.48 rows=2519 width=66) (actual time=17025.890..31502.516 rows=11439 loops=3)
                                       Merge Cond: ((te.parent_title_id)::text = (tg.title_id)::text)
                                       ->  Sort  (cost=117472.43..117472.48 rows=18 width=44) (actual time=16961.342..16967.677 rows=11829 loops=3)
                                             Sort Key: t.id
                                             Sort Method: quicksort  Memory: 1475kB
                                             Worker 0:  Sort Method: quicksort  Memory: 1469kB
                                             Worker 1:  Sort Method: quicksort  Memory: 1457kB
                                             ->  Nested Loop  (cost=1.59..117472.06 rows=18 width=44) (actual time=299.866..16937.656 rows=11829 loops=3)
                                                   ->  Nested Loop  (cost=1.30..117418.07 rows=18 width=48) (actual time=299.822..16863.252 rows=11926 loops=3)
                                                         ->  Nested Loop  (cost=0.87..117015.76 rows=718 width=18) (actual time=297.918..12561.214 rows=12498 loops=3)
                                                               ->  Nested Loop  (cost=0.43..116441.90 rows=1187 width=24) (actual time=296.156..6315.235 rows=17429 loops=3)
                                                                     ->  Parallel Seq Scan on userhistory uh  (cost=0.00..111328.50 rows=1187 width=14) (actual time=295.032..2505.689 rows=17429 loops=3)
                                                                           Filter: ((last_seen <= now()) AND (last_seen >= (now() - '30 days'::interval)))
                                                                           Rows Removed by Filter: 1983201
                                                                     ->  Index Only Scan using title_pkey on title t2  (cost=0.43..4.31 rows=1 width=10) (actual time=0.217..0.217 rows=1 loops=52288)
                                                                           Index Cond: (id = (uh.title_id)::text)
                                                                           Heap Fetches: 0
                                                               ->  Index Scan using titleepisode_pkey on titleepisode te  (cost=0.43..0.48 rows=1 width=24) (actual time=0.357..0.357 rows=1 loops=52288)
                                                                     Index Cond: ((title_id)::text = (t2.id)::text)
                                                                     Filter: (season_number IS NOT NULL)
                                                                     Rows Removed by Filter: 0
                                                         ->  Index Scan using title_pkey on title t  (cost=0.43..0.56 rows=1 width=30) (actual time=0.342..0.342 rows=1 loops=37493)
                                                               Index Cond: ((id)::text = (te.parent_title_id)::text)
                                                               Filter: ((title_type)::text = 'tvSeries'::text)
                                                               Rows Removed by Filter: 0
                                                   ->  Index Scan using users_pkey on users u  (cost=0.29..3.00 rows=1 width=4) (actual time=0.005..0.005 rows=1 loops=35779)
                                                         Index Cond: (id = uh.user_id)
                                                         Filter: ((country_code)::text <> ALL ('{US,GB}'::text[]))
                                                         Rows Removed by Filter: 0
                                       ->  GroupAggregate  (cost=0.71..959056.76 rows=3887031 width=42) (actual time=1.651..13554.623 rows=9377696 loops=3)
                                             Group Key: tg.title_id
                                             ->  Nested Loop  (cost=0.71..834474.57 rows=15198860 width=17) (actual time=1.617..7312.860 rows=15198014 loops=3)
                                                   ->  Index Only Scan using titlegenre_pkey on titlegenre tg  (cost=0.56..462079.46 rows=15198860 width=14) (actual time=1.493..2559.485 rows=15198014 loops=3)
                                                         Heap Fetches: 0
                                                   ->  Memoize  (cost=0.15..0.17 rows=1 width=11) (actual time=0.000..0.000 rows=1 loops=45594043)
                                                         Cache Key: tg.genre_id
                                                         Cache Mode: logical
                                                         Hits: 15197777  Misses: 28  Evictions: 0  Overflows: 0  Memory Usage: 4kB
                                                         Worker 0:  Hits: 15198094  Misses: 28  Evictions: 0  Overflows: 0  Memory Usage: 4kB
                                                         Worker 1:  Hits: 15198088  Misses: 28  Evictions: 0  Overflows: 0  Memory Usage: 4kB
                                                         ->  Index Scan using genre_pkey on genre g  (cost=0.14..0.16 rows=1 width=11) (actual time=0.005..0.005 rows=1 loops=84)
                                                               Index Cond: (id = tg.genre_id)
 Planning Time: 17.121 ms
 JIT:
   Functions: 148
   Options: Inlining true, Optimization true, Expressions true, Deforming true
   Timing: Generation 9.039 ms, Inlining 301.051 ms, Optimization 670.332 ms, Emission 520.922 ms, Total 1501.344 ms
 Execution Time: 33022.662 ms
(65 rows)

