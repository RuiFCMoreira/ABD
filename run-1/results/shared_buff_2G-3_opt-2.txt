explain analyze SELECT n.id,
    n.primary_name,
    date_part('year', NOW())::int - n.birth_year AS age,
    count(*) AS roles
FROM name n
JOIN titlePrincipals tp ON tp.name_id = n.id
JOIN titlePrincipalsCharacters tpc ON tpc.title_id = tp.title_id
    AND tpc.name_id = tp.name_id
JOIN category c ON c.id = tp.category_id
JOIN title t ON t.id = tp.title_id
WHERE t.start_year >= date_part('year', NOW())::int - 10
    AND c.name = 'actress'
    AND n.death_year IS NULL
    AND t.title_type IN (
        'movie', 'tvSeries', 'tvMiniSeries', 'tvMovie'
    )
GROUP BY n.id
ORDER BY roles DESC
LIMIT 100;
                                                                                                        QUERY PLAN                                                                                                         
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1282343.60..1282343.63 rows=12 width=36) (actual time=42465.033..42559.955 rows=100 loops=1)
   ->  Sort  (cost=1282343.60..1282343.63 rows=12 width=36) (actual time=41930.088..42025.002 rows=100 loops=1)
         Sort Key: (count(*)) DESC
         Sort Method: top-N heapsort  Memory: 38kB
         ->  Finalize GroupAggregate  (cost=1282341.85..1282343.39 rows=12 width=36) (actual time=41652.562..41985.773 rows=183837 loops=1)
               Group Key: n.id
               ->  Gather Merge  (cost=1282341.85..1282343.10 rows=10 width=36) (actual time=41652.534..41886.320 rows=250765 loops=1)
                     Workers Planned: 2
                     Workers Launched: 2
                     ->  Partial GroupAggregate  (cost=1281341.83..1281341.92 rows=5 width=36) (actual time=41629.743..41702.282 rows=83588 loops=3)
                           Group Key: n.id
                           ->  Sort  (cost=1281341.83..1281341.84 rows=5 width=28) (actual time=41629.692..41663.387 rows=132116 loops=3)
                                 Sort Key: n.id
                                 Sort Method: external merge  Disk: 4808kB
                                 Worker 0:  Sort Method: external merge  Disk: 4784kB
                                 Worker 1:  Sort Method: external merge  Disk: 4720kB
                                 ->  Nested Loop  (cost=234403.29..1281341.77 rows=5 width=28) (actual time=12865.108..41429.233 rows=132116 loops=3)
                                       ->  Nested Loop  (cost=234402.73..1281321.09 rows=5 width=20) (actual time=12862.949..25981.270 rows=132656 loops=3)
                                             ->  Parallel Hash Join  (cost=234402.17..1044930.59 rows=88747 width=30) (actual time=12861.012..13517.510 rows=149480 loops=3)
                                                   Hash Cond: ((tp.title_id)::text = (t.id)::text)
                                                   ->  Hash Join  (cost=1.16..781764.71 rows=1941667 width=20) (actual time=0.847..8525.512 rows=3185892 loops=3)
                                                         Hash Cond: (tp.category_id = c.id)
                                                         ->  Parallel Seq Scan on titleprincipals tp  (cost=0.00..699000.00 rows=23300000 width=24) (actual time=0.722..6625.555 rows=18639969 loops=3)
                                                         ->  Hash  (cost=1.15..1.15 rows=1 width=4) (actual time=0.058..0.060 rows=1 loops=3)
                                                               Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                               ->  Seq Scan on category c  (cost=0.00..1.15 rows=1 width=4) (actual time=0.051..0.052 rows=1 loops=3)
                                                                     Filter: ((name)::text = 'actress'::text)
                                                                     Rows Removed by Filter: 11
                                                   ->  Parallel Hash  (cost=231148.56..231148.56 rows=187076 width=10) (actual time=3383.114..3383.115 rows=117416 loops=3)
                                                         Buckets: 131072  Batches: 8  Memory Usage: 3136kB
                                                         ->  Parallel Seq Scan on title t  (cost=0.00..231148.56 rows=187076 width=10) (actual time=271.287..3342.123 rows=117416 loops=3)
                                                               Filter: (((title_type)::text = ANY ('{movie,tvSeries,tvMiniSeries,tvMovie}'::text[])) AND (start_year >= ((date_part('year'::text, now()))::integer - 10)))
                                                               Rows Removed by Filter: 3156125
                                             ->  Index Only Scan using titleprincipalscharacters_pkey on titleprincipalscharacters tpc  (cost=0.56..2.65 rows=1 width=20) (actual time=0.082..0.083 rows=1 loops=448441)
                                                   Index Cond: ((title_id = (tp.title_id)::text) AND (name_id = (tp.name_id)::text))
                                                   Heap Fetches: 0
                                       ->  Index Scan using name_pkey on name n  (cost=0.56..4.14 rows=1 width=28) (actual time=0.116..0.116 rows=1 loops=397968)
                                             Index Cond: ((id)::text = (tp.name_id)::text)
                                             Filter: (death_year IS NULL)
                                             Rows Removed by Filter: 0
 Planning Time: 23.216 ms
 JIT:
   Functions: 115
   Options: Inlining true, Optimization true, Expressions true, Deforming true
   Timing: Generation 7.735 ms, Inlining 290.642 ms, Optimization 555.513 ms, Emission 441.906 ms, Total 1295.796 ms
 Execution Time: 43002.923 ms
(46 rows)

