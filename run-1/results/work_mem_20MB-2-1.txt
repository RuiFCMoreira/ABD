explain analyze SELECT t.id, t.primary_title, tg.genres, te.season_number, count(*) AS views
FROM title t
JOIN titleEpisode te ON te.parent_title_id = t.id
JOIN title t2 ON t2.id = te.title_id
JOIN userHistory uh ON uh.title_id = t2.id
JOIN users u ON u.id = uh.user_id
JOIN (
    SELECT tg.title_id, array_agg(g.name) AS genres
    FROM titleGenre tg
    JOIN genre g ON g.id = tg.genre_id
    GROUP BY tg.title_id
) tg ON tg.title_id = t.id
WHERE t.title_type = 'tvSeries'
    AND uh.last_seen BETWEEN NOW() - INTERVAL '30 days' AND NOW()
    AND te.season_number IS NOT NULL
    AND u.country_code NOT IN ('US', 'GB')
GROUP BY t.id, t.primary_title, tg.genres, te.season_number
ORDER BY count(*) DESC, t.id
LIMIT 100;
                                                                                                   QUERY PLAN                                                                                                    
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1127270.26..1127270.51 rows=100 width=74) (actual time=33035.855..33036.051 rows=100 loops=1)
   ->  Sort  (cost=1127270.26..1127285.67 rows=6164 width=74) (actual time=32420.214..32420.402 rows=100 loops=1)
         Sort Key: (count(*)) DESC, t.id
         Sort Method: top-N heapsort  Memory: 40kB
         ->  Finalize GroupAggregate  (cost=118903.34..1127034.67 rows=6164 width=74) (actual time=16679.667..32413.700 rows=21471 loops=1)
               Group Key: t.id, (array_agg(g.name)), te.season_number
               ->  Gather Merge  (cost=118903.34..1126921.67 rows=5136 width=74) (actual time=16679.647..32400.846 rows=26173 loops=1)
                     Workers Planned: 2
                     Workers Launched: 2
                     ->  Partial GroupAggregate  (cost=117903.32..1125328.83 rows=2568 width=74) (actual time=16656.270..31830.121 rows=8724 loops=3)
                           Group Key: t.id, (array_agg(g.name)), te.season_number
                           ->  Incremental Sort  (cost=117903.32..1125277.47 rows=2568 width=66) (actual time=16656.238..31823.444 rows=11406 loops=3)
                                 Sort Key: t.id, (array_agg(g.name)), te.season_number
                                 Presorted Key: t.id
                                 Full-sort Groups: 351  Sort Method: quicksort  Average Memory: 29kB  Peak Memory: 29kB
                                 Worker 0:  Full-sort Groups: 348  Sort Method: quicksort  Average Memory: 29kB  Peak Memory: 29kB
                                 Worker 1:  Full-sort Groups: 342  Sort Method: quicksort  Average Memory: 29kB  Peak Memory: 29kB
                                 ->  Merge Join  (cost=117510.92..1125161.91 rows=2568 width=66) (actual time=16648.534..31809.774 rows=11406 loops=3)
                                       Merge Cond: ((te.parent_title_id)::text = (tg.title_id)::text)
                                       ->  Sort  (cost=117510.22..117510.26 rows=19 width=44) (actual time=16579.634..16586.110 rows=11795 loops=3)
                                             Sort Key: t.id
                                             Sort Method: quicksort  Memory: 1480kB
                                             Worker 0:  Sort Method: quicksort  Memory: 1460kB
                                             Worker 1:  Sort Method: quicksort  Memory: 1452kB
                                             ->  Nested Loop  (cost=1.59..117509.81 rows=19 width=44) (actual time=324.025..16556.085 rows=11795 loops=3)
                                                   ->  Nested Loop  (cost=1.30..117452.99 rows=19 width=48) (actual time=323.968..16483.807 rows=11893 loops=3)
                                                         ->  Nested Loop  (cost=0.87..117049.78 rows=719 width=18) (actual time=322.054..12277.475 rows=12462 loops=3)
                                                               ->  Nested Loop  (cost=0.43..116472.54 rows=1194 width=24) (actual time=320.394..6150.687 rows=17380 loops=3)
                                                                     ->  Parallel Seq Scan on userhistory uh  (cost=0.00..111329.57 rows=1194 width=14) (actual time=319.272..2435.880 rows=17380 loops=3)
                                                                           Filter: ((last_seen <= now()) AND (last_seen >= (now() - '30 days'::interval)))
                                                                           Rows Removed by Filter: 1983251
                                                                     ->  Index Only Scan using title_pkey on title t2  (cost=0.43..4.31 rows=1 width=10) (actual time=0.212..0.212 rows=1 loops=52139)
                                                                           Index Cond: (id = (uh.title_id)::text)
                                                                           Heap Fetches: 0
                                                               ->  Index Scan using titleepisode_pkey on titleepisode te  (cost=0.43..0.48 rows=1 width=24) (actual time=0.351..0.351 rows=1 loops=52139)
                                                                     Index Cond: ((title_id)::text = (t2.id)::text)
                                                                     Filter: (season_number IS NOT NULL)
                                                                     Rows Removed by Filter: 0
                                                         ->  Index Scan using title_pkey on title t  (cost=0.43..0.56 rows=1 width=30) (actual time=0.336..0.336 rows=1 loops=37385)
                                                               Index Cond: ((id)::text = (te.parent_title_id)::text)
                                                               Filter: ((title_type)::text = 'tvSeries'::text)
                                                               Rows Removed by Filter: 0
                                                   ->  Index Scan using users_pkey on users u  (cost=0.29..2.99 rows=1 width=4) (actual time=0.005..0.005 rows=1 loops=35679)
                                                         Index Cond: (id = uh.user_id)
                                                         Filter: ((country_code)::text <> ALL ('{US,GB}'::text[]))
                                                         Rows Removed by Filter: 0
                                       ->  GroupAggregate  (cost=0.71..959038.04 rows=3887003 width=42) (actual time=1.147..14190.353 rows=9377679 loops=3)
                                             Group Key: tg.title_id
                                             ->  Nested Loop  (cost=0.71..834458.28 rows=15198444 width=17) (actual time=1.118..7718.709 rows=15197988 loops=3)
                                                   ->  Index Only Scan using titlegenre_pkey on titlegenre tg  (cost=0.56..462073.22 rows=15198444 width=14) (actual time=1.040..2708.451 rows=15197988 loops=3)
                                                         Heap Fetches: 0
                                                   ->  Memoize  (cost=0.15..0.17 rows=1 width=11) (actual time=0.000..0.000 rows=1 loops=45593965)
                                                         Cache Key: tg.genre_id
                                                         Cache Mode: logical
                                                         Hits: 15198094  Misses: 28  Evictions: 0  Overflows: 0  Memory Usage: 4kB
                                                         Worker 0:  Hits: 15197699  Misses: 28  Evictions: 0  Overflows: 0  Memory Usage: 4kB
                                                         Worker 1:  Hits: 15198088  Misses: 28  Evictions: 0  Overflows: 0  Memory Usage: 4kB
                                                         ->  Index Scan using genre_pkey on genre g  (cost=0.14..0.16 rows=1 width=11) (actual time=0.004..0.004 rows=1 loops=84)
                                                               Index Cond: (id = tg.genre_id)
 Planning Time: 20.882 ms
 JIT:
   Functions: 148
   Options: Inlining true, Optimization true, Expressions true, Deforming true
   Timing: Generation 9.050 ms, Inlining 309.422 ms, Optimization 719.662 ms, Emission 542.328 ms, Total 1580.461 ms
 Execution Time: 33488.396 ms
(65 rows)

