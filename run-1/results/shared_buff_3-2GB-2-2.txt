explain analyze SELECT t.id, t.primary_title, tg.genres, te.season_number, count(*) AS views
FROM title t
JOIN titleEpisode te ON te.parent_title_id = t.id
JOIN title t2 ON t2.id = te.title_id
JOIN userHistory uh ON uh.title_id = t2.id
JOIN users u ON u.id = uh.user_id
JOIN (
    SELECT tg.title_id, array_agg(g.name) AS genres
    FROM titleGenre tg
    JOIN genre g ON g.id = tg.genre_id
    GROUP BY tg.title_id
) tg ON tg.title_id = t.id
WHERE t.title_type = 'tvSeries'
    AND uh.last_seen BETWEEN NOW() - INTERVAL '30 days' AND NOW()
    AND te.season_number IS NOT NULL
    AND u.country_code NOT IN ('US', 'GB')
GROUP BY t.id, t.primary_title, tg.genres, te.season_number
ORDER BY count(*) DESC, t.id
LIMIT 100;
                                                                                                   QUERY PLAN                                                                                                    
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1162442.44..1162442.69 rows=100 width=74) (actual time=33063.076..33144.470 rows=100 loops=1)
   ->  Sort  (cost=1162442.44..1162481.88 rows=15776 width=74) (actual time=32487.356..32568.736 rows=100 loops=1)
         Sort Key: (count(*)) DESC, t.id
         Sort Method: top-N heapsort  Memory: 40kB
         ->  GroupAggregate  (cost=126549.87..1161839.49 rows=15776 width=74) (actual time=16704.178..32561.554 rows=21491 loops=1)
               Group Key: t.id, (array_agg(g.name)), te.season_number
               ->  Nested Loop  (cost=126549.87..1161523.97 rows=15776 width=66) (actual time=16703.382..32544.463 rows=34268 loops=1)
                     ->  Gather Merge  (cost=126549.57..1150780.13 rows=15937 width=70) (actual time=16702.546..32253.561 rows=34546 loops=1)
                           Workers Planned: 2
                           Workers Launched: 2
                           ->  Incremental Sort  (cost=125549.54..1147940.58 rows=6640 width=70) (actual time=16679.761..31796.721 rows=11515 loops=3)
                                 Sort Key: t.id, (array_agg(g.name)), te.season_number
                                 Presorted Key: t.id
                                 Full-sort Groups: 347  Sort Method: quicksort  Average Memory: 30kB  Peak Memory: 30kB
                                 Worker 0:  Full-sort Groups: 350  Sort Method: quicksort  Average Memory: 29kB  Peak Memory: 29kB
                                 Worker 1:  Full-sort Groups: 351  Sort Method: quicksort  Average Memory: 29kB  Peak Memory: 29kB
                                 ->  Merge Join  (cost=125395.58..1147641.78 rows=6640 width=70) (actual time=16671.976..31782.597 rows=11515 loops=3)
                                       Merge Cond: ((te.parent_title_id)::text = (tg.title_id)::text)
                                       ->  Sort  (cost=125394.87..125394.98 rows=41 width=48) (actual time=16601.851..16608.218 rows=11910 loops=3)
                                             Sort Key: t.id
                                             Sort Method: quicksort  Memory: 1586kB
                                             Worker 0:  Sort Method: quicksort  Memory: 1593kB
                                             Worker 1:  Sort Method: quicksort  Memory: 1595kB
                                             ->  Nested Loop  (cost=1.30..125393.77 rows=41 width=48) (actual time=258.856..16578.323 rows=11910 loops=3)
                                                   ->  Nested Loop  (cost=0.87..124432.14 rows=1715 width=18) (actual time=257.183..12396.019 rows=12479 loops=3)
                                                         ->  Nested Loop  (cost=0.43..123056.67 rows=2845 width=24) (actual time=255.900..6247.908 rows=17406 loops=3)
                                                               ->  Parallel Seq Scan on userhistory uh  (cost=0.00..111330.98 rows=2845 width=14) (actual time=254.751..2499.947 rows=17406 loops=3)
                                                                     Filter: ((last_seen <= now()) AND (last_seen >= (now() - '30 days'::interval)))
                                                                     Rows Removed by Filter: 1983225
                                                               ->  Index Only Scan using title_pkey on title t2  (cost=0.43..4.12 rows=1 width=10) (actual time=0.214..0.214 rows=1 loops=52217)
                                                                     Index Cond: (id = (uh.title_id)::text)
                                                                     Heap Fetches: 0
                                                         ->  Index Scan using titleepisode_pkey on titleepisode te  (cost=0.43..0.48 rows=1 width=24) (actual time=0.352..0.352 rows=1 loops=52217)
                                                               Index Cond: ((title_id)::text = (t2.id)::text)
                                                               Filter: (season_number IS NOT NULL)
                                                               Rows Removed by Filter: 0
                                                   ->  Index Scan using title_pkey on title t  (cost=0.43..0.56 rows=1 width=30) (actual time=0.334..0.334 rows=1 loops=37438)
                                                         Index Cond: ((id)::text = (te.parent_title_id)::text)
                                                         Filter: ((title_type)::text = 'tvSeries'::text)
                                                         Rows Removed by Filter: 0
                                       ->  GroupAggregate  (cost=0.71..966324.87 rows=4468467 width=42) (actual time=1.526..14180.877 rows=9377752 loops=3)
                                             Group Key: tg.title_id
                                             ->  Nested Loop  (cost=0.71..834474.73 rows=15198860 width=17) (actual time=1.492..7860.382 rows=15198118 loops=3)
                                                   ->  Index Only Scan using titlegenre_pkey on titlegenre tg  (cost=0.56..462079.46 rows=15198860 width=14) (actual time=1.383..3083.769 rows=15198118 loops=3)
                                                         Heap Fetches: 0
                                                   ->  Memoize  (cost=0.15..0.17 rows=1 width=11) (actual time=0.000..0.000 rows=1 loops=45594354)
                                                         Cache Key: tg.genre_id
                                                         Cache Mode: logical
                                                         Hits: 15198088  Misses: 28  Evictions: 0  Overflows: 0  Memory Usage: 4kB
                                                         Worker 0:  Hits: 15198088  Misses: 28  Evictions: 0  Overflows: 0  Memory Usage: 4kB
                                                         Worker 1:  Hits: 15198094  Misses: 28  Evictions: 0  Overflows: 0  Memory Usage: 4kB
                                                         ->  Index Scan using genre_pkey on genre g  (cost=0.14..0.16 rows=1 width=11) (actual time=0.005..0.005 rows=1 loops=84)
                                                               Index Cond: (id = tg.genre_id)
                     ->  Memoize  (cost=0.30..1.61 rows=1 width=4) (actual time=0.008..0.008 rows=1 loops=34546)
                           Cache Key: uh.user_id
                           Cache Mode: logical
                           Hits: 5285  Misses: 29261  Evictions: 0  Overflows: 0  Memory Usage: 2964kB
                           ->  Index Scan using users_pkey on users u  (cost=0.29..1.60 rows=1 width=4) (actual time=0.008..0.008 rows=1 loops=29261)
                                 Index Cond: (id = uh.user_id)
                                 Filter: ((country_code)::text <> ALL ('{US,GB}'::text[]))
                                 Rows Removed by Filter: 0
 Planning Time: 17.793 ms
 JIT:
   Functions: 129
   Options: Inlining true, Optimization true, Expressions true, Deforming true
   Timing: Generation 7.930 ms, Inlining 306.282 ms, Optimization 584.812 ms, Emission 448.338 ms, Total 1347.361 ms
 Execution Time: 33597.605 ms
(67 rows)

