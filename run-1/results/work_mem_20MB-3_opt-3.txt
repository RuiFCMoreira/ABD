explain analyze SELECT n.id,
    n.primary_name,
    date_part('year', NOW())::int - n.birth_year AS age,
    count(*) AS roles
FROM name n
JOIN titlePrincipals tp ON tp.name_id = n.id
JOIN titlePrincipalsCharacters tpc ON tpc.title_id = tp.title_id
    AND tpc.name_id = tp.name_id
JOIN category c ON c.id = tp.category_id
JOIN title t ON t.id = tp.title_id
WHERE t.start_year >= date_part('year', NOW())::int - 10
    AND c.name = 'actress'
    AND n.death_year IS NULL
    AND t.title_type IN (
        'movie', 'tvSeries', 'tvMiniSeries', 'tvMovie'
    )
GROUP BY n.id
ORDER BY roles DESC
LIMIT 100;
                                                                                                           QUERY PLAN                                                                                                            
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1235444.98..1235445.01 rows=13 width=36) (actual time=32602.189..32630.793 rows=100 loops=1)
   ->  Sort  (cost=1235444.98..1235445.01 rows=13 width=36) (actual time=32088.719..32117.315 rows=100 loops=1)
         Sort Key: (count(*)) DESC
         Sort Method: top-N heapsort  Memory: 38kB
         ->  Finalize GroupAggregate  (cost=1235443.19..1235444.74 rows=13 width=36) (actual time=31820.930..32079.190 rows=183837 loops=1)
               Group Key: n.id
               ->  Gather Merge  (cost=1235443.19..1235444.43 rows=10 width=36) (actual time=31820.908..31985.876 rows=249770 loops=1)
                     Workers Planned: 2
                     Workers Launched: 2
                     ->  Partial GroupAggregate  (cost=1234443.16..1234443.25 rows=5 width=36) (actual time=31795.580..31868.120 rows=83257 loops=3)
                           Group Key: n.id
                           ->  Sort  (cost=1234443.16..1234443.17 rows=5 width=28) (actual time=31795.527..31823.048 rows=132116 loops=3)
                                 Sort Key: n.id
                                 Sort Method: quicksort  Memory: 15001kB
                                 Worker 0:  Sort Method: quicksort  Memory: 15152kB
                                 Worker 1:  Sort Method: quicksort  Memory: 14971kB
                                 ->  Nested Loop  (cost=233430.07..1234443.10 rows=5 width=28) (actual time=3784.641..31558.346 rows=132116 loops=3)
                                       ->  Nested Loop  (cost=233429.51..1234422.42 rows=5 width=20) (actual time=3757.444..16482.876 rows=132656 loops=3)
                                             ->  Hash Join  (cost=233428.95..997384.66 rows=88990 width=30) (actual time=3752.334..12649.905 rows=149480 loops=3)
                                                   Hash Cond: (tp.category_id = c.id)
                                                   ->  Parallel Hash Join  (cost=233427.79..993590.31 rows=1067874 width=34) (actual time=3457.560..12307.840 rows=766313 loops=3)
                                                         Hash Cond: ((tp.title_id)::text = (t.id)::text)
                                                         ->  Parallel Seq Scan on titleprincipals tp  (cost=0.00..699000.00 rows=23300000 width=24) (actual time=0.751..5840.376 rows=18639969 loops=3)
                                                         ->  Parallel Hash  (cost=231084.28..231084.28 rows=187481 width=10) (actual time=3408.580..3408.582 rows=117416 loops=3)
                                                               Buckets: 524288  Batches: 1  Memory Usage: 20640kB
                                                               ->  Parallel Seq Scan on title t  (cost=0.00..231084.28 rows=187481 width=10) (actual time=32.254..3345.845 rows=117416 loops=3)
                                                                     Filter: (((title_type)::text = ANY ('{movie,tvSeries,tvMiniSeries,tvMovie}'::text[])) AND (start_year >= ((date_part('year'::text, now()))::integer - 10)))
                                                                     Rows Removed by Filter: 3156125
                                                   ->  Hash  (cost=1.15..1.15 rows=1 width=4) (actual time=242.214..242.216 rows=1 loops=3)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Seq Scan on category c  (cost=0.00..1.15 rows=1 width=4) (actual time=242.194..242.197 rows=1 loops=3)
                                                               Filter: ((name)::text = 'actress'::text)
                                                               Rows Removed by Filter: 11
                                             ->  Index Only Scan using titleprincipalscharacters_pkey on titleprincipalscharacters tpc  (cost=0.56..2.65 rows=1 width=20) (actual time=0.025..0.025 rows=1 loops=448441)
                                                   Index Cond: ((title_id = (tp.title_id)::text) AND (name_id = (tp.name_id)::text))
                                                   Heap Fetches: 0
                                       ->  Index Scan using name_pkey on name n  (cost=0.56..4.14 rows=1 width=28) (actual time=0.113..0.113 rows=1 loops=397968)
                                             Index Cond: ((id)::text = (tp.name_id)::text)
                                             Filter: (death_year IS NULL)
                                             Rows Removed by Filter: 0
 Planning Time: 23.368 ms
 JIT:
   Functions: 115
   Options: Inlining true, Optimization true, Expressions true, Deforming true
   Timing: Generation 7.222 ms, Inlining 295.628 ms, Optimization 524.572 ms, Emission 420.330 ms, Total 1247.752 ms
 Execution Time: 33096.194 ms
(46 rows)

