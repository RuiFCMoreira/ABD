explain analyze SELECT t.id, t.primary_title, tg.genres, te.season_number, count(*) AS views
FROM title t
JOIN titleEpisode te ON te.parent_title_id = t.id
JOIN title t2 ON t2.id = te.title_id
JOIN userHistory uh ON uh.title_id = t2.id
JOIN users u ON u.id = uh.user_id
JOIN (
    SELECT tg.title_id, array_agg(g.name) AS genres
    FROM titleGenre tg
    JOIN genre g ON g.id = tg.genre_id
    GROUP BY tg.title_id
) tg ON tg.title_id = t.id
WHERE t.title_type = 'tvSeries'
    AND uh.last_seen BETWEEN NOW() - INTERVAL '30 days' AND NOW()
    AND te.season_number IS NOT NULL
    AND u.country_code NOT IN ('US', 'GB')
GROUP BY t.id, t.primary_title, tg.genres, te.season_number
ORDER BY count(*) DESC, t.id
LIMIT 100;
                                                                                                   QUERY PLAN                                                                                                    
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1156843.50..1156843.75 rows=100 width=74) (actual time=32671.560..32671.718 rows=100 loops=1)
   ->  Sort  (cost=1156843.50..1156881.10 rows=15042 width=74) (actual time=32084.103..32084.253 rows=100 loops=1)
         Sort Key: (count(*)) DESC, t.id
         Sort Method: top-N heapsort  Memory: 40kB
         ->  GroupAggregate  (cost=126449.20..1156268.60 rows=15042 width=74) (actual time=16900.319..32076.939 rows=21515 loops=1)
               Group Key: t.id, (array_agg(g.name)), te.season_number
               ->  Nested Loop  (cost=126449.20..1155967.76 rows=15042 width=66) (actual time=16899.389..32060.349 rows=34315 loops=1)
                     ->  Gather Merge  (cost=126448.90..1145266.35 rows=15196 width=70) (actual time=16898.436..31772.985 rows=34593 loops=1)
                           Workers Planned: 2
                           Workers Launched: 2
                           ->  Incremental Sort  (cost=125448.87..1142512.33 rows=6332 width=70) (actual time=16876.261..31631.976 rows=11531 loops=3)
                                 Sort Key: t.id, (array_agg(g.name)), te.season_number
                                 Presorted Key: t.id
                                 Full-sort Groups: 355  Sort Method: quicksort  Average Memory: 29kB  Peak Memory: 29kB
                                 Worker 0:  Full-sort Groups: 349  Sort Method: quicksort  Average Memory: 29kB  Peak Memory: 29kB
                                 Worker 1:  Full-sort Groups: 344  Sort Method: quicksort  Average Memory: 29kB  Peak Memory: 29kB
                                 ->  Merge Join  (cost=125288.26..1142227.39 rows=6332 width=70) (actual time=16868.481..31617.934 rows=11531 loops=3)
                                       Merge Cond: ((te.parent_title_id)::text = (tg.title_id)::text)
                                       ->  Sort  (cost=125287.55..125287.66 rows=41 width=48) (actual time=16799.616..16806.186 rows=11926 loops=3)
                                             Sort Key: t.id
                                             Sort Method: quicksort  Memory: 1612kB
                                             Worker 0:  Sort Method: quicksort  Memory: 1589kB
                                             Worker 1:  Sort Method: quicksort  Memory: 1577kB
                                             ->  Nested Loop  (cost=1.30..125286.46 rows=41 width=48) (actual time=255.704..16773.772 rows=11926 loops=3)
                                                   ->  Nested Loop  (cost=0.87..124333.16 rows=1700 width=18) (actual time=254.049..12491.115 rows=12497 loops=3)
                                                         ->  Nested Loop  (cost=0.43..122968.85 rows=2822 width=24) (actual time=252.590..6205.380 rows=17429 loops=3)
                                                               ->  Parallel Seq Scan on userhistory uh  (cost=0.00..111330.39 rows=2822 width=14) (actual time=251.506..2397.692 rows=17429 loops=3)
                                                                     Filter: ((last_seen <= now()) AND (last_seen >= (now() - '30 days'::interval)))
                                                                     Rows Removed by Filter: 1983202
                                                               ->  Index Only Scan using title_pkey on title t2  (cost=0.43..4.12 rows=1 width=10) (actual time=0.217..0.217 rows=1 loops=52286)
                                                                     Index Cond: (id = (uh.title_id)::text)
                                                                     Heap Fetches: 0
                                                         ->  Index Scan using titleepisode_pkey on titleepisode te  (cost=0.43..0.48 rows=1 width=24) (actual time=0.359..0.359 rows=1 loops=52286)
                                                               Index Cond: ((title_id)::text = (t2.id)::text)
                                                               Filter: (season_number IS NOT NULL)
                                                               Rows Removed by Filter: 0
                                                   ->  Index Scan using title_pkey on title t  (cost=0.43..0.56 rows=1 width=30) (actual time=0.341..0.341 rows=1 loops=37491)
                                                         Index Cond: ((id)::text = (te.parent_title_id)::text)
                                                         Filter: ((title_type)::text = 'tvSeries'::text)
                                                         Rows Removed by Filter: 0
                                       ->  GroupAggregate  (cost=0.71..963672.79 rows=4256313 width=42) (actual time=1.680..13838.073 rows=9377752 loops=3)
                                             Group Key: tg.title_id
                                             ->  Nested Loop  (cost=0.71..834474.57 rows=15198860 width=17) (actual time=1.649..7380.648 rows=15198118 loops=3)
                                                   ->  Index Only Scan using titlegenre_pkey on titlegenre tg  (cost=0.56..462079.46 rows=15198860 width=14) (actual time=1.513..2475.882 rows=15198118 loops=3)
                                                         Heap Fetches: 0
                                                   ->  Memoize  (cost=0.15..0.17 rows=1 width=11) (actual time=0.000..0.000 rows=1 loops=45594354)
                                                         Cache Key: tg.genre_id
                                                         Cache Mode: logical
                                                         Hits: 15198088  Misses: 28  Evictions: 0  Overflows: 0  Memory Usage: 4kB
                                                         Worker 0:  Hits: 15198088  Misses: 28  Evictions: 0  Overflows: 0  Memory Usage: 4kB
                                                         Worker 1:  Hits: 15198094  Misses: 28  Evictions: 0  Overflows: 0  Memory Usage: 4kB
                                                         ->  Index Scan using genre_pkey on genre g  (cost=0.14..0.16 rows=1 width=11) (actual time=0.005..0.005 rows=1 loops=84)
                                                               Index Cond: (id = tg.genre_id)
                     ->  Memoize  (cost=0.30..1.62 rows=1 width=4) (actual time=0.008..0.008 rows=1 loops=34593)
                           Cache Key: uh.user_id
                           Cache Mode: logical
                           Hits: 5298  Misses: 29295  Evictions: 0  Overflows: 0  Memory Usage: 2967kB
                           ->  Index Scan using users_pkey on users u  (cost=0.29..1.61 rows=1 width=4) (actual time=0.008..0.008 rows=1 loops=29295)
                                 Index Cond: (id = uh.user_id)
                                 Filter: ((country_code)::text <> ALL ('{US,GB}'::text[]))
                                 Rows Removed by Filter: 0
 Planning Time: 16.314 ms
 JIT:
   Functions: 129
   Options: Inlining true, Optimization true, Expressions true, Deforming true
   Timing: Generation 7.797 ms, Inlining 304.906 ms, Optimization 592.064 ms, Emission 444.516 ms, Total 1349.283 ms
 Execution Time: 33104.274 ms
(67 rows)

