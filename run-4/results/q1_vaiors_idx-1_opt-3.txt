explain analyze SELECT *
FROM (
    SELECT t.id,
        left(t.primary_title, 30),
        ((start_year / 10) * 10)::int AS decade,
        avg(uh.rating) AS rating,
        rank() over (
            PARTITION by ((start_year / 10) * 10) :: int
            ORDER BY avg(uh.rating) DESC, t.id
        ) AS rank
    FROM title t
    JOIN userHistory uh ON uh.title_id = t.id
    JOIN titleGenre TG ON tg.title_id = t.id AND tg.genre_id = 8
    WHERE t.title_type = 'movie'
        AND ((start_year / 10) * 10)::int >= 1980
        AND t.id IN (
            SELECT title_id
            FROM titleAkas
            WHERE region IN (
                'US', 'GB', 'ES', 'DE', 'FR', 'PT'
            )
        )
    GROUP BY t.id
    HAVING count(uh.rating) >= 3
    ORDER BY decade, rating DESC
) t_
WHERE rank <= 10;
                                                                                                QUERY PLAN                                                                                                 
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Subquery Scan on t_  (cost=214810.43..215029.39 rows=1717 width=86) (actual time=6137.695..6163.914 rows=50 loops=1)
   Filter: (t_.rank <= 10)
   Rows Removed by Filter: 1953
   ->  WindowAgg  (cost=214810.43..214964.99 rows=5152 width=86) (actual time=6137.690..6163.809 rows=2003 loops=1)
         ->  Sort  (cost=214810.43..214823.31 rows=5152 width=66) (actual time=6137.638..6162.233 rows=2003 loops=1)
               Sort Key: (((t.start_year / 10) * 10)), (avg(uh.rating)) DESC, t.id
               Sort Method: quicksort  Memory: 228kB
               ->  GroupAggregate  (cost=212268.50..214492.78 rows=5152 width=66) (actual time=6088.714..6158.383 rows=2003 loops=1)
                     Group Key: t.id
                     Filter: (count(uh.rating) >= 3)
                     Rows Removed by Filter: 40986
                     ->  Gather Merge  (cost=212268.50..214119.24 rows=15457 width=38) (actual time=6088.640..6129.771 rows=60678 loops=1)
                           Workers Planned: 4
                           Workers Launched: 4
                           ->  Sort  (cost=211268.44..211278.10 rows=3864 width=38) (actual time=6064.471..6065.211 rows=12136 loops=5)
                                 Sort Key: t.id
                                 Sort Method: quicksort  Memory: 1360kB
                                 Worker 0:  Sort Method: quicksort  Memory: 1364kB
                                 Worker 1:  Sort Method: quicksort  Memory: 1379kB
                                 Worker 2:  Sort Method: quicksort  Memory: 1365kB
                                 Worker 3:  Sort Method: quicksort  Memory: 1379kB
                                 ->  Nested Loop  (cost=1.56..211038.23 rows=3864 width=38) (actual time=57.035..6044.795 rows=12136 loops=5)
                                       Join Filter: ((t.id)::text = (uh.title_id)::text)
                                       ->  Nested Loop  (cost=1.12..209188.71 rows=874 width=54) (actual time=54.474..4291.347 rows=16513 loops=5)
                                             Join Filter: ((t.id)::text = (tg.title_id)::text)
                                             ->  Nested Loop Semi Join  (cost=0.56..204388.98 rows=3087 width=44) (actual time=44.961..3325.372 rows=47273 loops=5)
                                                   ->  Parallel Seq Scan on title t  (cost=0.00..167671.15 rows=53552 width=34) (actual time=43.293..1272.460 rows=77836 loops=5)
                                                         Filter: (((title_type)::text = 'movie'::text) AND (((start_year / 10) * 10) >= 1980))
                                                         Rows Removed by Filter: 1886289
                                                   ->  Index Only Scan using akas_id_region_idx on titleakas  (cost=0.56..4.31 rows=33 width=10) (actual time=0.026..0.026 rows=1 loops=389178)
                                                         Index Cond: (title_id = (t.id)::text)
                                                         Filter: ((region)::text = ANY ('{US,GB,ES,DE,FR,PT}'::text[]))
                                                         Rows Removed by Filter: 1
                                                         Heap Fetches: 0
                                             ->  Index Only Scan using idx_titlegenre_title_id_genre_id on titlegenre tg  (cost=0.56..1.54 rows=1 width=10) (actual time=0.020..0.020 rows=0 loops=236365)
                                                   Index Cond: ((title_id = (titleakas.title_id)::text) AND (genre_id = 8))
                                                   Heap Fetches: 0
                                       ->  Index Scan using userhistory_title_id on userhistory uh  (cost=0.43..2.09 rows=2 width=14) (actual time=0.082..0.105 rows=1 loops=82566)
                                             Index Cond: ((title_id)::text = (tg.title_id)::text)
 Planning Time: 17.831 ms
 JIT:
   Functions: 99
   Options: Inlining false, Optimization false, Expressions true, Deforming true
   Timing: Generation 7.825 ms, Inlining 0.000 ms, Optimization 6.342 ms, Emission 193.703 ms, Total 207.870 ms
 Execution Time: 6515.208 ms
(45 rows)

