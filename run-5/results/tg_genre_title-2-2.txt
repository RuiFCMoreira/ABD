explain analyze SELECT t.id, t.primary_title, tg.genres, te.season_number, count(*) AS views
FROM title t
JOIN titleEpisode te ON te.parent_title_id = t.id
JOIN title t2 ON t2.id = te.title_id
JOIN userHistory uh ON uh.title_id = t2.id
JOIN users u ON u.id = uh.user_id
JOIN (
    SELECT tg.title_id, array_agg(g.name) AS genres
    FROM titleGenre tg
    JOIN genre g ON g.id = tg.genre_id
    GROUP BY tg.title_id
) tg ON tg.title_id = t.id
WHERE t.title_type = 'tvSeries'
    AND uh.last_seen BETWEEN NOW() - INTERVAL '30 days' AND NOW()
    AND te.season_number IS NOT NULL
    AND u.country_code NOT IN ('US', 'GB')
GROUP BY t.id, t.primary_title, tg.genres, te.season_number
ORDER BY count(*) DESC, t.id
LIMIT 100;
                                                                                                   QUERY PLAN                                                                                                    
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1153493.97..1153494.22 rows=100 width=74) (actual time=22140.326..22140.471 rows=100 loops=1)
   ->  Sort  (cost=1153493.97..1153529.57 rows=14243 width=74) (actual time=21603.397..21603.534 rows=100 loops=1)
         Sort Key: (count(*)) DESC, t.id
         Sort Method: top-N heapsort  Memory: 41kB
         ->  GroupAggregate  (cost=126665.67..1152949.61 rows=14243 width=74) (actual time=6217.923..21601.214 rows=5322 loops=1)
               Group Key: t.id, (array_agg(g.name)), te.season_number
               ->  Nested Loop  (cost=126665.67..1152664.75 rows=14243 width=66) (actual time=6217.259..21596.950 rows=6446 loops=1)
                     ->  Gather Merge  (cost=126665.37..1141938.31 rows=14390 width=70) (actual time=6216.590..21474.276 rows=6506 loops=1)
                           Workers Planned: 2
                           Workers Launched: 2
                           ->  Incremental Sort  (cost=125665.34..1139277.32 rows=5996 width=70) (actual time=6194.707..20893.546 rows=2169 loops=3)
                                 Sort Key: t.id, (array_agg(g.name)), te.season_number
                                 Presorted Key: t.id
                                 Full-sort Groups: 70  Sort Method: quicksort  Average Memory: 30kB  Peak Memory: 30kB
                                 Worker 0:  Full-sort Groups: 67  Sort Method: quicksort  Average Memory: 29kB  Peak Memory: 29kB
                                 Worker 1:  Full-sort Groups: 67  Sort Method: quicksort  Average Memory: 29kB  Peak Memory: 29kB
                                 ->  Merge Join  (cost=125496.30..1139007.50 rows=5996 width=70) (actual time=6169.589..20889.815 rows=2169 loops=3)
                                       Merge Cond: ((te.parent_title_id)::text = (tg.title_id)::text)
                                       ->  Sort  (cost=125495.59..125495.70 rows=41 width=48) (actual time=6100.469..6102.197 rows=2248 loops=3)
                                             Sort Key: t.id
                                             Sort Method: quicksort  Memory: 330kB
                                             Worker 0:  Sort Method: quicksort  Memory: 320kB
                                             Worker 1:  Sort Method: quicksort  Memory: 319kB
                                             ->  Nested Loop  (cost=1.30..125494.50 rows=41 width=48) (actual time=254.483..6094.585 rows=2248 loops=3)
                                                   ->  Nested Loop  (cost=0.87..124526.42 rows=1726 width=18) (actual time=253.380..4956.579 rows=2345 loops=3)
                                                         ->  Nested Loop  (cost=0.43..123139.84 rows=2868 width=24) (actual time=251.586..3268.548 rows=3258 loops=3)
                                                               ->  Parallel Seq Scan on userhistory uh  (cost=0.00..111326.62 rows=2868 width=14) (actual time=250.683..2104.021 rows=3258 loops=3)
                                                                     Filter: ((last_seen <= now()) AND (last_seen >= (now() - '30 days'::interval)))
                                                                     Rows Removed by Filter: 1997373
                                                               ->  Index Only Scan using title_pkey on title t2  (cost=0.43..4.12 rows=1 width=10) (actual time=0.355..0.355 rows=1 loops=9774)
                                                                     Index Cond: (id = (uh.title_id)::text)
                                                                     Heap Fetches: 0
                                                         ->  Index Scan using titleepisode_pkey on titleepisode te  (cost=0.43..0.48 rows=1 width=24) (actual time=0.516..0.516 rows=1 loops=9774)
                                                               Index Cond: ((title_id)::text = (t2.id)::text)
                                                               Filter: (season_number IS NOT NULL)
                                                               Rows Removed by Filter: 0
                                                   ->  Index Scan using title_pkey on title t  (cost=0.43..0.56 rows=1 width=30) (actual time=0.482..0.482 rows=1 loops=7036)
                                                         Index Cond: ((id)::text = (te.parent_title_id)::text)
                                                         Filter: ((title_type)::text = 'tvSeries'::text)
                                                         Rows Removed by Filter: 0
                                       ->  GroupAggregate  (cost=0.71..961960.27 rows=4119299 width=42) (actual time=0.597..13823.962 rows=9373934 loops=3)
                                             Group Key: tg.title_id
                                             ->  Nested Loop  (cost=0.71..834474.73 rows=15198860 width=17) (actual time=0.560..7540.653 rows=15192045 loops=3)
                                                   ->  Index Only Scan using titlegenre_pkey on titlegenre tg  (cost=0.56..462079.46 rows=15198860 width=14) (actual time=0.505..2798.998 rows=15192045 loops=3)
                                                         Heap Fetches: 0
                                                   ->  Memoize  (cost=0.15..0.17 rows=1 width=11) (actual time=0.000..0.000 rows=1 loops=45576135)
                                                         Cache Key: tg.genre_id
                                                         Cache Mode: logical
                                                         Hits: 15197699  Misses: 28  Evictions: 0  Overflows: 0  Memory Usage: 4kB
                                                         Worker 0:  Hits: 15197777  Misses: 28  Evictions: 0  Overflows: 0  Memory Usage: 4kB
                                                         Worker 1:  Hits: 15180575  Misses: 28  Evictions: 0  Overflows: 0  Memory Usage: 4kB
                                                         ->  Index Scan using genre_pkey on genre g  (cost=0.14..0.16 rows=1 width=11) (actual time=0.004..0.004 rows=1 loops=84)
                                                               Index Cond: (id = tg.genre_id)
                     ->  Memoize  (cost=0.30..1.60 rows=1 width=4) (actual time=0.019..0.019 rows=1 loops=6506)
                           Cache Key: uh.user_id
                           Cache Mode: logical
                           Hits: 195  Misses: 6311  Evictions: 0  Overflows: 0  Memory Usage: 639kB
                           ->  Index Scan using users_pkey on users u  (cost=0.29..1.59 rows=1 width=4) (actual time=0.018..0.018 rows=1 loops=6311)
                                 Index Cond: (id = uh.user_id)
                                 Filter: ((country_code)::text <> ALL ('{US,GB}'::text[]))
                                 Rows Removed by Filter: 0
 Planning Time: 14.838 ms
 JIT:
   Functions: 129
   Options: Inlining true, Optimization true, Expressions true, Deforming true
   Timing: Generation 7.281 ms, Inlining 280.299 ms, Optimization 585.976 ms, Emission 422.543 ms, Total 1296.099 ms
 Execution Time: 22519.885 ms
(67 rows)

