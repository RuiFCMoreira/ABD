explain analyze SELECT n.id,
    n.primary_name,
    date_part('year', NOW())::int - n.birth_year AS age,
    count(*) AS roles
FROM name n
JOIN titlePrincipals tp ON tp.name_id = n.id
JOIN titlePrincipalsCharacters tpc ON tpc.title_id = tp.title_id
    AND tpc.name_id = tp.name_id
JOIN category c ON c.id = tp.category_id
JOIN title t ON t.id = tp.title_id
WHERE t.start_year >= date_part('year', NOW())::int - 10
    AND c.name = 'actress'
    AND n.death_year IS NULL
    AND t.title_type IN (
        'movie', 'tvSeries', 'tvMiniSeries', 'tvMovie'
    )
GROUP BY n.id
ORDER BY roles DESC
LIMIT 100;
                                                                                                           QUERY PLAN                                                                                                            
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1241633.60..1241633.63 rows=12 width=36) (actual time=26284.157..26390.968 rows=100 loops=1)
   ->  Sort  (cost=1241633.60..1241633.63 rows=12 width=36) (actual time=25806.240..25913.043 rows=100 loops=1)
         Sort Key: (count(*)) DESC
         Sort Method: top-N heapsort  Memory: 38kB
         ->  Finalize GroupAggregate  (cost=1241631.86..1241633.39 rows=12 width=36) (actual time=25529.156..25873.584 rows=183837 loops=1)
               Group Key: n.id
               ->  Gather Merge  (cost=1241631.86..1241633.10 rows=10 width=36) (actual time=25529.114..25774.914 rows=250013 loops=1)
                     Workers Planned: 2
                     Workers Launched: 2
                     ->  Partial GroupAggregate  (cost=1240631.83..1240631.92 rows=5 width=36) (actual time=25505.998..25578.781 rows=83338 loops=3)
                           Group Key: n.id
                           ->  Sort  (cost=1240631.83..1240631.84 rows=5 width=28) (actual time=25505.944..25533.033 rows=132116 loops=3)
                                 Sort Key: n.id
                                 Sort Method: quicksort  Memory: 13257kB
                                 Worker 0:  Sort Method: quicksort  Memory: 16638kB
                                 Worker 1:  Sort Method: quicksort  Memory: 16398kB
                                 ->  Nested Loop  (cost=233480.90..1240631.77 rows=5 width=28) (actual time=2811.370..25281.235 rows=132116 loops=3)
                                       ->  Nested Loop  (cost=233480.34..1240611.09 rows=5 width=20) (actual time=2783.170..14642.851 rows=132656 loops=3)
                                             ->  Hash Join  (cost=233479.78..997532.18 rows=91258 width=30) (actual time=2779.297..10361.357 rows=149480 loops=3)
                                                   Hash Cond: (tp.category_id = c.id)
                                                   ->  Parallel Hash Join  (cost=233478.62..993641.14 rows=1095097 width=34) (actual time=2502.855..10017.673 rows=766313 loops=3)
                                                         Hash Cond: ((tp.title_id)::text = (t.id)::text)
                                                         ->  Parallel Seq Scan on titleprincipals tp  (cost=0.00..699000.00 rows=23300000 width=24) (actual time=0.490..4582.448 rows=18639969 loops=3)
                                                         ->  Parallel Hash  (cost=231075.54..231075.54 rows=192246 width=10) (actual time=2468.112..2468.113 rows=117416 loops=3)
                                                               Buckets: 524288  Batches: 1  Memory Usage: 20672kB
                                                               ->  Parallel Seq Scan on title t  (cost=0.00..231075.54 rows=192246 width=10) (actual time=12.449..2406.793 rows=117416 loops=3)
                                                                     Filter: (((title_type)::text = ANY ('{movie,tvSeries,tvMiniSeries,tvMovie}'::text[])) AND (start_year >= ((date_part('year'::text, now()))::integer - 10)))
                                                                     Rows Removed by Filter: 3156125
                                                   ->  Hash  (cost=1.15..1.15 rows=1 width=4) (actual time=238.887..238.888 rows=1 loops=3)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Seq Scan on category c  (cost=0.00..1.15 rows=1 width=4) (actual time=238.875..238.877 rows=1 loops=3)
                                                               Filter: ((name)::text = 'actress'::text)
                                                               Rows Removed by Filter: 11
                                             ->  Index Only Scan using titleprincipalscharacters_pkey on titleprincipalscharacters tpc  (cost=0.56..2.65 rows=1 width=20) (actual time=0.028..0.028 rows=1 loops=448441)
                                                   Index Cond: ((title_id = (tp.title_id)::text) AND (name_id = (tp.name_id)::text))
                                                   Heap Fetches: 0
                                       ->  Index Scan using name_pkey on name n  (cost=0.56..4.14 rows=1 width=28) (actual time=0.079..0.079 rows=1 loops=397968)
                                             Index Cond: ((id)::text = (tp.name_id)::text)
                                             Filter: (death_year IS NULL)
                                             Rows Removed by Filter: 0
 Planning Time: 20.624 ms
 JIT:
   Functions: 115
   Options: Inlining true, Optimization true, Expressions true, Deforming true
   Timing: Generation 6.855 ms, Inlining 305.203 ms, Optimization 503.038 ms, Emission 386.818 ms, Total 1201.914 ms
 Execution Time: 26751.896 ms
(46 rows)

