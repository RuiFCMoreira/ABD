explain analyze SELECT n.id,
    n.primary_name,
    date_part('year', NOW())::int - n.birth_year AS age,
    count(*) AS roles
FROM name n
JOIN titlePrincipals tp ON tp.name_id = n.id
JOIN titlePrincipalsCharacters tpc ON tpc.title_id = tp.title_id
    AND tpc.name_id = tp.name_id
JOIN category c ON c.id = tp.category_id
JOIN title t ON t.id = tp.title_id
WHERE t.start_year >= date_part('year', NOW())::int - 10
    AND c.name = 'actress'
    AND n.death_year IS NULL
    AND t.title_type IN (
        'movie', 'tvSeries', 'tvMiniSeries', 'tvMovie'
    )
GROUP BY n.id
ORDER BY roles DESC
LIMIT 100;
                                                                                                           QUERY PLAN                                                                                                            
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1240311.39..1240311.42 rows=10 width=36) (actual time=26672.482..26781.841 rows=100 loops=1)
   ->  Sort  (cost=1240311.39..1240311.42 rows=10 width=36) (actual time=26193.517..26302.867 rows=100 loops=1)
         Sort Key: (count(*)) DESC
         Sort Method: top-N heapsort  Memory: 38kB
         ->  Finalize GroupAggregate  (cost=1240309.99..1240311.23 rows=10 width=36) (actual time=25922.385..26263.280 rows=183837 loops=1)
               Group Key: n.id
               ->  Gather Merge  (cost=1240309.99..1240310.99 rows=8 width=36) (actual time=25922.355..26166.492 rows=250017 loops=1)
                     Workers Planned: 2
                     Workers Launched: 2
                     ->  Partial GroupAggregate  (cost=1239309.97..1239310.04 rows=4 width=36) (actual time=25899.882..25972.519 rows=83339 loops=3)
                           Group Key: n.id
                           ->  Sort  (cost=1239309.97..1239309.98 rows=4 width=28) (actual time=25899.825..25926.940 rows=132116 loops=3)
                                 Sort Key: n.id
                                 Sort Method: quicksort  Memory: 16395kB
                                 Worker 0:  Sort Method: quicksort  Memory: 16494kB
                                 Worker 1:  Sort Method: quicksort  Memory: 16476kB
                                 ->  Nested Loop  (cost=233452.66..1239309.93 rows=4 width=28) (actual time=2864.803..25663.564 rows=132116 loops=3)
                                       ->  Nested Loop  (cost=233452.10..1239289.24 rows=5 width=20) (actual time=2823.038..14844.680 rows=132656 loops=3)
                                             ->  Hash Join  (cost=233451.54..997483.56 rows=90780 width=30) (actual time=2821.950..10513.133 rows=149480 loops=3)
                                                   Hash Cond: (tp.category_id = c.id)
                                                   ->  Parallel Hash Join  (cost=233450.38..993612.90 rows=1089360 width=34) (actual time=2568.871..10176.787 rows=766313 loops=3)
                                                         Hash Cond: ((tp.title_id)::text = (t.id)::text)
                                                         ->  Parallel Seq Scan on titleprincipals tp  (cost=0.00..699000.00 rows=23300000 width=24) (actual time=0.322..4617.525 rows=18639969 loops=3)
                                                         ->  Parallel Hash  (cost=231060.23..231060.23 rows=191212 width=10) (actual time=2537.243..2537.245 rows=117416 loops=3)
                                                               Buckets: 524288  Batches: 1  Memory Usage: 20672kB
                                                               ->  Parallel Seq Scan on title t  (cost=0.00..231060.23 rows=191212 width=10) (actual time=16.861..2474.810 rows=117416 loops=3)
                                                                     Filter: (((title_type)::text = ANY ('{movie,tvSeries,tvMiniSeries,tvMovie}'::text[])) AND (start_year >= ((date_part('year'::text, now()))::integer - 10)))
                                                                     Rows Removed by Filter: 3156125
                                                   ->  Hash  (cost=1.15..1.15 rows=1 width=4) (actual time=230.509..230.510 rows=1 loops=3)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Seq Scan on category c  (cost=0.00..1.15 rows=1 width=4) (actual time=230.490..230.492 rows=1 loops=3)
                                                               Filter: ((name)::text = 'actress'::text)
                                                               Rows Removed by Filter: 11
                                             ->  Index Only Scan using titleprincipalscharacters_pkey on titleprincipalscharacters tpc  (cost=0.56..2.65 rows=1 width=20) (actual time=0.028..0.028 rows=1 loops=448441)
                                                   Index Cond: ((title_id = (tp.title_id)::text) AND (name_id = (tp.name_id)::text))
                                                   Heap Fetches: 0
                                       ->  Index Scan using name_pkey on name n  (cost=0.56..4.14 rows=1 width=28) (actual time=0.081..0.081 rows=1 loops=397968)
                                             Index Cond: ((id)::text = (tp.name_id)::text)
                                             Filter: (death_year IS NULL)
                                             Rows Removed by Filter: 0
 Planning Time: 20.681 ms
 JIT:
   Functions: 115
   Options: Inlining true, Optimization true, Expressions true, Deforming true
   Timing: Generation 6.741 ms, Inlining 281.489 ms, Optimization 502.277 ms, Emission 387.222 ms, Total 1177.730 ms
 Execution Time: 27147.148 ms
(46 rows)

