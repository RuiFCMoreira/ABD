explain analyze SELECT t.id, t.primary_title, tg.genres, te.season_number, count(*) AS views
FROM title t
JOIN titleEpisode te ON te.parent_title_id = t.id
JOIN title t2 ON t2.id = te.title_id
JOIN userHistory uh ON uh.title_id = t2.id
JOIN users u ON u.id = uh.user_id
JOIN (
    SELECT tg.title_id, array_agg(g.name) AS genres
    FROM titleGenre tg
    JOIN genre g ON g.id = tg.genre_id
    GROUP BY tg.title_id
) tg ON tg.title_id = t.id
WHERE t.title_type = 'tvSeries'
    AND uh.last_seen BETWEEN NOW() - INTERVAL '30 days' AND NOW()
    AND te.season_number IS NOT NULL
    AND u.country_code NOT IN ('US', 'GB')
GROUP BY t.id, t.primary_title, tg.genres, te.season_number
ORDER BY count(*) DESC, t.id
LIMIT 100;
                                                                                                   QUERY PLAN                                                                                                    
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1126387.93..1126388.18 rows=100 width=74) (actual time=32237.687..32297.210 rows=100 loops=1)
   ->  Sort  (cost=1126387.93..1126402.44 rows=5803 width=74) (actual time=31695.982..31755.499 rows=100 loops=1)
         Sort Key: (count(*)) DESC, t.id
         Sort Method: top-N heapsort  Memory: 40kB
         ->  Finalize GroupAggregate  (cost=118927.91..1126166.14 rows=5803 width=74) (actual time=16493.928..31749.309 rows=20583 loops=1)
               Group Key: t.id, (array_agg(g.name)), te.season_number
               ->  Gather Merge  (cost=118927.91..1126059.75 rows=4836 width=74) (actual time=16493.911..31737.418 rows=24960 loops=1)
                     Workers Planned: 2
                     Workers Launched: 2
                     ->  Partial GroupAggregate  (cost=117927.88..1124501.53 rows=2418 width=74) (actual time=16472.797..30971.457 rows=8320 loops=3)
                           Group Key: t.id, (array_agg(g.name)), te.season_number
                           ->  Incremental Sort  (cost=117927.88..1124453.17 rows=2418 width=66) (actual time=16472.757..30965.641 rows=10808 loops=3)
                                 Sort Key: t.id, (array_agg(g.name)), te.season_number
                                 Presorted Key: t.id
                                 Full-sort Groups: 329  Sort Method: quicksort  Average Memory: 29kB  Peak Memory: 29kB
                                 Worker 0:  Full-sort Groups: 329  Sort Method: quicksort  Average Memory: 29kB  Peak Memory: 29kB
                                 Worker 1:  Full-sort Groups: 326  Sort Method: quicksort  Average Memory: 29kB  Peak Memory: 29kB
                                 ->  Merge Join  (cost=117511.48..1124344.36 rows=2418 width=66) (actual time=16463.993..30954.817 rows=10808 loops=3)
                                       Merge Cond: ((te.parent_title_id)::text = (tg.title_id)::text)
                                       ->  Sort  (cost=117510.78..117510.82 rows=18 width=44) (actual time=16393.379..16398.713 rows=11175 loops=3)
                                             Sort Key: t.id
                                             Sort Method: quicksort  Memory: 1414kB
                                             Worker 0:  Sort Method: quicksort  Memory: 1413kB
                                             Worker 1:  Sort Method: quicksort  Memory: 1395kB
                                             ->  Nested Loop  (cost=1.59..117510.40 rows=18 width=44) (actual time=281.699..16375.859 rows=11175 loops=3)
                                                   ->  Nested Loop  (cost=1.30..117456.58 rows=18 width=48) (actual time=281.660..16316.505 rows=11267 loops=3)
                                                         ->  Nested Loop  (cost=0.87..117052.80 rows=720 width=18) (actual time=280.222..12233.193 rows=11808 loops=3)
                                                               ->  Nested Loop  (cost=0.43..116475.04 rows=1195 width=24) (actual time=278.850..6180.941 rows=16471 loops=3)
                                                                     ->  Parallel Seq Scan on userhistory uh  (cost=0.00..111327.69 rows=1195 width=14) (actual time=277.727..2489.682 rows=16471 loops=3)
                                                                           Filter: ((last_seen <= now()) AND (last_seen >= (now() - '30 days'::interval)))
                                                                           Rows Removed by Filter: 1984160
                                                                     ->  Index Only Scan using title_pkey on title t2  (cost=0.43..4.31 rows=1 width=10) (actual time=0.223..0.223 rows=1 loops=49413)
                                                                           Index Cond: (id = (uh.title_id)::text)
                                                                           Heap Fetches: 0
                                                               ->  Index Scan using titleepisode_pkey on titleepisode te  (cost=0.43..0.48 rows=1 width=24) (actual time=0.366..0.366 rows=1 loops=49413)
                                                                     Index Cond: ((title_id)::text = (t2.id)::text)
                                                                     Filter: (season_number IS NOT NULL)
                                                                     Rows Removed by Filter: 0
                                                         ->  Index Scan using title_pkey on title t  (cost=0.43..0.56 rows=1 width=30) (actual time=0.345..0.345 rows=1 loops=35423)
                                                               Index Cond: ((id)::text = (te.parent_title_id)::text)
                                                               Filter: ((title_type)::text = 'tvSeries'::text)
                                                               Rows Removed by Filter: 0
                                                   ->  Index Scan using users_pkey on users u  (cost=0.29..2.99 rows=1 width=4) (actual time=0.004..0.004 rows=1 loops=33801)
                                                         Index Cond: (id = uh.user_id)
                                                         Filter: ((country_code)::text <> ALL ('{US,GB}'::text[]))
                                                         Rows Removed by Filter: 0
                                       ->  GroupAggregate  (cost=0.71..958638.83 rows=3853584 width=42) (actual time=1.473..13582.844 rows=9377679 loops=3)
                                             Group Key: tg.title_id
                                             ->  Nested Loop  (cost=0.71..834474.73 rows=15198860 width=17) (actual time=1.444..7599.509 rows=15197988 loops=3)
                                                   ->  Index Only Scan using titlegenre_pkey on titlegenre tg  (cost=0.56..462079.46 rows=15198860 width=14) (actual time=1.375..2965.160 rows=15197988 loops=3)
                                                         Heap Fetches: 0
                                                   ->  Memoize  (cost=0.15..0.17 rows=1 width=11) (actual time=0.000..0.000 rows=1 loops=45593965)
                                                         Cache Key: tg.genre_id
                                                         Cache Mode: logical
                                                         Hits: 15198094  Misses: 28  Evictions: 0  Overflows: 0  Memory Usage: 4kB
                                                         Worker 0:  Hits: 15197699  Misses: 28  Evictions: 0  Overflows: 0  Memory Usage: 4kB
                                                         Worker 1:  Hits: 15198088  Misses: 28  Evictions: 0  Overflows: 0  Memory Usage: 4kB
                                                         ->  Index Scan using genre_pkey on genre g  (cost=0.14..0.16 rows=1 width=11) (actual time=0.003..0.003 rows=1 loops=84)
                                                               Index Cond: (id = tg.genre_id)
 Planning Time: 14.875 ms
 JIT:
   Functions: 148
   Options: Inlining true, Optimization true, Expressions true, Deforming true
   Timing: Generation 8.296 ms, Inlining 268.655 ms, Optimization 625.062 ms, Emission 481.447 ms, Total 1383.460 ms
 Execution Time: 32708.856 ms
(65 rows)

