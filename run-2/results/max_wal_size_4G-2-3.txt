explain analyze SELECT t.id, t.primary_title, tg.genres, te.season_number, count(*) AS views
FROM title t
JOIN titleEpisode te ON te.parent_title_id = t.id
JOIN title t2 ON t2.id = te.title_id
JOIN userHistory uh ON uh.title_id = t2.id
JOIN users u ON u.id = uh.user_id
JOIN (
    SELECT tg.title_id, array_agg(g.name) AS genres
    FROM titleGenre tg
    JOIN genre g ON g.id = tg.genre_id
    GROUP BY tg.title_id
) tg ON tg.title_id = t.id
WHERE t.title_type = 'tvSeries'
    AND uh.last_seen BETWEEN NOW() - INTERVAL '30 days' AND NOW()
    AND te.season_number IS NOT NULL
    AND u.country_code NOT IN ('US', 'GB')
GROUP BY t.id, t.primary_title, tg.genres, te.season_number
ORDER BY count(*) DESC, t.id
LIMIT 100;
                                                                                                   QUERY PLAN                                                                                                    
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1129975.27..1129975.52 rows=100 width=74) (actual time=28521.555..28521.687 rows=100 loops=1)
   ->  Sort  (cost=1129975.27..1130005.56 rows=12117 width=74) (actual time=28004.312..28004.437 rows=100 loops=1)
         Sort Key: (count(*)) DESC, t.id
         Sort Method: top-N heapsort  Memory: 40kB
         ->  Finalize GroupAggregate  (cost=126610.17..1129512.17 rows=12117 width=74) (actual time=14873.494..27999.312 rows=20632 loops=1)
               Group Key: t.id, (array_agg(g.name)), te.season_number
               ->  Gather Merge  (cost=126610.17..1129290.02 rows=10098 width=74) (actual time=14873.478..27989.691 rows=25027 loops=1)
                     Workers Planned: 2
                     Workers Launched: 2
                     ->  Partial GroupAggregate  (cost=125610.14..1127124.44 rows=5049 width=74) (actual time=14849.274..27500.087 rows=8342 loops=3)
                           Group Key: t.id, (array_agg(g.name)), te.season_number
                           ->  Incremental Sort  (cost=125610.14..1127023.46 rows=5049 width=66) (actual time=14849.253..27495.430 rows=10840 loops=3)
                                 Sort Key: t.id, (array_agg(g.name)), te.season_number
                                 Presorted Key: t.id
                                 Full-sort Groups: 329  Sort Method: quicksort  Average Memory: 29kB  Peak Memory: 29kB
                                 Worker 0:  Full-sort Groups: 330  Sort Method: quicksort  Average Memory: 29kB  Peak Memory: 29kB
                                 Worker 1:  Full-sort Groups: 330  Sort Method: quicksort  Average Memory: 29kB  Peak Memory: 29kB
                                 ->  Merge Join  (cost=125411.80..1126796.25 rows=5049 width=66) (actual time=14843.264..27487.500 rows=10840 loops=3)
                                       Merge Cond: ((te.parent_title_id)::text = (tg.title_id)::text)
                                       ->  Sort  (cost=125411.09..125411.19 rows=39 width=44) (actual time=14780.715..14784.489 rows=11207 loops=3)
                                             Sort Key: t.id
                                             Sort Method: quicksort  Memory: 1404kB
                                             Worker 0:  Sort Method: quicksort  Memory: 1421kB
                                             Worker 1:  Sort Method: quicksort  Memory: 1406kB
                                             ->  Nested Loop  (cost=1.59..125410.06 rows=39 width=44) (actual time=257.583..14762.798 rows=11207 loops=3)
                                                   ->  Nested Loop  (cost=1.30..125347.45 rows=39 width=48) (actual time=257.540..14722.358 rows=11300 loops=3)
                                                         ->  Nested Loop  (cost=0.87..124392.45 rows=1702 width=18) (actual time=255.930..10971.084 rows=11843 loops=3)
                                                               ->  Nested Loop  (cost=0.43..123021.42 rows=2836 width=24) (actual time=254.481..5466.237 rows=16517 loops=3)
                                                                     ->  Parallel Seq Scan on userhistory uh  (cost=0.00..111329.18 rows=2836 width=14) (actual time=253.539..2115.860 rows=16517 loops=3)
                                                                           Filter: ((last_seen <= now()) AND (last_seen >= (now() - '30 days'::interval)))
                                                                           Rows Removed by Filter: 1984114
                                                                     ->  Index Only Scan using title_pkey on title t2  (cost=0.43..4.12 rows=1 width=10) (actual time=0.202..0.202 rows=1 loops=49550)
                                                                           Index Cond: (id = (uh.title_id)::text)
                                                                           Heap Fetches: 0
                                                               ->  Index Scan using titleepisode_pkey on titleepisode te  (cost=0.43..0.48 rows=1 width=24) (actual time=0.333..0.333 rows=1 loops=49550)
                                                                     Index Cond: ((title_id)::text = (t2.id)::text)
                                                                     Filter: (season_number IS NOT NULL)
                                                                     Rows Removed by Filter: 0
                                                         ->  Index Scan using title_pkey on title t  (cost=0.43..0.56 rows=1 width=30) (actual time=0.316..0.316 rows=1 loops=35528)
                                                               Index Cond: ((id)::text = (te.parent_title_id)::text)
                                                               Filter: ((title_type)::text = 'tvSeries'::text)
                                                               Rows Removed by Filter: 0
                                                   ->  Index Scan using users_pkey on users u  (cost=0.29..1.61 rows=1 width=4) (actual time=0.003..0.003 rows=1 loops=33901)
                                                         Index Cond: (id = uh.user_id)
                                                         Filter: ((country_code)::text <> ALL ('{US,GB}'::text[]))
                                                         Rows Removed by Filter: 0
                                       ->  GroupAggregate  (cost=0.71..955901.59 rows=3634605 width=42) (actual time=0.513..11825.870 rows=9377623 loops=3)
                                             Group Key: tg.title_id
                                             ->  Nested Loop  (cost=0.71..834474.73 rows=15198860 width=17) (actual time=0.484..6338.633 rows=15197885 loops=3)
                                                   ->  Index Only Scan using titlegenre_pkey on titlegenre tg  (cost=0.56..462079.46 rows=15198860 width=14) (actual time=0.442..2259.274 rows=15197885 loops=3)
                                                         Heap Fetches: 0
                                                   ->  Memoize  (cost=0.15..0.17 rows=1 width=11) (actual time=0.000..0.000 rows=1 loops=45593654)
                                                         Cache Key: tg.genre_id
                                                         Cache Mode: logical
                                                         Hits: 15197777  Misses: 28  Evictions: 0  Overflows: 0  Memory Usage: 4kB
                                                         Worker 0:  Hits: 15197699  Misses: 28  Evictions: 0  Overflows: 0  Memory Usage: 4kB
                                                         Worker 1:  Hits: 15198094  Misses: 28  Evictions: 0  Overflows: 0  Memory Usage: 4kB
                                                         ->  Index Scan using genre_pkey on genre g  (cost=0.14..0.16 rows=1 width=11) (actual time=0.002..0.002 rows=1 loops=84)
                                                               Index Cond: (id = tg.genre_id)
 Planning Time: 14.824 ms
 JIT:
   Functions: 148
   Options: Inlining true, Optimization true, Expressions true, Deforming true
   Timing: Generation 7.935 ms, Inlining 248.553 ms, Optimization 589.698 ms, Emission 439.227 ms, Total 1285.413 ms
 Execution Time: 28915.280 ms
(65 rows)

