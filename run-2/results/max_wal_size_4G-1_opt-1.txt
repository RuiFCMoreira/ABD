explain analyze SELECT *
FROM (
    SELECT t.id,
        left(t.primary_title, 30),
        ((start_year / 10) * 10)::int AS decade,
        avg(uh.rating) AS rating,
        rank() over (
            PARTITION by ((start_year / 10) * 10) :: int
            ORDER BY avg(uh.rating) DESC, t.id
        ) AS rank
    FROM title t
    JOIN userHistory uh ON uh.title_id = t.id
    JOIN titleGenre TG ON tg.title_id = t.id AND tg.genre_id = 8
    WHERE t.title_type = 'movie'
        AND ((start_year / 10) * 10)::int >= 1980
        AND t.id IN (
            SELECT title_id
            FROM titleAkas
            WHERE region IN (
                'US', 'GB', 'ES', 'DE', 'FR', 'PT'
            )
        )
    GROUP BY t.id
    HAVING count(uh.rating) >= 3
    ORDER BY decade, rating DESC
) t_
WHERE rank <= 10;
                                                                                           QUERY PLAN                                                                                            
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Subquery Scan on t_  (cost=422327.63..422515.48 rows=1473 width=86) (actual time=43209.414..43260.716 rows=50 loops=1)
   Filter: (t_.rank <= 10)
   Rows Removed by Filter: 1953
   ->  WindowAgg  (cost=422327.63..422460.23 rows=4420 width=86) (actual time=43209.409..43260.611 rows=2003 loops=1)
         ->  Sort  (cost=422327.63..422338.68 rows=4420 width=66) (actual time=43209.372..43259.146 rows=2003 loops=1)
               Sort Key: (((t.start_year / 10) * 10)), (avg(uh.rating)) DESC, t.id
               Sort Method: quicksort  Memory: 228kB
               ->  Finalize GroupAggregate  (cost=420370.18..422060.00 rows=4420 width=66) (actual time=43157.908..43255.456 rows=2003 loops=1)
                     Group Key: t.id
                     Filter: (count(uh.rating) >= 3)
                     Rows Removed by Filter: 40986
                     ->  Gather Merge  (cost=420370.18..421756.12 rows=11050 width=74) (actual time=43157.873..43228.578 rows=45095 loops=1)
                           Workers Planned: 2
                           Workers Launched: 2
                           ->  Partial GroupAggregate  (cost=419370.16..419480.66 rows=5525 width=74) (actual time=43137.266..43147.470 rows=15032 loops=3)
                                 Group Key: t.id
                                 ->  Sort  (cost=419370.16..419383.97 rows=5525 width=38) (actual time=43137.215..43139.192 rows=20226 loops=3)
                                       Sort Key: t.id
                                       Sort Method: quicksort  Memory: 2435kB
                                       Worker 0:  Sort Method: quicksort  Memory: 2380kB
                                       Worker 1:  Sort Method: quicksort  Memory: 2416kB
                                       ->  Nested Loop  (cost=202212.09..419026.73 rows=5525 width=38) (actual time=5431.909..43107.694 rows=20226 loops=3)
                                             ->  Nested Loop Semi Join  (cost=202211.53..408016.75 rows=8277 width=58) (actual time=5426.173..36072.069 rows=58327 loops=3)
                                                   ->  Parallel Hash Join  (cost=202210.97..313963.33 rows=54434 width=48) (actual time=5424.147..6037.894 rows=96250 loops=3)
                                                         Hash Cond: ((uh.title_id)::text = (t.id)::text)
                                                         ->  Parallel Seq Scan on userhistory uh  (cost=0.00..80069.81 rows=2500781 width=14) (actual time=0.275..1881.139 rows=2000631 loops=3)
                                                         ->  Parallel Hash  (cost=200401.99..200401.99 rows=89038 width=34) (actual time=3119.053..3119.054 rows=129726 loops=3)
                                                               Buckets: 65536  Batches: 8  Memory Usage: 3840kB
                                                               ->  Parallel Seq Scan on title t  (cost=0.00..200401.99 rows=89038 width=34) (actual time=59.043..3066.526 rows=129726 loops=3)
                                                                     Filter: (((title_type)::text = 'movie'::text) AND (((start_year / 10) * 10) >= 1980))
                                                                     Rows Removed by Filter: 3143815
                                                   ->  Index Scan using titleakas_pkey on titleakas  (cost=0.56..35.99 rows=35 width=10) (actual time=0.311..0.311 rows=1 loops=288751)
                                                         Index Cond: ((title_id)::text = (uh.title_id)::text)
                                                         Filter: ((region)::text = ANY ('{US,GB,ES,DE,FR,PT}'::text[]))
                                                         Rows Removed by Filter: 1
                                             ->  Index Only Scan using titlegenre_pkey on titlegenre tg  (cost=0.56..1.33 rows=1 width=10) (actual time=0.120..0.120 rows=0 loops=174982)
                                                   Index Cond: ((title_id = (uh.title_id)::text) AND (genre_id = 8))
                                                   Heap Fetches: 0
 Planning Time: 14.661 ms
 JIT:
   Functions: 90
   Options: Inlining false, Optimization false, Expressions true, Deforming true
   Timing: Generation 6.369 ms, Inlining 0.000 ms, Optimization 5.881 ms, Emission 162.557 ms, Total 174.808 ms
 Execution Time: 43669.279 ms
(44 rows)

