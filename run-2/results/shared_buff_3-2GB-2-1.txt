explain analyze SELECT t.id, t.primary_title, tg.genres, te.season_number, count(*) AS views
FROM title t
JOIN titleEpisode te ON te.parent_title_id = t.id
JOIN title t2 ON t2.id = te.title_id
JOIN userHistory uh ON uh.title_id = t2.id
JOIN users u ON u.id = uh.user_id
JOIN (
    SELECT tg.title_id, array_agg(g.name) AS genres
    FROM titleGenre tg
    JOIN genre g ON g.id = tg.genre_id
    GROUP BY tg.title_id
) tg ON tg.title_id = t.id
WHERE t.title_type = 'tvSeries'
    AND uh.last_seen BETWEEN NOW() - INTERVAL '30 days' AND NOW()
    AND te.season_number IS NOT NULL
    AND u.country_code NOT IN ('US', 'GB')
GROUP BY t.id, t.primary_title, tg.genres, te.season_number
ORDER BY count(*) DESC, t.id
LIMIT 100;
                                                                                                   QUERY PLAN                                                                                                    
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1156412.40..1156412.65 rows=100 width=74) (actual time=30812.754..30877.494 rows=100 loops=1)
   ->  Sort  (cost=1156412.40..1156430.06 rows=7064 width=74) (actual time=30296.519..30361.252 rows=100 loops=1)
         Sort Key: (count(*)) DESC, t.id
         Sort Method: top-N heapsort  Memory: 40kB
         ->  GroupAggregate  (cost=118805.21..1156142.42 rows=7064 width=74) (actual time=15498.654..30355.040 rows=20583 loops=1)
               Group Key: t.id, (array_agg(g.name)), te.season_number
               ->  Nested Loop  (cost=118805.21..1156001.14 rows=7064 width=66) (actual time=15497.933..30339.781 rows=32426 loops=1)
                     ->  Gather Merge  (cost=118804.91..1147451.50 rows=7064 width=70) (actual time=15497.050..30078.139 rows=32688 loops=1)
                           Workers Planned: 2
                           Workers Launched: 2
                           ->  Incremental Sort  (cost=117804.89..1145636.11 rows=2943 width=70) (actual time=15476.281..29827.306 rows=10896 loops=3)
                                 Sort Key: t.id, (array_agg(g.name)), te.season_number
                                 Presorted Key: t.id
                                 Full-sort Groups: 327  Sort Method: quicksort  Average Memory: 29kB  Peak Memory: 29kB
                                 Worker 0:  Full-sort Groups: 332  Sort Method: quicksort  Average Memory: 29kB  Peak Memory: 29kB
                                 Worker 1:  Full-sort Groups: 335  Sort Method: quicksort  Average Memory: 29kB  Peak Memory: 29kB
                                 ->  Merge Join  (cost=117455.56..1145503.68 rows=2943 width=70) (actual time=15469.011..29816.734 rows=10896 loops=3)
                                       Merge Cond: ((te.parent_title_id)::text = (tg.title_id)::text)
                                       ->  Sort  (cost=117454.85..117454.89 rows=17 width=48) (actual time=15401.169..15406.377 rows=11268 loops=3)
                                             Sort Key: t.id
                                             Sort Method: quicksort  Memory: 1506kB
                                             Worker 0:  Sort Method: quicksort  Memory: 1537kB
                                             Worker 1:  Sort Method: quicksort  Memory: 1536kB
                                             ->  Nested Loop  (cost=1.30..117454.50 rows=17 width=48) (actual time=237.385..15382.308 rows=11268 loops=3)
                                                   ->  Nested Loop  (cost=0.87..117050.32 rows=721 width=18) (actual time=235.630..11505.011 rows=11809 loops=3)
                                                         ->  Nested Loop  (cost=0.43..116473.04 rows=1194 width=24) (actual time=233.295..5869.536 rows=16473 loops=3)
                                                               ->  Parallel Seq Scan on userhistory uh  (cost=0.00..111330.07 rows=1194 width=14) (actual time=232.330..2357.519 rows=16473 loops=3)
                                                                     Filter: ((last_seen <= now()) AND (last_seen >= (now() - '30 days'::interval)))
                                                                     Rows Removed by Filter: 1984158
                                                               ->  Index Only Scan using title_pkey on title t2  (cost=0.43..4.31 rows=1 width=10) (actual time=0.212..0.212 rows=1 loops=49418)
                                                                     Index Cond: (id = (uh.title_id)::text)
                                                                     Heap Fetches: 0
                                                         ->  Index Scan using titleepisode_pkey on titleepisode te  (cost=0.43..0.48 rows=1 width=24) (actual time=0.341..0.341 rows=1 loops=49418)
                                                               Index Cond: ((title_id)::text = (t2.id)::text)
                                                               Filter: (season_number IS NOT NULL)
                                                               Rows Removed by Filter: 0
                                                   ->  Index Scan using title_pkey on title t  (cost=0.43..0.56 rows=1 width=30) (actual time=0.327..0.327 rows=1 loops=35426)
                                                         Index Cond: ((id)::text = (te.parent_title_id)::text)
                                                         Filter: ((title_type)::text = 'tvSeries'::text)
                                                         Rows Removed by Filter: 0
                                       ->  GroupAggregate  (cost=0.71..969234.98 rows=4702758 width=42) (actual time=1.283..13371.260 rows=9377679 loops=3)
                                             Group Key: tg.title_id
                                             ->  Nested Loop  (cost=0.71..834458.28 rows=15198444 width=17) (actual time=1.253..7304.084 rows=15197988 loops=3)
                                                   ->  Index Only Scan using titlegenre_pkey on titlegenre tg  (cost=0.56..462073.22 rows=15198444 width=14) (actual time=1.178..2703.186 rows=15197988 loops=3)
                                                         Heap Fetches: 0
                                                   ->  Memoize  (cost=0.15..0.17 rows=1 width=11) (actual time=0.000..0.000 rows=1 loops=45593965)
                                                         Cache Key: tg.genre_id
                                                         Cache Mode: logical
                                                         Hits: 15197699  Misses: 28  Evictions: 0  Overflows: 0  Memory Usage: 4kB
                                                         Worker 0:  Hits: 15198088  Misses: 28  Evictions: 0  Overflows: 0  Memory Usage: 4kB
                                                         Worker 1:  Hits: 15198094  Misses: 28  Evictions: 0  Overflows: 0  Memory Usage: 4kB
                                                         ->  Index Scan using genre_pkey on genre g  (cost=0.14..0.16 rows=1 width=11) (actual time=0.003..0.003 rows=1 loops=84)
                                                               Index Cond: (id = tg.genre_id)
                     ->  Memoize  (cost=0.30..3.00 rows=1 width=4) (actual time=0.008..0.008 rows=1 loops=32688)
                           Cache Key: uh.user_id
                           Cache Mode: logical
                           Hits: 4750  Misses: 27938  Evictions: 0  Overflows: 0  Memory Usage: 2830kB
                           ->  Index Scan using users_pkey on users u  (cost=0.29..2.99 rows=1 width=4) (actual time=0.008..0.008 rows=1 loops=27938)
                                 Index Cond: (id = uh.user_id)
                                 Filter: ((country_code)::text <> ALL ('{US,GB}'::text[]))
                                 Rows Removed by Filter: 0
 Planning Time: 14.885 ms
 JIT:
   Functions: 129
   Options: Inlining true, Optimization true, Expressions true, Deforming true
   Timing: Generation 7.452 ms, Inlining 273.367 ms, Optimization 538.039 ms, Emission 400.399 ms, Total 1219.257 ms
 Execution Time: 31277.035 ms
(67 rows)

