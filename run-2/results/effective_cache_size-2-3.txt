explain analyze SELECT t.id, t.primary_title, tg.genres, te.season_number, count(*) AS views
FROM title t
JOIN titleEpisode te ON te.parent_title_id = t.id
JOIN title t2 ON t2.id = te.title_id
JOIN userHistory uh ON uh.title_id = t2.id
JOIN users u ON u.id = uh.user_id
JOIN (
    SELECT tg.title_id, array_agg(g.name) AS genres
    FROM titleGenre tg
    JOIN genre g ON g.id = tg.genre_id
    GROUP BY tg.title_id
) tg ON tg.title_id = t.id
WHERE t.title_type = 'tvSeries'
    AND uh.last_seen BETWEEN NOW() - INTERVAL '30 days' AND NOW()
    AND te.season_number IS NOT NULL
    AND u.country_code NOT IN ('US', 'GB')
GROUP BY t.id, t.primary_title, tg.genres, te.season_number
ORDER BY count(*) DESC, t.id
LIMIT 100;
                                                                                                   QUERY PLAN                                                                                                    
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1124779.86..1124780.11 rows=100 width=74) (actual time=33843.166..33843.364 rows=100 loops=1)
   ->  Sort  (cost=1124779.86..1124794.46 rows=5843 width=74) (actual time=33163.251..33163.442 rows=100 loops=1)
         Sort Key: (count(*)) DESC, t.id
         Sort Method: top-N heapsort  Memory: 40kB
         ->  Finalize GroupAggregate  (cost=118939.42..1124556.54 rows=5843 width=74) (actual time=17215.996..33156.479 rows=20672 loops=1)
               Group Key: t.id, (array_agg(g.name)), te.season_number
               ->  Gather Merge  (cost=118939.42..1124449.41 rows=4870 width=74) (actual time=17215.949..33143.515 rows=25046 loops=1)
                     Workers Planned: 2
                     Workers Launched: 2
                     ->  Partial GroupAggregate  (cost=117939.40..1122887.27 rows=2435 width=74) (actual time=17189.303..32619.132 rows=8349 loops=3)
                           Group Key: t.id, (array_agg(g.name)), te.season_number
                           ->  Incremental Sort  (cost=117939.40..1122838.57 rows=2435 width=66) (actual time=17189.267..32612.491 rows=10865 loops=3)
                                 Sort Key: t.id, (array_agg(g.name)), te.season_number
                                 Presorted Key: t.id
                                 Full-sort Groups: 333  Sort Method: quicksort  Average Memory: 29kB  Peak Memory: 29kB
                                 Worker 0:  Full-sort Groups: 330  Sort Method: quicksort  Average Memory: 29kB  Peak Memory: 29kB
                                 Worker 1:  Full-sort Groups: 329  Sort Method: quicksort  Average Memory: 29kB  Peak Memory: 29kB
                                 ->  Merge Join  (cost=117526.57..1122728.99 rows=2435 width=66) (actual time=17181.814..32597.266 rows=10865 loops=3)
                                       Merge Cond: ((te.parent_title_id)::text = (tg.title_id)::text)
                                       ->  Sort  (cost=117525.87..117525.91 rows=18 width=44) (actual time=17111.929..17119.491 rows=11234 loops=3)
                                             Sort Key: t.id
                                             Sort Method: quicksort  Memory: 1418kB
                                             Worker 0:  Sort Method: quicksort  Memory: 1412kB
                                             Worker 1:  Sort Method: quicksort  Memory: 1408kB
                                             ->  Nested Loop  (cost=1.59..117525.49 rows=18 width=44) (actual time=299.119..17079.962 rows=11234 loops=3)
                                                   ->  Nested Loop  (cost=1.30..117471.73 rows=18 width=48) (actual time=299.074..16984.220 rows=11327 loops=3)
                                                         ->  Nested Loop  (cost=0.87..117067.00 rows=722 width=18) (actual time=297.266..12643.252 rows=11870 loops=3)
                                                               ->  Nested Loop  (cost=0.43..116487.83 rows=1198 width=24) (actual time=295.952..6338.513 rows=16557 loops=3)
                                                                     ->  Parallel Seq Scan on userhistory uh  (cost=0.00..111328.74 rows=1198 width=14) (actual time=294.878..2460.660 rows=16557 loops=3)
                                                                           Filter: ((last_seen <= now()) AND (last_seen >= (now() - '30 days'::interval)))
                                                                           Rows Removed by Filter: 1984074
                                                                     ->  Index Only Scan using title_pkey on title t2  (cost=0.43..4.31 rows=1 width=10) (actual time=0.232..0.232 rows=1 loops=49670)
                                                                           Index Cond: (id = (uh.title_id)::text)
                                                                           Heap Fetches: 0
                                                               ->  Index Scan using titleepisode_pkey on titleepisode te  (cost=0.43..0.48 rows=1 width=24) (actual time=0.379..0.379 rows=1 loops=49670)
                                                                     Index Cond: ((title_id)::text = (t2.id)::text)
                                                                     Filter: (season_number IS NOT NULL)
                                                                     Rows Removed by Filter: 0
                                                         ->  Index Scan using title_pkey on title t  (cost=0.43..0.56 rows=1 width=30) (actual time=0.363..0.363 rows=1 loops=35609)
                                                               Index Cond: ((id)::text = (te.parent_title_id)::text)
                                                               Filter: ((title_type)::text = 'tvSeries'::text)
                                                               Rows Removed by Filter: 0
                                                   ->  Index Scan using users_pkey on users u  (cost=0.29..2.99 rows=1 width=4) (actual time=0.006..0.006 rows=1 loops=33980)
                                                         Index Cond: (id = uh.user_id)
                                                         Filter: ((country_code)::text <> ALL ('{US,GB}'::text[]))
                                                         Rows Removed by Filter: 0
                                       ->  GroupAggregate  (cost=0.71..957823.80 rows=3788382 width=42) (actual time=0.665..14339.883 rows=9377696 loops=3)
                                             Group Key: tg.title_id
                                             ->  Nested Loop  (cost=0.71..834474.73 rows=15198860 width=17) (actual time=0.624..7818.588 rows=15198014 loops=3)
                                                   ->  Index Only Scan using titlegenre_pkey on titlegenre tg  (cost=0.56..462079.46 rows=15198860 width=14) (actual time=0.518..2845.913 rows=15198014 loops=3)
                                                         Heap Fetches: 0
                                                   ->  Memoize  (cost=0.15..0.17 rows=1 width=11) (actual time=0.000..0.000 rows=1 loops=45594043)
                                                         Cache Key: tg.genre_id
                                                         Cache Mode: logical
                                                         Hits: 15198088  Misses: 28  Evictions: 0  Overflows: 0  Memory Usage: 4kB
                                                         Worker 0:  Hits: 15197777  Misses: 28  Evictions: 0  Overflows: 0  Memory Usage: 4kB
                                                         Worker 1:  Hits: 15198094  Misses: 28  Evictions: 0  Overflows: 0  Memory Usage: 4kB
                                                         ->  Index Scan using genre_pkey on genre g  (cost=0.14..0.16 rows=1 width=11) (actual time=0.005..0.005 rows=1 loops=84)
                                                               Index Cond: (id = tg.genre_id)
 Planning Time: 17.378 ms
 JIT:
   Functions: 148
   Options: Inlining true, Optimization true, Expressions true, Deforming true
   Timing: Generation 10.083 ms, Inlining 317.285 ms, Optimization 705.780 ms, Emission 540.128 ms, Total 1573.275 ms
 Execution Time: 34295.631 ms
(65 rows)

