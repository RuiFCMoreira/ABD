explain analyze SELECT t.id, t.primary_title, tg.genres, te.season_number, count(*) AS views
FROM title t
JOIN titleEpisode te ON te.parent_title_id = t.id
JOIN title t2 ON t2.id = te.title_id
JOIN userHistory uh ON uh.title_id = t2.id
JOIN users u ON u.id = uh.user_id
JOIN (
    SELECT tg.title_id, array_agg(g.name) AS genres
    FROM titleGenre tg
    JOIN genre g ON g.id = tg.genre_id
    GROUP BY tg.title_id
) tg ON tg.title_id = t.id
WHERE t.title_type = 'tvSeries'
    AND uh.last_seen BETWEEN NOW() - INTERVAL '30 days' AND NOW()
    AND te.season_number IS NOT NULL
    AND u.country_code NOT IN ('US', 'GB')
GROUP BY t.id, t.primary_title, tg.genres, te.season_number
ORDER BY count(*) DESC, t.id
LIMIT 100;
                                                                                                   QUERY PLAN                                                                                                    
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1150711.01..1150711.26 rows=100 width=74) (actual time=32365.329..32365.483 rows=100 loops=1)
   ->  Sort  (cost=1150711.01..1150747.53 rows=14608 width=74) (actual time=31791.821..31791.968 rows=100 loops=1)
         Sort Key: (count(*)) DESC, t.id
         Sort Method: top-N heapsort  Memory: 40kB
         ->  GroupAggregate  (cost=126589.89..1150152.70 rows=14608 width=74) (actual time=16679.347..31784.974 rows=21405 loops=1)
               Group Key: t.id, (array_agg(g.name)), te.season_number
               ->  Nested Loop  (cost=126589.89..1149860.54 rows=14608 width=66) (actual time=16678.656..31768.355 rows=34074 loops=1)
                     ->  Gather Merge  (cost=126589.59..1139152.67 rows=14752 width=70) (actual time=16677.727..31493.065 rows=34352 loops=1)
                           Workers Planned: 2
                           Workers Launched: 2
                           ->  Incremental Sort  (cost=125589.56..1136449.90 rows=6147 width=70) (actual time=16655.326..31238.951 rows=11451 loops=3)
                                 Sort Key: t.id, (array_agg(g.name)), te.season_number
                                 Presorted Key: t.id
                                 Full-sort Groups: 350  Sort Method: quicksort  Average Memory: 29kB  Peak Memory: 29kB
                                 Worker 0:  Full-sort Groups: 345  Sort Method: quicksort  Average Memory: 30kB  Peak Memory: 30kB
                                 Worker 1:  Full-sort Groups: 347  Sort Method: quicksort  Average Memory: 29kB  Peak Memory: 29kB
                                 ->  Merge Join  (cost=125425.12..1136173.29 rows=6147 width=70) (actual time=16647.615..31224.944 rows=11451 loops=3)
                                       Merge Cond: ((te.parent_title_id)::text = (tg.title_id)::text)
                                       ->  Sort  (cost=125424.42..125424.52 rows=43 width=48) (actual time=16582.328..16588.902 rows=11842 loops=3)
                                             Sort Key: t.id
                                             Sort Method: quicksort  Memory: 1594kB
                                             Worker 0:  Sort Method: quicksort  Memory: 1579kB
                                             Worker 1:  Sort Method: quicksort  Memory: 1580kB
                                             ->  Nested Loop  (cost=1.30..125423.25 rows=43 width=48) (actual time=251.563..16553.016 rows=11842 loops=3)
                                                   ->  Nested Loop  (cost=0.87..124458.93 rows=1720 width=18) (actual time=249.676..12325.807 rows=12409 loops=3)
                                                         ->  Nested Loop  (cost=0.43..123080.06 rows=2852 width=24) (actual time=248.140..6122.962 rows=17309 loops=3)
                                                               ->  Parallel Seq Scan on userhistory uh  (cost=0.00..111328.17 rows=2852 width=14) (actual time=247.152..2391.029 rows=17309 loops=3)
                                                                     Filter: ((last_seen <= now()) AND (last_seen >= (now() - '30 days'::interval)))
                                                                     Rows Removed by Filter: 1983322
                                                               ->  Index Only Scan using title_pkey on title t2  (cost=0.43..4.12 rows=1 width=10) (actual time=0.214..0.214 rows=1 loops=51926)
                                                                     Index Cond: (id = (uh.title_id)::text)
                                                                     Heap Fetches: 0
                                                         ->  Index Scan using titleepisode_pkey on titleepisode te  (cost=0.43..0.48 rows=1 width=24) (actual time=0.357..0.357 rows=1 loops=51926)
                                                               Index Cond: ((title_id)::text = (t2.id)::text)
                                                               Filter: (season_number IS NOT NULL)
                                                               Rows Removed by Filter: 0
                                                   ->  Index Scan using title_pkey on title t  (cost=0.43..0.56 rows=1 width=30) (actual time=0.339..0.339 rows=1 loops=37226)
                                                         Index Cond: ((id)::text = (te.parent_title_id)::text)
                                                         Filter: ((title_type)::text = 'tvSeries'::text)
                                                         Rows Removed by Filter: 0
                                       ->  GroupAggregate  (cost=0.71..960578.05 rows=4008722 width=42) (actual time=0.752..13663.061 rows=9377679 loops=3)
                                             Group Key: tg.title_id
                                             ->  Nested Loop  (cost=0.71..834474.73 rows=15198860 width=17) (actual time=0.712..7302.720 rows=15197988 loops=3)
                                                   ->  Index Only Scan using titlegenre_pkey on titlegenre tg  (cost=0.56..462079.46 rows=15198860 width=14) (actual time=0.643..2628.654 rows=15197988 loops=3)
                                                         Heap Fetches: 0
                                                   ->  Memoize  (cost=0.15..0.17 rows=1 width=11) (actual time=0.000..0.000 rows=1 loops=45593965)
                                                         Cache Key: tg.genre_id
                                                         Cache Mode: logical
                                                         Hits: 15198088  Misses: 28  Evictions: 0  Overflows: 0  Memory Usage: 4kB
                                                         Worker 0:  Hits: 15198094  Misses: 28  Evictions: 0  Overflows: 0  Memory Usage: 4kB
                                                         Worker 1:  Hits: 15197699  Misses: 28  Evictions: 0  Overflows: 0  Memory Usage: 4kB
                                                         ->  Index Scan using genre_pkey on genre g  (cost=0.14..0.16 rows=1 width=11) (actual time=0.003..0.003 rows=1 loops=84)
                                                               Index Cond: (id = tg.genre_id)
                     ->  Memoize  (cost=0.30..1.61 rows=1 width=4) (actual time=0.008..0.008 rows=1 loops=34352)
                           Cache Key: uh.user_id
                           Cache Mode: logical
                           Hits: 5222  Misses: 29130  Evictions: 0  Overflows: 0  Memory Usage: 2950kB
                           ->  Index Scan using users_pkey on users u  (cost=0.29..1.60 rows=1 width=4) (actual time=0.008..0.008 rows=1 loops=29130)
                                 Index Cond: (id = uh.user_id)
                                 Filter: ((country_code)::text <> ALL ('{US,GB}'::text[]))
                                 Rows Removed by Filter: 0
 Planning Time: 16.340 ms
 JIT:
   Functions: 129
   Options: Inlining true, Optimization true, Expressions true, Deforming true
   Timing: Generation 7.752 ms, Inlining 294.149 ms, Optimization 585.020 ms, Emission 434.719 ms, Total 1321.640 ms
 Execution Time: 32797.299 ms
(67 rows)

