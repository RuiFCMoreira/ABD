explain analyze SELECT *
FROM (
    SELECT t.id,
        left(t.primary_title, 30),
        ((start_year / 10) * 10)::int AS decade,
        avg(uh.rating) AS rating,
        rank() over (
            PARTITION by ((start_year / 10) * 10) :: int
            ORDER BY avg(uh.rating) DESC, t.id
        ) AS rank
    FROM title t
    JOIN userHistory uh ON uh.title_id = t.id
    JOIN titleGenre TG ON tg.title_id = t.id AND tg.genre_id = 8
    WHERE t.title_type = 'movie'
        AND ((start_year / 10) * 10)::int >= 1980
        AND t.id IN (
            SELECT title_id
            FROM titleAkas
            WHERE region IN (
                'US', 'GB', 'ES', 'DE', 'FR', 'PT'
            )
        )
    GROUP BY t.id
    HAVING count(uh.rating) >= 3
    ORDER BY decade, rating DESC
) t_
WHERE rank <= 10;
                                                                                           QUERY PLAN                                                                                            
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Subquery Scan on t_  (cost=420769.69..420936.72 rows=1310 width=86) (actual time=43234.163..43284.241 rows=50 loops=1)
   Filter: (t_.rank <= 10)
   Rows Removed by Filter: 1953
   ->  WindowAgg  (cost=420769.69..420887.59 rows=3930 width=86) (actual time=43234.158..43284.136 rows=2003 loops=1)
         ->  Sort  (cost=420769.69..420779.52 rows=3930 width=66) (actual time=43234.095..43282.717 rows=2003 loops=1)
               Sort Key: (((t.start_year / 10) * 10)), (avg(uh.rating)) DESC, t.id
               Sort Method: quicksort  Memory: 228kB
               ->  Finalize GroupAggregate  (cost=419032.43..420535.06 rows=3930 width=66) (actual time=43180.007..43279.108 rows=2003 loops=1)
                     Group Key: t.id
                     Filter: (count(uh.rating) >= 3)
                     Rows Removed by Filter: 40986
                     ->  Gather Merge  (cost=419032.43..420264.85 rows=9826 width=74) (actual time=43179.967..43251.027 rows=45111 loops=1)
                           Workers Planned: 2
                           Workers Launched: 2
                           ->  Partial GroupAggregate  (cost=418032.41..418130.67 rows=4913 width=74) (actual time=43159.512..43170.228 rows=15037 loops=3)
                                 Group Key: t.id
                                 ->  Sort  (cost=418032.41..418044.69 rows=4913 width=38) (actual time=43159.462..43161.621 rows=20226 loops=3)
                                       Sort Key: t.id
                                       Sort Method: quicksort  Memory: 2449kB
                                       Worker 0:  Sort Method: quicksort  Memory: 2411kB
                                       Worker 1:  Sort Method: quicksort  Memory: 2371kB
                                       ->  Nested Loop  (cost=202149.12..417731.18 rows=4913 width=38) (actual time=5448.828..43127.741 rows=20226 loops=3)
                                             ->  Nested Loop Semi Join  (cost=202148.57..406052.10 rows=8780 width=58) (actual time=5443.260..36084.317 rows=58327 loops=3)
                                                   ->  Parallel Hash Join  (cost=202148.00..313874.98 rows=52570 width=48) (actual time=5440.960..6068.549 rows=96250 loops=3)
                                                         Hash Cond: ((uh.title_id)::text = (t.id)::text)
                                                         ->  Parallel Seq Scan on userhistory uh  (cost=0.00..80068.72 rows=2500672 width=14) (actual time=0.523..1893.077 rows=2000631 loops=3)
                                                         ->  Parallel Hash  (cost=200401.10..200401.10 rows=85992 width=34) (actual time=3118.285..3118.286 rows=129726 loops=3)
                                                               Buckets: 65536  Batches: 8  Memory Usage: 3840kB
                                                               ->  Parallel Seq Scan on title t  (cost=0.00..200401.10 rows=85992 width=34) (actual time=60.944..3067.940 rows=129726 loops=3)
                                                                     Filter: (((title_type)::text = 'movie'::text) AND (((start_year / 10) * 10) >= 1980))
                                                                     Rows Removed by Filter: 3143815
                                                   ->  Index Scan using titleakas_pkey on titleakas  (cost=0.56..34.48 rows=33 width=10) (actual time=0.311..0.311 rows=1 loops=288751)
                                                         Index Cond: ((title_id)::text = (uh.title_id)::text)
                                                         Filter: ((region)::text = ANY ('{US,GB,ES,DE,FR,PT}'::text[]))
                                                         Rows Removed by Filter: 1
                                             ->  Index Only Scan using titlegenre_pkey on titlegenre tg  (cost=0.56..1.33 rows=1 width=10) (actual time=0.120..0.120 rows=0 loops=174982)
                                                   Index Cond: ((title_id = (uh.title_id)::text) AND (genre_id = 8))
                                                   Heap Fetches: 0
 Planning Time: 14.225 ms
 JIT:
   Functions: 90
   Options: Inlining false, Optimization false, Expressions true, Deforming true
   Timing: Generation 6.211 ms, Inlining 0.000 ms, Optimization 5.786 ms, Emission 168.931 ms, Total 180.928 ms
 Execution Time: 43689.326 ms
(44 rows)

