explain analyze SELECT t.id, t.primary_title, tg.genres, te.season_number, count(*) AS views
FROM title t
JOIN titleEpisode te ON te.parent_title_id = t.id
JOIN title t2 ON t2.id = te.title_id
JOIN userHistory uh ON uh.title_id = t2.id
JOIN users u ON u.id = uh.user_id
JOIN (
    SELECT tg.title_id, array_agg(g.name) AS genres
    FROM titleGenre tg
    JOIN genre g ON g.id = tg.genre_id
    GROUP BY tg.title_id
) tg ON tg.title_id = t.id
WHERE t.title_type = 'tvSeries'
    AND uh.last_seen BETWEEN NOW() - INTERVAL '30 days' AND NOW()
    AND te.season_number IS NOT NULL
    AND u.country_code NOT IN ('US', 'GB')
GROUP BY t.id, t.primary_title, tg.genres, te.season_number
ORDER BY count(*) DESC, t.id
LIMIT 100;
                                                                                                   QUERY PLAN                                                                                                    
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1129032.36..1129032.61 rows=100 width=74) (actual time=33668.732..33668.905 rows=100 loops=1)
   ->  Sort  (cost=1129032.36..1129041.69 rows=3732 width=74) (actual time=33058.200..33058.366 rows=100 loops=1)
         Sort Key: (count(*)) DESC, t.id
         Sort Method: top-N heapsort  Memory: 40kB
         ->  Finalize GroupAggregate  (cost=116944.72..1128889.72 rows=3732 width=74) (actual time=17463.157..33051.615 rows=21406 loops=1)
               Group Key: t.id, (array_agg(g.name)), te.season_number
               ->  Gather Merge  (cost=116944.72..1128821.30 rows=3110 width=74) (actual time=17463.129..33038.751 rows=26072 loops=1)
                     Workers Planned: 2
                     Workers Launched: 2
                     ->  Partial GroupAggregate  (cost=115944.70..1127462.31 rows=1555 width=74) (actual time=17440.110..32414.752 rows=8691 loops=3)
                           Group Key: t.id, (array_agg(g.name)), te.season_number
                           ->  Incremental Sort  (cost=115944.70..1127431.21 rows=1555 width=66) (actual time=17440.080..32408.201 rows=11358 loops=3)
                                 Sort Key: t.id, (array_agg(g.name)), te.season_number
                                 Presorted Key: t.id
                                 Full-sort Groups: 350  Sort Method: quicksort  Average Memory: 29kB  Peak Memory: 29kB
                                 Worker 0:  Full-sort Groups: 343  Sort Method: quicksort  Average Memory: 29kB  Peak Memory: 29kB
                                 Worker 1:  Full-sort Groups: 346  Sort Method: quicksort  Average Memory: 29kB  Peak Memory: 29kB
                                 ->  Merge Join  (cost=115293.84..1127361.23 rows=1555 width=66) (actual time=17432.855..32394.777 rows=11358 loops=3)
                                       Merge Cond: ((te.parent_title_id)::text = (tg.title_id)::text)
                                       ->  Sort  (cost=115293.13..115293.16 rows=11 width=44) (actual time=17368.304..17374.806 rows=11745 loops=3)
                                             Sort Key: t.id
                                             Sort Method: quicksort  Memory: 1472kB
                                             Worker 0:  Sort Method: quicksort  Memory: 1450kB
                                             Worker 1:  Sort Method: quicksort  Memory: 1456kB
                                             ->  Nested Loop  (cost=1.59..115292.94 rows=11 width=44) (actual time=310.642..17343.429 rows=11745 loops=3)
                                                   ->  Nested Loop  (cost=1.30..115252.92 rows=11 width=48) (actual time=310.591..17265.420 rows=11843 loops=3)
                                                         ->  Nested Loop  (cost=0.87..114996.27 rows=458 width=18) (actual time=308.732..12845.735 rows=12409 loops=3)
                                                               ->  Nested Loop  (cost=0.43..114630.31 rows=757 width=24) (actual time=307.401..6384.307 rows=17309 loops=3)
                                                                     ->  Parallel Seq Scan on userhistory uh  (cost=0.00..111329.76 rows=757 width=14) (actual time=306.301..2476.202 rows=17309 loops=3)
                                                                           Filter: ((last_seen <= now()) AND (last_seen >= (now() - '30 days'::interval)))
                                                                           Rows Removed by Filter: 1983321
                                                                     ->  Index Only Scan using title_pkey on title t2  (cost=0.43..4.36 rows=1 width=10) (actual time=0.224..0.224 rows=1 loops=51928)
                                                                           Index Cond: (id = (uh.title_id)::text)
                                                                           Heap Fetches: 0
                                                               ->  Index Scan using titleepisode_pkey on titleepisode te  (cost=0.43..0.48 rows=1 width=24) (actual time=0.372..0.372 rows=1 loops=51928)
                                                                     Index Cond: ((title_id)::text = (t2.id)::text)
                                                                     Filter: (season_number IS NOT NULL)
                                                                     Rows Removed by Filter: 0
                                                         ->  Index Scan using title_pkey on title t  (cost=0.43..0.56 rows=1 width=30) (actual time=0.354..0.354 rows=1 loops=37227)
                                                               Index Cond: ((id)::text = (te.parent_title_id)::text)
                                                               Filter: ((title_type)::text = 'tvSeries'::text)
                                                               Rows Removed by Filter: 0
                                                   ->  Index Scan using users_pkey on users u  (cost=0.29..3.64 rows=1 width=4) (actual time=0.005..0.005 rows=1 loops=35528)
                                                         Index Cond: (id = uh.user_id)
                                                         Filter: ((country_code)::text <> ALL ('{US,GB}'::text[]))
                                                         Rows Removed by Filter: 0
                                       ->  GroupAggregate  (cost=0.71..961260.64 rows=4063329 width=42) (actual time=1.613..13843.304 rows=9377752 loops=3)
                                             Group Key: tg.title_id
                                             ->  Nested Loop  (cost=0.71..834474.73 rows=15198860 width=17) (actual time=1.586..7590.330 rows=15198118 loops=3)
                                                   ->  Index Only Scan using titlegenre_pkey on titlegenre tg  (cost=0.56..462079.46 rows=15198860 width=14) (actual time=1.504..2644.506 rows=15198118 loops=3)
                                                         Heap Fetches: 0
                                                   ->  Memoize  (cost=0.15..0.17 rows=1 width=11) (actual time=0.000..0.000 rows=1 loops=45594354)
                                                         Cache Key: tg.genre_id
                                                         Cache Mode: logical
                                                         Hits: 15198088  Misses: 28  Evictions: 0  Overflows: 0  Memory Usage: 4kB
                                                         Worker 0:  Hits: 15198088  Misses: 28  Evictions: 0  Overflows: 0  Memory Usage: 4kB
                                                         Worker 1:  Hits: 15198094  Misses: 28  Evictions: 0  Overflows: 0  Memory Usage: 4kB
                                                         ->  Index Scan using genre_pkey on genre g  (cost=0.14..0.16 rows=1 width=11) (actual time=0.003..0.003 rows=1 loops=84)
                                                               Index Cond: (id = tg.genre_id)
 Planning Time: 19.357 ms
 JIT:
   Functions: 148
   Options: Inlining true, Optimization true, Expressions true, Deforming true
   Timing: Generation 9.326 ms, Inlining 309.307 ms, Optimization 683.585 ms, Emission 535.377 ms, Total 1537.596 ms
 Execution Time: 34104.125 ms
(65 rows)

