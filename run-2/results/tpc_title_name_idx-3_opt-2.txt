explain analyze SELECT n.id,
    n.primary_name,
    date_part('year', NOW())::int - n.birth_year AS age,
    count(*) AS roles
FROM name n
JOIN titlePrincipals tp ON tp.name_id = n.id
JOIN titlePrincipalsCharacters tpc ON tpc.title_id = tp.title_id
    AND tpc.name_id = tp.name_id
JOIN category c ON c.id = tp.category_id
JOIN title t ON t.id = tp.title_id
WHERE t.start_year >= date_part('year', NOW())::int - 10
    AND c.name = 'actress'
    AND n.death_year IS NULL
    AND t.title_type IN (
        'movie', 'tvSeries', 'tvMiniSeries', 'tvMovie'
    )
GROUP BY n.id
ORDER BY roles DESC
LIMIT 100;
                                                                                                        QUERY PLAN                                                                                                         
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1271239.39..1271239.42 rows=10 width=36) (actual time=39112.058..39208.760 rows=100 loops=1)
   ->  Sort  (cost=1271239.39..1271239.42 rows=10 width=36) (actual time=38579.823..38676.516 rows=100 loops=1)
         Sort Key: (count(*)) DESC
         Sort Method: top-N heapsort  Memory: 38kB
         ->  Finalize GroupAggregate  (cost=1271237.99..1271239.23 rows=10 width=36) (actual time=38292.573..38637.502 rows=183837 loops=1)
               Group Key: n.id
               ->  Gather Merge  (cost=1271237.99..1271238.99 rows=8 width=36) (actual time=38292.546..38536.885 rows=250645 loops=1)
                     Workers Planned: 2
                     Workers Launched: 2
                     ->  Partial GroupAggregate  (cost=1270237.97..1270238.04 rows=4 width=36) (actual time=38270.459..38343.615 rows=83548 loops=3)
                           Group Key: n.id
                           ->  Sort  (cost=1270237.97..1270237.98 rows=4 width=28) (actual time=38270.409..38305.260 rows=132116 loops=3)
                                 Sort Key: n.id
                                 Sort Method: external merge  Disk: 4832kB
                                 Worker 0:  Sort Method: external merge  Disk: 4728kB
                                 Worker 1:  Sort Method: external merge  Disk: 4760kB
                                 ->  Nested Loop  (cost=234453.18..1270237.93 rows=4 width=28) (actual time=13346.043..38079.603 rows=132116 loops=3)
                                       ->  Nested Loop  (cost=234452.62..1270221.38 rows=4 width=20) (actual time=13343.777..22717.383 rows=132656 loops=3)
                                             ->  Parallel Hash Join  (cost=234452.06..1044964.18 rows=87906 width=30) (actual time=13342.266..13978.070 rows=149480 loops=3)
                                                   Hash Cond: ((tp.title_id)::text = (t.id)::text)
                                                   ->  Hash Join  (cost=1.16..781756.54 rows=1941617 width=20) (actual time=0.963..8830.659 rows=3185892 loops=3)
                                                         Hash Cond: (tp.category_id = c.id)
                                                         ->  Parallel Seq Scan on titleprincipals tp  (cost=0.00..698993.98 rows=23299398 width=24) (actual time=0.821..6908.671 rows=18639969 loops=3)
                                                         ->  Hash  (cost=1.15..1.15 rows=1 width=4) (actual time=0.070..0.072 rows=1 loops=3)
                                                               Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                               ->  Seq Scan on category c  (cost=0.00..1.15 rows=1 width=4) (actual time=0.054..0.055 rows=1 loops=3)
                                                                     Filter: ((name)::text = 'actress'::text)
                                                                     Rows Removed by Filter: 11
                                                   ->  Parallel Hash  (cost=231226.92..231226.92 rows=185438 width=10) (actual time=3570.215..3570.216 rows=117416 loops=3)
                                                         Buckets: 131072  Batches: 8  Memory Usage: 3136kB
                                                         ->  Parallel Seq Scan on title t  (cost=0.00..231226.92 rows=185438 width=10) (actual time=283.663..3526.952 rows=117416 loops=3)
                                                               Filter: (((title_type)::text = ANY ('{movie,tvSeries,tvMiniSeries,tvMovie}'::text[])) AND (start_year >= ((date_part('year'::text, now()))::integer - 10)))
                                                               Rows Removed by Filter: 3156125
                                             ->  Index Only Scan using tpc_title_name_idx on titleprincipalscharacters tpc  (cost=0.56..2.55 rows=1 width=20) (actual time=0.058..0.058 rows=1 loops=448441)
                                                   Index Cond: ((title_id = (tp.title_id)::text) AND (name_id = (tp.name_id)::text))
                                                   Heap Fetches: 0
                                       ->  Index Scan using name_pkey on name n  (cost=0.56..4.14 rows=1 width=28) (actual time=0.115..0.115 rows=1 loops=397968)
                                             Index Cond: ((id)::text = (tp.name_id)::text)
                                             Filter: (death_year IS NULL)
                                             Rows Removed by Filter: 0
 Planning Time: 27.735 ms
 JIT:
   Functions: 115
   Options: Inlining true, Optimization true, Expressions true, Deforming true
   Timing: Generation 7.396 ms, Inlining 286.446 ms, Optimization 558.143 ms, Emission 450.424 ms, Total 1302.410 ms
 Execution Time: 39639.986 ms
(46 rows)

