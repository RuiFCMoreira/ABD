explain analyze SELECT t.id, t.primary_title, tg.genres, te.season_number, count(*) AS views
FROM title t
JOIN titleEpisode te ON te.parent_title_id = t.id
JOIN title t2 ON t2.id = te.title_id
JOIN userHistory uh ON uh.title_id = t2.id
JOIN users u ON u.id = uh.user_id
JOIN (
    SELECT tg.title_id, array_agg(g.name) AS genres
    FROM titleGenre tg
    JOIN genre g ON g.id = tg.genre_id
    GROUP BY tg.title_id
) tg ON tg.title_id = t.id
WHERE t.title_type = 'tvSeries'
    AND uh.last_seen BETWEEN NOW() - INTERVAL '30 days' AND NOW()
    AND te.season_number IS NOT NULL
    AND u.country_code NOT IN ('US', 'GB')
GROUP BY t.id, t.primary_title, tg.genres, te.season_number
ORDER BY count(*) DESC, t.id
LIMIT 100;
                                                                                                   QUERY PLAN                                                                                                    
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1117302.11..1117302.36 rows=100 width=74) (actual time=29299.686..29299.810 rows=100 loops=1)
   ->  Sort  (cost=1117302.11..1117316.18 rows=5628 width=74) (actual time=28791.448..28791.565 rows=100 loops=1)
         Sort Key: (count(*)) DESC, t.id
         Sort Method: top-N heapsort  Memory: 40kB
         ->  Finalize GroupAggregate  (cost=118923.00..1117087.01 rows=5628 width=74) (actual time=15799.421..28786.377 rows=20633 loops=1)
               Group Key: t.id, (array_agg(g.name)), te.season_number
               ->  Gather Merge  (cost=118923.00..1116983.83 rows=4690 width=74) (actual time=15799.389..28776.360 rows=24999 loops=1)
                     Workers Planned: 2
                     Workers Launched: 2
                     ->  Partial GroupAggregate  (cost=117922.97..1115442.47 rows=2345 width=74) (actual time=15774.924..28380.126 rows=8333 loops=3)
                           Group Key: t.id, (array_agg(g.name)), te.season_number
                           ->  Incremental Sort  (cost=117922.97..1115395.57 rows=2345 width=66) (actual time=15774.902..28375.378 rows=10840 loops=3)
                                 Sort Key: t.id, (array_agg(g.name)), te.season_number
                                 Presorted Key: t.id
                                 Full-sort Groups: 335  Sort Method: quicksort  Average Memory: 29kB  Peak Memory: 29kB
                                 Worker 0:  Full-sort Groups: 327  Sort Method: quicksort  Average Memory: 29kB  Peak Memory: 29kB
                                 Worker 1:  Full-sort Groups: 327  Sort Method: quicksort  Average Memory: 29kB  Peak Memory: 29kB
                                 ->  Merge Join  (cost=117497.47..1115290.04 rows=2345 width=66) (actual time=15768.105..28367.229 rows=10840 loops=3)
                                       Merge Cond: ((te.parent_title_id)::text = (tg.title_id)::text)
                                       ->  Sort  (cost=117496.76..117496.81 rows=19 width=44) (actual time=15707.627..15711.314 rows=11208 loops=3)
                                             Sort Key: t.id
                                             Sort Method: quicksort  Memory: 1428kB
                                             Worker 0:  Sort Method: quicksort  Memory: 1399kB
                                             Worker 1:  Sort Method: quicksort  Memory: 1404kB
                                             ->  Nested Loop  (cost=1.59..117496.36 rows=19 width=44) (actual time=256.134..15689.115 rows=11208 loops=3)
                                                   ->  Nested Loop  (cost=1.30..117439.49 rows=19 width=48) (actual time=256.099..15647.723 rows=11301 loops=3)
                                                         ->  Nested Loop  (cost=0.87..117038.22 rows=715 width=18) (actual time=254.365..11653.195 rows=11843 loops=3)
                                                               ->  Nested Loop  (cost=0.43..116461.96 rows=1192 width=24) (actual time=252.996..5771.401 rows=16517 loops=3)
                                                                     ->  Parallel Seq Scan on userhistory uh  (cost=0.00..111327.90 rows=1192 width=14) (actual time=252.021..2213.895 rows=16517 loops=3)
                                                                           Filter: ((last_seen <= now()) AND (last_seen >= (now() - '30 days'::interval)))
                                                                           Rows Removed by Filter: 1984114
                                                                     ->  Index Only Scan using title_pkey on title t2  (cost=0.43..4.31 rows=1 width=10) (actual time=0.215..0.215 rows=1 loops=49551)
                                                                           Index Cond: (id = (uh.title_id)::text)
                                                                           Heap Fetches: 0
                                                               ->  Index Scan using titleepisode_pkey on titleepisode te  (cost=0.43..0.48 rows=1 width=24) (actual time=0.355..0.355 rows=1 loops=49551)
                                                                     Index Cond: ((title_id)::text = (t2.id)::text)
                                                                     Filter: (season_number IS NOT NULL)
                                                                     Rows Removed by Filter: 0
                                                         ->  Index Scan using title_pkey on title t  (cost=0.43..0.56 rows=1 width=30) (actual time=0.336..0.336 rows=1 loops=35529)
                                                               Index Cond: ((id)::text = (te.parent_title_id)::text)
                                                               Filter: ((title_type)::text = 'tvSeries'::text)
                                                               Rows Removed by Filter: 0
                                                   ->  Index Scan using users_pkey on users u  (cost=0.29..2.99 rows=1 width=4) (actual time=0.003..0.003 rows=1 loops=33902)
                                                         Index Cond: (id = uh.user_id)
                                                         Filter: ((country_code)::text <> ALL ('{US,GB}'::text[]))
                                                         Rows Removed by Filter: 0
                                       ->  GroupAggregate  (cost=0.71..954109.97 rows=3492757 width=42) (actual time=0.634..11814.089 rows=9377696 loops=3)
                                             Group Key: tg.title_id
                                             ->  Nested Loop  (cost=0.71..834458.28 rows=15198444 width=17) (actual time=0.605..6287.502 rows=15198014 loops=3)
                                                   ->  Index Only Scan using titlegenre_pkey on titlegenre tg  (cost=0.56..462073.22 rows=15198444 width=14) (actual time=0.556..2122.016 rows=15198014 loops=3)
                                                         Heap Fetches: 0
                                                   ->  Memoize  (cost=0.15..0.17 rows=1 width=11) (actual time=0.000..0.000 rows=1 loops=45594043)
                                                         Cache Key: tg.genre_id
                                                         Cache Mode: logical
                                                         Hits: 15198094  Misses: 28  Evictions: 0  Overflows: 0  Memory Usage: 4kB
                                                         Worker 0:  Hits: 15197777  Misses: 28  Evictions: 0  Overflows: 0  Memory Usage: 4kB
                                                         Worker 1:  Hits: 15198088  Misses: 28  Evictions: 0  Overflows: 0  Memory Usage: 4kB
                                                         ->  Index Scan using genre_pkey on genre g  (cost=0.14..0.16 rows=1 width=11) (actual time=0.002..0.002 rows=1 loops=84)
                                                               Index Cond: (id = tg.genre_id)
 Planning Time: 15.191 ms
 JIT:
   Functions: 148
   Options: Inlining true, Optimization true, Expressions true, Deforming true
   Timing: Generation 7.625 ms, Inlining 247.178 ms, Optimization 577.443 ms, Emission 439.172 ms, Total 1271.419 ms
 Execution Time: 29702.870 ms
(65 rows)

