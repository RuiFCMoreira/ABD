explain analyze SELECT t.id, t.primary_title, tg.genres, te.season_number, count(*) AS views
FROM title t
JOIN titleEpisode te ON te.parent_title_id = t.id
JOIN title t2 ON t2.id = te.title_id
JOIN userHistory uh ON uh.title_id = t2.id
JOIN users u ON u.id = uh.user_id
JOIN (
    SELECT tg.title_id, array_agg(g.name) AS genres
    FROM titleGenre tg
    JOIN genre g ON g.id = tg.genre_id
    GROUP BY tg.title_id
) tg ON tg.title_id = t.id
WHERE t.title_type = 'tvSeries'
    AND uh.last_seen BETWEEN NOW() - INTERVAL '30 days' AND NOW()
    AND te.season_number IS NOT NULL
    AND u.country_code NOT IN ('US', 'GB')
GROUP BY t.id, t.primary_title, tg.genres, te.season_number
ORDER BY count(*) DESC, t.id
LIMIT 100;
                                                                                                   QUERY PLAN                                                                                                    
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1147660.89..1147661.14 rows=100 width=74) (actual time=31976.828..32070.120 rows=100 loops=1)
   ->  Sort  (cost=1147660.89..1147672.11 rows=4486 width=74) (actual time=31443.623..31536.908 rows=100 loops=1)
         Sort Key: (count(*)) DESC, t.id
         Sort Method: top-N heapsort  Memory: 40kB
         ->  Finalize GroupAggregate  (cost=116849.66..1147489.44 rows=4486 width=74) (actual time=15975.141..31530.908 rows=20583 loops=1)
               Group Key: t.id, (array_agg(g.name)), te.season_number
               ->  Gather Merge  (cost=116849.66..1147407.20 rows=3738 width=74) (actual time=15975.122..31519.327 rows=24920 loops=1)
                     Workers Planned: 2
                     Workers Launched: 2
                     ->  Partial GroupAggregate  (cost=115849.64..1145975.72 rows=1869 width=74) (actual time=15953.509..30772.959 rows=8307 loops=3)
                           Group Key: t.id, (array_agg(g.name)), te.season_number
                           ->  Incremental Sort  (cost=115849.64..1145938.34 rows=1869 width=66) (actual time=15953.482..30767.329 rows=10808 loops=3)
                                 Sort Key: t.id, (array_agg(g.name)), te.season_number
                                 Presorted Key: t.id
                                 Full-sort Groups: 334  Sort Method: quicksort  Average Memory: 29kB  Peak Memory: 29kB
                                 Worker 0:  Full-sort Groups: 326  Sort Method: quicksort  Average Memory: 29kB  Peak Memory: 29kB
                                 Worker 1:  Full-sort Groups: 327  Sort Method: quicksort  Average Memory: 29kB  Peak Memory: 29kB
                                 ->  Merge Join  (cost=115298.23..1145854.23 rows=1869 width=66) (actual time=15946.019..30757.100 rows=10808 loops=3)
                                       Merge Cond: ((te.parent_title_id)::text = (tg.title_id)::text)
                                       ->  Sort  (cost=115297.52..115297.55 rows=11 width=44) (actual time=15874.995..15880.124 rows=11175 loops=3)
                                             Sort Key: t.id
                                             Sort Method: quicksort  Memory: 1414kB
                                             Worker 0:  Sort Method: quicksort  Memory: 1398kB
                                             Worker 1:  Sort Method: quicksort  Memory: 1410kB
                                             ->  Nested Loop  (cost=1.59..115297.33 rows=11 width=44) (actual time=277.284..15857.193 rows=11175 loops=3)
                                                   ->  Nested Loop  (cost=1.30..115257.32 rows=11 width=48) (actual time=277.243..15799.009 rows=11267 loops=3)
                                                         ->  Nested Loop  (cost=0.87..115001.11 rows=457 width=18) (actual time=275.578..11829.835 rows=11808 loops=3)
                                                               ->  Nested Loop  (cost=0.43..114634.64 rows=758 width=24) (actual time=274.243..5998.102 rows=16472 loops=3)
                                                                     ->  Parallel Seq Scan on userhistory uh  (cost=0.00..111329.65 rows=758 width=14) (actual time=273.309..2429.240 rows=16472 loops=3)
                                                                           Filter: ((last_seen <= now()) AND (last_seen >= (now() - '30 days'::interval)))
                                                                           Rows Removed by Filter: 1984159
                                                                     ->  Index Only Scan using title_pkey on title t2  (cost=0.43..4.36 rows=1 width=10) (actual time=0.216..0.216 rows=1 loops=49415)
                                                                           Index Cond: (id = (uh.title_id)::text)
                                                                           Heap Fetches: 0
                                                               ->  Index Scan using titleepisode_pkey on titleepisode te  (cost=0.43..0.48 rows=1 width=24) (actual time=0.353..0.353 rows=1 loops=49415)
                                                                     Index Cond: ((title_id)::text = (t2.id)::text)
                                                                     Filter: (season_number IS NOT NULL)
                                                                     Rows Removed by Filter: 0
                                                         ->  Index Scan using title_pkey on title t  (cost=0.43..0.56 rows=1 width=30) (actual time=0.335..0.335 rows=1 loops=35424)
                                                               Index Cond: ((id)::text = (te.parent_title_id)::text)
                                                               Filter: ((title_type)::text = 'tvSeries'::text)
                                                               Rows Removed by Filter: 0
                                                   ->  Index Scan using users_pkey on users u  (cost=0.29..3.64 rows=1 width=4) (actual time=0.004..0.004 rows=1 loops=33802)
                                                         Index Cond: (id = uh.user_id)
                                                         Filter: ((country_code)::text <> ALL ('{US,GB}'::text[]))
                                                         Rows Removed by Filter: 0
                                       ->  GroupAggregate  (cost=0.71..970494.01 rows=4803493 width=42) (actual time=1.085..13911.724 rows=9377679 loops=3)
                                             Group Key: tg.title_id
                                             ->  Nested Loop  (cost=0.71..834458.13 rows=15198444 width=17) (actual time=1.057..7725.627 rows=15197988 loops=3)
                                                   ->  Index Only Scan using titlegenre_pkey on titlegenre tg  (cost=0.56..462073.22 rows=15198444 width=14) (actual time=0.953..3005.408 rows=15197988 loops=3)
                                                         Heap Fetches: 0
                                                   ->  Memoize  (cost=0.15..0.17 rows=1 width=11) (actual time=0.000..0.000 rows=1 loops=45593965)
                                                         Cache Key: tg.genre_id
                                                         Cache Mode: logical
                                                         Hits: 15197699  Misses: 28  Evictions: 0  Overflows: 0  Memory Usage: 4kB
                                                         Worker 0:  Hits: 15198088  Misses: 28  Evictions: 0  Overflows: 0  Memory Usage: 4kB
                                                         Worker 1:  Hits: 15198094  Misses: 28  Evictions: 0  Overflows: 0  Memory Usage: 4kB
                                                         ->  Index Scan using genre_pkey on genre g  (cost=0.14..0.16 rows=1 width=11) (actual time=0.005..0.005 rows=1 loops=84)
                                                               Index Cond: (id = tg.genre_id)
 Planning Time: 16.050 ms
 JIT:
   Functions: 148
   Options: Inlining true, Optimization true, Expressions true, Deforming true
   Timing: Generation 8.634 ms, Inlining 264.010 ms, Optimization 614.638 ms, Emission 473.301 ms, Total 1360.583 ms
 Execution Time: 32467.367 ms
(65 rows)

