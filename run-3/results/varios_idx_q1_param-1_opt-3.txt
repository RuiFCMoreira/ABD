explain analyze SELECT *
FROM (
    SELECT t.id,
        left(t.primary_title, 30),
        ((start_year / 10) * 10)::int AS decade,
        avg(uh.rating) AS rating,
        rank() over (
            PARTITION by ((start_year / 10) * 10) :: int
            ORDER BY avg(uh.rating) DESC, t.id
        ) AS rank
    FROM title t
    JOIN userHistory uh ON uh.title_id = t.id
    JOIN titleGenre TG ON tg.title_id = t.id AND tg.genre_id = 8
    WHERE t.title_type = 'movie'
        AND ((start_year / 10) * 10)::int >= 1980
        AND t.id IN (
            SELECT title_id
            FROM titleAkas
            WHERE region IN (
                'US', 'GB', 'ES', 'DE', 'FR', 'PT'
            )
        )
    GROUP BY t.id
    HAVING count(uh.rating) >= 3
    ORDER BY decade, rating DESC
) t_
WHERE rank <= 10;
                                                                                                QUERY PLAN                                                                                                 
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Subquery Scan on t_  (cost=332940.27..333148.91 rows=1636 width=86) (actual time=20191.791..20273.068 rows=50 loops=1)
   Filter: (t_.rank <= 10)
   Rows Removed by Filter: 1953
   ->  WindowAgg  (cost=332940.27..333087.54 rows=4909 width=86) (actual time=20191.786..20272.955 rows=2003 loops=1)
         ->  Sort  (cost=332940.27..332952.55 rows=4909 width=66) (actual time=20191.736..20271.316 rows=2003 loops=1)
               Sort Key: (((t.start_year / 10) * 10)), (avg(uh.rating)) DESC, t.id
               Sort Method: quicksort  Memory: 228kB
               ->  Finalize GroupAggregate  (cost=330762.62..332639.32 rows=4909 width=66) (actual time=20117.919..20267.053 rows=2003 loops=1)
                     Group Key: t.id
                     Filter: (count(uh.rating) >= 3)
                     Rows Removed by Filter: 40986
                     ->  Gather Merge  (cost=330762.62..332301.83 rows=12272 width=74) (actual time=20117.841..20229.791 rows=53823 loops=1)
                           Workers Planned: 2
                           Workers Launched: 2
                           ->  Partial GroupAggregate  (cost=329762.59..329885.31 rows=6136 width=74) (actual time=20094.677..20111.013 rows=17941 loops=3)
                                 Group Key: t.id
                                 ->  Sort  (cost=329762.59..329777.93 rows=6136 width=38) (actual time=20094.624..20097.984 rows=20226 loops=3)
                                       Sort Key: t.id
                                       Sort Method: quicksort  Memory: 2407kB
                                       Worker 0:  Sort Method: quicksort  Memory: 2412kB
                                       Worker 1:  Sort Method: quicksort  Memory: 2412kB
                                       ->  Nested Loop  (cost=201534.14..329376.55 rows=6136 width=38) (actual time=2473.013..20051.482 rows=20226 loops=3)
                                             ->  Nested Loop Semi Join  (cost=201533.58..322335.52 rows=8746 width=58) (actual time=2471.268..14701.478 rows=58327 loops=3)
                                                   ->  Parallel Hash Join  (cost=201533.01..288167.71 rows=53906 width=48) (actual time=2469.788..4806.335 rows=96250 loops=3)
                                                         Hash Cond: ((uh.title_id)::text = (t.id)::text)
                                                         ->  Parallel Seq Scan on userhistory uh  (cost=0.00..80070.08 rows=2500808 width=14) (actual time=0.044..1417.395 rows=2000631 loops=3)
                                                         ->  Parallel Hash  (cost=200430.45..200430.45 rows=88205 width=34) (actual time=2468.809..2468.811 rows=129726 loops=3)
                                                               Buckets: 524288 (originally 262144)  Batches: 1 (originally 1)  Memory Usage: 32480kB
                                                               ->  Parallel Seq Scan on title t  (cost=0.00..200430.45 rows=88205 width=34) (actual time=48.445..2375.416 rows=129726 loops=3)
                                                                     Filter: (((title_type)::text = 'movie'::text) AND (((start_year / 10) * 10) >= 1980))
                                                                     Rows Removed by Filter: 3143815
                                                   ->  Index Only Scan using akas_id_region_idx on titleakas  (cost=0.56..2.55 rows=35 width=10) (actual time=0.102..0.102 rows=1 loops=288751)
                                                         Index Cond: (title_id = (uh.title_id)::text)
                                                         Filter: ((region)::text = ANY ('{US,GB,ES,DE,FR,PT}'::text[]))
                                                         Rows Removed by Filter: 1
                                                         Heap Fetches: 0
                                             ->  Index Only Scan using idx_titlegenre_title_id_genre_id on titlegenre tg  (cost=0.56..0.81 rows=1 width=10) (actual time=0.091..0.091 rows=0 loops=174982)
                                                   Index Cond: ((title_id = (uh.title_id)::text) AND (genre_id = 8))
                                                   Heap Fetches: 0
 Planning Time: 13.804 ms
 JIT:
   Functions: 84
   Options: Inlining false, Optimization false, Expressions true, Deforming true
   Timing: Generation 6.411 ms, Inlining 0.000 ms, Optimization 5.087 ms, Emission 134.292 ms, Total 145.789 ms
 Execution Time: 20611.639 ms
(45 rows)

