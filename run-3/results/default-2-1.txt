explain analyze SELECT t.id, t.primary_title, tg.genres, te.season_number, count(*) AS views
FROM title t
JOIN titleEpisode te ON te.parent_title_id = t.id
JOIN title t2 ON t2.id = te.title_id
JOIN userHistory uh ON uh.title_id = t2.id
JOIN users u ON u.id = uh.user_id
JOIN (
    SELECT tg.title_id, array_agg(g.name) AS genres
    FROM titleGenre tg
    JOIN genre g ON g.id = tg.genre_id
    GROUP BY tg.title_id
) tg ON tg.title_id = t.id
WHERE t.title_type = 'tvSeries'
    AND uh.last_seen BETWEEN NOW() - INTERVAL '30 days' AND NOW()
    AND te.season_number IS NOT NULL
    AND u.country_code NOT IN ('US', 'GB')
GROUP BY t.id, t.primary_title, tg.genres, te.season_number
ORDER BY count(*) DESC, t.id
LIMIT 100;
                                                                                                   QUERY PLAN                                                                                                    
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1126378.65..1126378.90 rows=100 width=74) (actual time=20946.573..20946.742 rows=100 loops=1)
   ->  Sort  (cost=1126378.65..1126393.21 rows=5824 width=74) (actual time=20390.419..20390.581 rows=100 loops=1)
         Sort Key: (count(*)) DESC, t.id
         Sort Method: top-N heapsort  Memory: 41kB
         ->  Finalize GroupAggregate  (cost=118932.33..1126156.06 rows=5824 width=74) (actual time=5871.717..20388.532 rows=5812 loops=1)
               Group Key: t.id, (array_agg(g.name)), te.season_number
               ->  Gather Merge  (cost=118932.33..1126049.28 rows=4854 width=74) (actual time=5871.699..20385.334 rows=6447 loops=1)
                     Workers Planned: 2
                     Workers Launched: 2
                     ->  Partial GroupAggregate  (cost=117932.31..1124488.98 rows=2427 width=74) (actual time=5849.903..19872.840 rows=2149 loops=3)
                           Group Key: t.id, (array_agg(g.name)), te.season_number
                           ->  Incremental Sort  (cost=117932.31..1124440.44 rows=2427 width=66) (actual time=5849.865..19871.310 rows=2377 loops=3)
                                 Sort Key: t.id, (array_agg(g.name)), te.season_number
                                 Presorted Key: t.id
                                 Full-sort Groups: 77  Sort Method: quicksort  Average Memory: 29kB  Peak Memory: 29kB
                                 Worker 0:  Full-sort Groups: 74  Sort Method: quicksort  Average Memory: 29kB  Peak Memory: 29kB
                                 Worker 1:  Full-sort Groups: 73  Sort Method: quicksort  Average Memory: 29kB  Peak Memory: 29kB
                                 ->  Merge Join  (cost=117517.46..1124331.23 rows=2427 width=66) (actual time=5823.835..19867.818 rows=2377 loops=3)
                                       Merge Cond: ((te.parent_title_id)::text = (tg.title_id)::text)
                                       ->  Sort  (cost=117516.75..117516.79 rows=18 width=44) (actual time=5756.082..5757.672 rows=2462 loops=3)
                                             Sort Key: t.id
                                             Sort Method: quicksort  Memory: 326kB
                                             Worker 0:  Sort Method: quicksort  Memory: 317kB
                                             Worker 1:  Sort Method: quicksort  Memory: 315kB
                                             ->  Nested Loop  (cost=1.59..117516.37 rows=18 width=44) (actual time=292.214..5751.379 rows=2462 loops=3)
                                                   ->  Nested Loop  (cost=1.30..117462.57 rows=18 width=48) (actual time=292.159..5725.683 rows=2485 loops=3)
                                                         ->  Nested Loop  (cost=0.87..117058.78 rows=720 width=18) (actual time=291.235..4595.739 rows=2594 loops=3)
                                                               ->  Nested Loop  (cost=0.43..116480.56 rows=1196 width=24) (actual time=290.036..2990.042 rows=3613 loops=3)
                                                                     ->  Parallel Seq Scan on userhistory uh  (cost=0.00..111330.34 rows=1196 width=14) (actual time=289.206..1860.614 rows=3613 loops=3)
                                                                           Filter: ((last_seen <= now()) AND (last_seen >= (now() - '30 days'::interval)))
                                                                           Rows Removed by Filter: 1997018
                                                                     ->  Index Only Scan using title_pkey on title t2  (cost=0.43..4.31 rows=1 width=10) (actual time=0.311..0.311 rows=1 loops=10838)
                                                                           Index Cond: (id = (uh.title_id)::text)
                                                                           Heap Fetches: 0
                                                               ->  Index Scan using titleepisode_pkey on titleepisode te  (cost=0.43..0.48 rows=1 width=24) (actual time=0.443..0.443 rows=1 loops=10838)
                                                                     Index Cond: ((title_id)::text = (t2.id)::text)
                                                                     Filter: (season_number IS NOT NULL)
                                                                     Rows Removed by Filter: 0
                                                         ->  Index Scan using title_pkey on title t  (cost=0.43..0.56 rows=1 width=30) (actual time=0.434..0.434 rows=1 loops=7781)
                                                               Index Cond: ((id)::text = (te.parent_title_id)::text)
                                                               Filter: ((title_type)::text = 'tvSeries'::text)
                                                               Rows Removed by Filter: 0
                                                   ->  Index Scan using users_pkey on users u  (cost=0.29..2.99 rows=1 width=4) (actual time=0.009..0.009 rows=1 loops=7454)
                                                         Index Cond: (id = uh.user_id)
                                                         Filter: ((country_code)::text <> ALL ('{US,GB}'::text[]))
                                                         Rows Removed by Filter: 0
                                       ->  GroupAggregate  (cost=0.71..958619.97 rows=3853557 width=42) (actual time=1.014..13168.583 rows=9375014 loops=3)
                                             Group Key: tg.title_id
                                             ->  Nested Loop  (cost=0.71..834458.28 rows=15198444 width=17) (actual time=0.987..7023.912 rows=15193741 loops=3)
                                                   ->  Index Only Scan using titlegenre_pkey on titlegenre tg  (cost=0.56..462073.22 rows=15198444 width=14) (actual time=0.919..2230.106 rows=15193741 loops=3)
                                                         Heap Fetches: 0
                                                   ->  Memoize  (cost=0.15..0.17 rows=1 width=11) (actual time=0.000..0.000 rows=1 loops=45581224)
                                                         Cache Key: tg.genre_id
                                                         Cache Mode: logical
                                                         Hits: 15197335  Misses: 28  Evictions: 0  Overflows: 0  Memory Usage: 4kB
                                                         Worker 0:  Hits: 15197777  Misses: 28  Evictions: 0  Overflows: 0  Memory Usage: 4kB
                                                         Worker 1:  Hits: 15186028  Misses: 28  Evictions: 0  Overflows: 0  Memory Usage: 4kB
                                                         ->  Index Scan using genre_pkey on genre g  (cost=0.14..0.16 rows=1 width=11) (actual time=0.003..0.003 rows=1 loops=84)
                                                               Index Cond: (id = tg.genre_id)
 Planning Time: 15.821 ms
 JIT:
   Functions: 148
   Options: Inlining true, Optimization true, Expressions true, Deforming true
   Timing: Generation 8.184 ms, Inlining 274.582 ms, Optimization 657.245 ms, Emission 491.281 ms, Total 1431.292 ms
 Execution Time: 21292.661 ms
(65 rows)

