explain analyze SELECT t.id, t.primary_title, tg.genres, te.season_number, count(*) AS views
FROM title t
JOIN titleEpisode te ON te.parent_title_id = t.id
JOIN title t2 ON t2.id = te.title_id
JOIN userHistory uh ON uh.title_id = t2.id
JOIN users u ON u.id = uh.user_id
JOIN (
    SELECT tg.title_id, array_agg(g.name) AS genres
    FROM titleGenre tg
    JOIN genre g ON g.id = tg.genre_id
    GROUP BY tg.title_id
) tg ON tg.title_id = t.id
WHERE t.title_type = 'tvSeries'
    AND uh.last_seen BETWEEN NOW() - INTERVAL '30 days' AND NOW()
    AND te.season_number IS NOT NULL
    AND u.country_code NOT IN ('US', 'GB')
GROUP BY t.id, t.primary_title, tg.genres, te.season_number
ORDER BY count(*) DESC, t.id
LIMIT 100;
                                                                                                   QUERY PLAN                                                                                                    
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1151122.23..1151122.48 rows=100 width=74) (actual time=22206.573..22206.717 rows=100 loops=1)
   ->  Sort  (cost=1151122.23..1151157.92 rows=14275 width=74) (actual time=21670.518..21670.653 rows=100 loops=1)
         Sort Key: (count(*)) DESC, t.id
         Sort Method: top-N heapsort  Memory: 41kB
         ->  GroupAggregate  (cost=126635.10..1150576.65 rows=14275 width=74) (actual time=6273.320..21668.050 rows=6043 loops=1)
               Group Key: t.id, (array_agg(g.name)), te.season_number
               ->  Nested Loop  (cost=126635.10..1150291.15 rows=14275 width=66) (actual time=6272.810..21663.110 rows=7478 loops=1)
                     ->  Gather Merge  (cost=126634.80..1139581.17 rows=14419 width=70) (actual time=6272.123..21532.607 rows=7546 loops=1)
                           Workers Planned: 2
                           Workers Launched: 2
                           ->  Incremental Sort  (cost=125634.77..1136916.83 rows=6008 width=70) (actual time=6246.453..21016.031 rows=2515 loops=3)
                                 Sort Key: t.id, (array_agg(g.name)), te.season_number
                                 Presorted Key: t.id
                                 Full-sort Groups: 80  Sort Method: quicksort  Average Memory: 30kB  Peak Memory: 30kB
                                 Worker 0:  Full-sort Groups: 76  Sort Method: quicksort  Average Memory: 29kB  Peak Memory: 29kB
                                 Worker 1:  Full-sort Groups: 80  Sort Method: quicksort  Average Memory: 29kB  Peak Memory: 29kB
                                 ->  Merge Join  (cost=125466.46..1136646.47 rows=6008 width=70) (actual time=6223.134..21011.900 rows=2515 loops=3)
                                       Merge Cond: ((te.parent_title_id)::text = (tg.title_id)::text)
                                       ->  Sort  (cost=125465.75..125465.86 rows=42 width=48) (actual time=6154.843..6156.830 rows=2604 loops=3)
                                             Sort Key: t.id
                                             Sort Method: quicksort  Memory: 361kB
                                             Worker 0:  Sort Method: quicksort  Memory: 353kB
                                             Worker 1:  Sort Method: quicksort  Memory: 363kB
                                             ->  Nested Loop  (cost=1.30..125464.62 rows=42 width=48) (actual time=246.549..6148.441 rows=2604 loops=3)
                                                   ->  Nested Loop  (cost=0.87..124497.67 rows=1725 width=18) (actual time=245.537..4926.721 rows=2717 loops=3)
                                                         ->  Nested Loop  (cost=0.43..123115.02 rows=2860 width=24) (actual time=244.043..3176.139 rows=3788 loops=3)
                                                               ->  Parallel Seq Scan on userhistory uh  (cost=0.00..111332.54 rows=2860 width=14) (actual time=243.075..1926.400 rows=3788 loops=3)
                                                                     Filter: ((last_seen <= now()) AND (last_seen >= (now() - '30 days'::interval)))
                                                                     Rows Removed by Filter: 1996843
                                                               ->  Index Only Scan using title_pkey on title t2  (cost=0.43..4.12 rows=1 width=10) (actual time=0.327..0.327 rows=1 loops=11363)
                                                                     Index Cond: (id = (uh.title_id)::text)
                                                                     Heap Fetches: 0
                                                         ->  Index Scan using titleepisode_pkey on titleepisode te  (cost=0.43..0.48 rows=1 width=24) (actual time=0.460..0.460 rows=1 loops=11363)
                                                               Index Cond: ((title_id)::text = (t2.id)::text)
                                                               Filter: (season_number IS NOT NULL)
                                                               Rows Removed by Filter: 0
                                                   ->  Index Scan using title_pkey on title t  (cost=0.43..0.56 rows=1 width=30) (actual time=0.447..0.447 rows=1 loops=8152)
                                                         Index Cond: ((id)::text = (te.parent_title_id)::text)
                                                         Filter: ((title_type)::text = 'tvSeries'::text)
                                                         Rows Removed by Filter: 0
                                       ->  GroupAggregate  (cost=0.71..960785.23 rows=4026778 width=42) (actual time=0.920..13796.546 rows=9374750 loops=3)
                                             Group Key: tg.title_id
                                             ->  Nested Loop  (cost=0.71..834458.28 rows=15198444 width=17) (actual time=0.892..7300.609 rows=15193346 loops=3)
                                                   ->  Index Only Scan using titlegenre_pkey on titlegenre tg  (cost=0.56..462073.22 rows=15198444 width=14) (actual time=0.820..2587.373 rows=15193346 loops=3)
                                                         Heap Fetches: 0
                                                   ->  Memoize  (cost=0.15..0.17 rows=1 width=11) (actual time=0.000..0.000 rows=1 loops=45580039)
                                                         Cache Key: tg.genre_id
                                                         Cache Mode: logical
                                                         Hits: 15197777  Misses: 28  Evictions: 0  Overflows: 0  Memory Usage: 4kB
                                                         Worker 0:  Hits: 15197699  Misses: 28  Evictions: 0  Overflows: 0  Memory Usage: 4kB
                                                         Worker 1:  Hits: 15184479  Misses: 28  Evictions: 0  Overflows: 0  Memory Usage: 4kB
                                                         ->  Index Scan using genre_pkey on genre g  (cost=0.14..0.16 rows=1 width=11) (actual time=0.003..0.003 rows=1 loops=84)
                                                               Index Cond: (id = tg.genre_id)
                     ->  Memoize  (cost=0.30..1.60 rows=1 width=4) (actual time=0.017..0.017 rows=1 loops=7546)
                           Cache Key: uh.user_id
                           Cache Mode: logical
                           Hits: 263  Misses: 7283  Evictions: 0  Overflows: 0  Memory Usage: 738kB
                           ->  Index Scan using users_pkey on users u  (cost=0.29..1.59 rows=1 width=4) (actual time=0.016..0.016 rows=1 loops=7283)
                                 Index Cond: (id = uh.user_id)
                                 Filter: ((country_code)::text <> ALL ('{US,GB}'::text[]))
                                 Rows Removed by Filter: 0
 Planning Time: 15.230 ms
 JIT:
   Functions: 129
   Options: Inlining true, Optimization true, Expressions true, Deforming true
   Timing: Generation 7.166 ms, Inlining 278.370 ms, Optimization 567.105 ms, Emission 418.637 ms, Total 1271.278 ms
 Execution Time: 22569.044 ms
(67 rows)

