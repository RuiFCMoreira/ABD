explain analyze SELECT t.id, t.primary_title, tg.genres, te.season_number, count(*) AS views
FROM title t
JOIN titleEpisode te ON te.parent_title_id = t.id
JOIN title t2 ON t2.id = te.title_id
JOIN userHistory uh ON uh.title_id = t2.id
JOIN users u ON u.id = uh.user_id
JOIN (
    SELECT tg.title_id, array_agg(g.name) AS genres
    FROM titleGenre tg
    JOIN genre g ON g.id = tg.genre_id
    GROUP BY tg.title_id
) tg ON tg.title_id = t.id
WHERE t.title_type = 'tvSeries'
    AND uh.last_seen BETWEEN NOW() - INTERVAL '30 days' AND NOW()
    AND te.season_number IS NOT NULL
    AND u.country_code NOT IN ('US', 'GB')
GROUP BY t.id, t.primary_title, tg.genres, te.season_number
ORDER BY count(*) DESC, t.id
LIMIT 100;
                                                                                                   QUERY PLAN                                                                                                    
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1128164.98..1128165.23 rows=100 width=74) (actual time=21538.542..21538.695 rows=100 loops=1)
   ->  Sort  (cost=1128164.98..1128180.85 rows=6351 width=74) (actual time=20982.046..20982.192 rows=100 loops=1)
         Sort Key: (count(*)) DESC, t.id
         Sort Method: top-N heapsort  Memory: 41kB
         ->  Finalize GroupAggregate  (cost=118882.43..1127922.25 rows=6351 width=74) (actual time=6165.355..20980.111 rows=6102 loops=1)
               Group Key: t.id, (array_agg(g.name)), te.season_number
               ->  Gather Merge  (cost=118882.43..1127805.82 rows=5292 width=74) (actual time=6165.314..20976.726 rows=6831 loops=1)
                     Workers Planned: 2
                     Workers Launched: 2
                     ->  Partial GroupAggregate  (cost=117882.41..1126194.96 rows=2646 width=74) (actual time=6136.855..20400.259 rows=2277 loops=3)
                           Group Key: t.id, (array_agg(g.name)), te.season_number
                           ->  Incremental Sort  (cost=117882.41..1126142.04 rows=2646 width=66) (actual time=6136.818..20398.650 rows=2523 loops=3)
                                 Sort Key: t.id, (array_agg(g.name)), te.season_number
                                 Presorted Key: t.id
                                 Full-sort Groups: 82  Sort Method: quicksort  Average Memory: 29kB  Peak Memory: 29kB
                                 Worker 0:  Full-sort Groups: 78  Sort Method: quicksort  Average Memory: 29kB  Peak Memory: 29kB
                                 Worker 1:  Full-sort Groups: 76  Sort Method: quicksort  Average Memory: 29kB  Peak Memory: 29kB
                                 ->  Merge Join  (cost=117501.25..1126022.97 rows=2646 width=66) (actual time=6116.008..20395.153 rows=2523 loops=3)
                                       Merge Cond: ((te.parent_title_id)::text = (tg.title_id)::text)
                                       ->  Sort  (cost=117500.54..117500.59 rows=19 width=44) (actual time=6043.140..6044.858 rows=2612 loops=3)
                                             Sort Key: t.id
                                             Sort Method: quicksort  Memory: 346kB
                                             Worker 0:  Sort Method: quicksort  Memory: 330kB
                                             Worker 1:  Sort Method: quicksort  Memory: 325kB
                                             ->  Nested Loop  (cost=1.59..117500.14 rows=19 width=44) (actual time=304.195..6037.245 rows=2612 loops=3)
                                                   ->  Nested Loop  (cost=1.30..117443.26 rows=19 width=48) (actual time=304.150..6010.476 rows=2637 loops=3)
                                                         ->  Nested Loop  (cost=0.87..117040.66 rows=718 width=18) (actual time=302.983..4831.559 rows=2752 loops=3)
                                                               ->  Nested Loop  (cost=0.43..116464.35 rows=1192 width=24) (actual time=301.839..3107.759 rows=3835 loops=3)
                                                                     ->  Parallel Seq Scan on userhistory uh  (cost=0.00..111330.36 rows=1192 width=14) (actual time=300.908..1923.874 rows=3835 loops=3)
                                                                           Filter: ((last_seen <= now()) AND (last_seen >= (now() - '30 days'::interval)))
                                                                           Rows Removed by Filter: 1996796
                                                                     ->  Index Only Scan using title_pkey on title t2  (cost=0.43..4.31 rows=1 width=10) (actual time=0.307..0.307 rows=1 loops=11504)
                                                                           Index Cond: (id = (uh.title_id)::text)
                                                                           Heap Fetches: 0
                                                               ->  Index Scan using titleepisode_pkey on titleepisode te  (cost=0.43..0.48 rows=1 width=24) (actual time=0.448..0.448 rows=1 loops=11504)
                                                                     Index Cond: ((title_id)::text = (t2.id)::text)
                                                                     Filter: (season_number IS NOT NULL)
                                                                     Rows Removed by Filter: 0
                                                         ->  Index Scan using title_pkey on title t  (cost=0.43..0.56 rows=1 width=30) (actual time=0.426..0.426 rows=1 loops=8256)
                                                               Index Cond: ((id)::text = (te.parent_title_id)::text)
                                                               Filter: ((title_type)::text = 'tvSeries'::text)
                                                               Rows Removed by Filter: 0
                                                   ->  Index Scan using users_pkey on users u  (cost=0.29..2.99 rows=1 width=4) (actual time=0.008..0.008 rows=1 loops=7911)
                                                         Index Cond: (id = uh.user_id)
                                                         Filter: ((country_code)::text <> ALL ('{US,GB}'::text[]))
                                                         Rows Removed by Filter: 0
                                       ->  GroupAggregate  (cost=0.71..959482.28 rows=3921060 width=42) (actual time=0.530..13368.177 rows=9377470 loops=3)
                                             Group Key: tg.title_id
                                             ->  Nested Loop  (cost=0.71..834474.73 rows=15198860 width=17) (actual time=0.496..7137.287 rows=15197632 loops=3)
                                                   ->  Index Only Scan using titlegenre_pkey on titlegenre tg  (cost=0.56..462079.46 rows=15198860 width=14) (actual time=0.440..2366.252 rows=15197632 loops=3)
                                                         Heap Fetches: 0
                                                   ->  Memoize  (cost=0.15..0.17 rows=1 width=11) (actual time=0.000..0.000 rows=1 loops=45592895)
                                                         Cache Key: tg.genre_id
                                                         Cache Mode: logical
                                                         Hits: 15197335  Misses: 28  Evictions: 0  Overflows: 0  Memory Usage: 4kB
                                                         Worker 0:  Hits: 15197777  Misses: 28  Evictions: 0  Overflows: 0  Memory Usage: 4kB
                                                         Worker 1:  Hits: 15197699  Misses: 28  Evictions: 0  Overflows: 0  Memory Usage: 4kB
                                                         ->  Index Scan using genre_pkey on genre g  (cost=0.14..0.16 rows=1 width=11) (actual time=0.003..0.003 rows=1 loops=84)
                                                               Index Cond: (id = tg.genre_id)
 Planning Time: 15.201 ms
 JIT:
   Functions: 148
   Options: Inlining true, Optimization true, Expressions true, Deforming true
   Timing: Generation 9.876 ms, Inlining 287.782 ms, Optimization 675.935 ms, Emission 495.757 ms, Total 1469.351 ms
 Execution Time: 21890.292 ms
(65 rows)

