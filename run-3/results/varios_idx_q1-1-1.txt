explain analyze SELECT *
FROM (
    SELECT t.id,
        left(t.primary_title, 30),
        ((start_year / 10) * 10)::int AS decade,
        avg(uh.rating) AS rating,
        rank() over (
            PARTITION by ((start_year / 10) * 10) :: int
            ORDER BY avg(uh.rating) DESC, t.id
        ) AS rank
    FROM title t
    JOIN userHistory uh ON uh.title_id = t.id
    WHERE t.title_type = 'movie'
        AND ((start_year / 10) * 10)::int >= 1980
        AND t.id IN (
            SELECT title_id
            FROM titleGenre tg
            JOIN genre g ON g.id = tg.genre_id
            WHERE g.name IN (
                'Drama'
            )
        )
        AND t.id IN (
            SELECT title_id
            FROM titleAkas
            WHERE region IN (
                'US', 'GB', 'ES', 'DE', 'FR', 'PT'
            )
        )
    GROUP BY t.id
    HAVING count(uh.rating) >= 3
    ORDER BY decade, rating DESC
) t_
WHERE rank <= 10;
                                                                                                         QUERY PLAN                                                                                                          
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Subquery Scan on t_  (cost=365895.41..365913.31 rows=140 width=86) (actual time=8552.387..8569.107 rows=50 loops=1)
   Filter: (t_.rank <= 10)
   Rows Removed by Filter: 1953
   ->  WindowAgg  (cost=365895.41..365908.04 rows=421 width=86) (actual time=8552.382..8568.990 rows=2003 loops=1)
         ->  Sort  (cost=365895.41..365896.47 rows=421 width=66) (actual time=8552.338..8567.435 rows=2003 loops=1)
               Sort Key: (((t.start_year / 10) * 10)), (avg(uh.rating)) DESC, t.id
               Sort Method: quicksort  Memory: 228kB
               ->  Finalize GroupAggregate  (cost=365716.19..365877.06 rows=421 width=66) (actual time=8487.766..8563.622 rows=2003 loops=1)
                     Group Key: t.id
                     Filter: (count(uh.rating) >= 3)
                     Rows Removed by Filter: 40986
                     ->  Gather Merge  (cost=365716.19..365848.14 rows=1052 width=74) (actual time=8487.712..8531.499 rows=53871 loops=1)
                           Workers Planned: 2
                           Workers Launched: 2
                           ->  Partial GroupAggregate  (cost=364716.17..364726.69 rows=526 width=74) (actual time=8465.554..8478.926 rows=17957 loops=3)
                                 Group Key: t.id
                                 ->  Sort  (cost=364716.17..364717.48 rows=526 width=38) (actual time=8465.504..8468.086 rows=20226 loops=3)
                                       Sort Key: t.id
                                       Sort Method: quicksort  Memory: 2499kB
                                       Worker 0:  Sort Method: quicksort  Memory: 2366kB
                                       Worker 1:  Sort Method: quicksort  Memory: 2365kB
                                       ->  Parallel Hash Join  (cost=275243.65..364692.39 rows=526 width=38) (actual time=6650.027..8433.676 rows=20226 loops=3)
                                             Hash Cond: ((uh.title_id)::text = (t.id)::text)
                                             ->  Parallel Seq Scan on userhistory uh  (cost=0.00..80070.00 rows=2500800 width=14) (actual time=0.413..1267.773 rows=2000631 loops=3)
                                             ->  Parallel Hash  (cost=275240.03..275240.03 rows=290 width=54) (actual time=6649.317..6649.322 rows=27522 loops=3)
                                                   Buckets: 131072 (originally 1024)  Batches: 1 (originally 1)  Memory Usage: 9080kB
                                                   ->  Nested Loop Semi Join  (cost=1.26..275240.03 rows=290 width=54) (actual time=69.219..6527.140 rows=27522 loops=3)
                                                         Join Filter: ((t.id)::text = (tg.title_id)::text)
                                                         ->  Nested Loop Semi Join  (cost=0.56..264289.83 rows=5248 width=44) (actual time=52.898..4976.758 rows=78788 loops=3)
                                                               ->  Parallel Seq Scan on title t  (cost=0.00..200412.00 rows=93685 width=34) (actual time=50.985..1841.472 rows=129726 loops=3)
                                                                     Filter: (((title_type)::text = 'movie'::text) AND (((start_year / 10) * 10) >= 1980))
                                                                     Rows Removed by Filter: 3143815
                                                               ->  Index Only Scan using akas_id_region_idx on titleakas  (cost=0.56..4.31 rows=34 width=10) (actual time=0.024..0.024 rows=1 loops=389178)
                                                                     Index Cond: (title_id = (t.id)::text)
                                                                     Filter: ((region)::text = ANY ('{US,GB,ES,DE,FR,PT}'::text[]))
                                                                     Rows Removed by Filter: 1
                                                                     Heap Fetches: 0
                                                         ->  Nested Loop  (cost=0.70..2.07 rows=1 width=10) (actual time=0.019..0.019 rows=0 loops=236365)
                                                               ->  Index Only Scan using idx_titlegenre_title_id_genre_id on titlegenre tg  (cost=0.56..1.58 rows=3 width=14) (actual time=0.017..0.017 rows=1 loops=236365)
                                                                     Index Cond: (title_id = (titleakas.title_id)::text)
                                                                     Heap Fetches: 0
                                                               ->  Index Scan using genre_pkey on genre g  (cost=0.14..0.16 rows=1 width=4) (actual time=0.001..0.001 rows=0 loops=327381)
                                                                     Index Cond: (id = tg.genre_id)
                                                                     Filter: ((name)::text = 'Drama'::text)
                                                                     Rows Removed by Filter: 1
 Planning Time: 20.801 ms
 JIT:
   Functions: 102
   Options: Inlining false, Optimization false, Expressions true, Deforming true
   Timing: Generation 7.230 ms, Inlining 0.000 ms, Optimization 5.494 ms, Emission 140.521 ms, Total 153.245 ms
 Execution Time: 8921.076 ms
(51 rows)

