explain analyze SELECT t.id, t.primary_title, tg.genres, te.season_number, count(*) AS views
FROM title t
JOIN titleEpisode te ON te.parent_title_id = t.id
JOIN title t2 ON t2.id = te.title_id
JOIN userHistory uh ON uh.title_id = t2.id
JOIN users u ON u.id = uh.user_id
JOIN (
    SELECT tg.title_id, array_agg(g.name) AS genres
    FROM titleGenre tg
    JOIN genre g ON g.id = tg.genre_id
    GROUP BY tg.title_id
) tg ON tg.title_id = t.id
WHERE t.title_type = 'tvSeries'
    AND uh.last_seen BETWEEN NOW() - INTERVAL '30 days' AND NOW()
    AND te.season_number IS NOT NULL
    AND u.country_code NOT IN ('US', 'GB')
GROUP BY t.id, t.primary_title, tg.genres, te.season_number
ORDER BY count(*) DESC, t.id
LIMIT 100;
                                                                                                   QUERY PLAN                                                                                                    
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1123288.77..1123289.02 rows=100 width=74) (actual time=21960.888..21961.047 rows=100 loops=1)
   ->  Sort  (cost=1123288.77..1123304.38 rows=6241 width=74) (actual time=21397.889..21398.042 rows=100 loops=1)
         Sort Key: (count(*)) DESC, t.id
         Sort Method: top-N heapsort  Memory: 41kB
         ->  Finalize GroupAggregate  (cost=118924.12..1123050.25 rows=6241 width=74) (actual time=6470.490..21395.854 rows=6246 loops=1)
               Group Key: t.id, (array_agg(g.name)), te.season_number
               ->  Gather Merge  (cost=118924.12..1122935.84 rows=5200 width=74) (actual time=6470.465..21392.243 rows=6985 loops=1)
                     Workers Planned: 2
                     Workers Launched: 2
                     ->  Partial GroupAggregate  (cost=117924.10..1121335.61 rows=2600 width=74) (actual time=6443.574..20715.338 rows=2328 loops=3)
                           Group Key: t.id, (array_agg(g.name)), te.season_number
                           ->  Incremental Sort  (cost=117924.10..1121283.61 rows=2600 width=66) (actual time=6443.536..20713.680 rows=2589 loops=3)
                                 Sort Key: t.id, (array_agg(g.name)), te.season_number
                                 Presorted Key: t.id
                                 Full-sort Groups: 83  Sort Method: quicksort  Average Memory: 30kB  Peak Memory: 30kB
                                 Worker 0:  Full-sort Groups: 80  Sort Method: quicksort  Average Memory: 29kB  Peak Memory: 29kB
                                 Worker 1:  Full-sort Groups: 80  Sort Method: quicksort  Average Memory: 29kB  Peak Memory: 29kB
                                 ->  Merge Join  (cost=117538.08..1121166.61 rows=2600 width=66) (actual time=6423.148..20709.744 rows=2589 loops=3)
                                       Merge Cond: ((te.parent_title_id)::text = (tg.title_id)::text)
                                       ->  Sort  (cost=117537.37..117537.42 rows=20 width=44) (actual time=6352.311..6354.074 rows=2682 loops=3)
                                             Sort Key: t.id
                                             Sort Method: quicksort  Memory: 345kB
                                             Worker 0:  Sort Method: quicksort  Memory: 335kB
                                             Worker 1:  Sort Method: quicksort  Memory: 339kB
                                             ->  Nested Loop  (cost=1.59..117536.94 rows=20 width=44) (actual time=291.583..6346.065 rows=2682 loops=3)
                                                   ->  Nested Loop  (cost=1.30..117477.21 rows=20 width=48) (actual time=291.534..6311.828 rows=2707 loops=3)
                                                         ->  Nested Loop  (cost=0.87..117072.29 rows=722 width=18) (actual time=290.638..5088.772 rows=2824 loops=3)
                                                               ->  Nested Loop  (cost=0.43..116492.61 rows=1199 width=24) (actual time=289.201..3285.798 rows=3933 loops=3)
                                                                     ->  Parallel Seq Scan on userhistory uh  (cost=0.00..111329.10 rows=1199 width=14) (actual time=288.247..2044.652 rows=3933 loops=3)
                                                                           Filter: ((last_seen <= now()) AND (last_seen >= (now() - '30 days'::interval)))
                                                                           Rows Removed by Filter: 1996698
                                                                     ->  Index Only Scan using title_pkey on title t2  (cost=0.43..4.31 rows=1 width=10) (actual time=0.313..0.313 rows=1 loops=11798)
                                                                           Index Cond: (id = (uh.title_id)::text)
                                                                           Heap Fetches: 0
                                                               ->  Index Scan using titleepisode_pkey on titleepisode te  (cost=0.43..0.48 rows=1 width=24) (actual time=0.456..0.456 rows=1 loops=11798)
                                                                     Index Cond: ((title_id)::text = (t2.id)::text)
                                                                     Filter: (season_number IS NOT NULL)
                                                                     Rows Removed by Filter: 0
                                                         ->  Index Scan using title_pkey on title t  (cost=0.43..0.56 rows=1 width=30) (actual time=0.431..0.431 rows=1 loops=8472)
                                                               Index Cond: ((id)::text = (te.parent_title_id)::text)
                                                               Filter: ((title_type)::text = 'tvSeries'::text)
                                                               Rows Removed by Filter: 0
                                                   ->  Index Scan using users_pkey on users u  (cost=0.29..2.99 rows=1 width=4) (actual time=0.011..0.011 rows=1 loops=8120)
                                                         Index Cond: (id = uh.user_id)
                                                         Filter: ((country_code)::text <> ALL ('{US,GB}'::text[]))
                                                         Rows Removed by Filter: 0
                                       ->  GroupAggregate  (cost=0.71..957035.80 rows=3725342 width=42) (actual time=0.660..13415.817 rows=9373934 loops=3)
                                             Group Key: tg.title_id
                                             ->  Nested Loop  (cost=0.71..834474.73 rows=15198860 width=17) (actual time=0.627..7240.612 rows=15192045 loops=3)
                                                   ->  Index Only Scan using titlegenre_pkey on titlegenre tg  (cost=0.56..462079.46 rows=15198860 width=14) (actual time=0.547..2645.353 rows=15192045 loops=3)
                                                         Heap Fetches: 0
                                                   ->  Memoize  (cost=0.15..0.17 rows=1 width=11) (actual time=0.000..0.000 rows=1 loops=45576135)
                                                         Cache Key: tg.genre_id
                                                         Cache Mode: logical
                                                         Hits: 15180575  Misses: 28  Evictions: 0  Overflows: 0  Memory Usage: 4kB
                                                         Worker 0:  Hits: 15197777  Misses: 28  Evictions: 0  Overflows: 0  Memory Usage: 4kB
                                                         Worker 1:  Hits: 15197699  Misses: 28  Evictions: 0  Overflows: 0  Memory Usage: 4kB
                                                         ->  Index Scan using genre_pkey on genre g  (cost=0.14..0.16 rows=1 width=11) (actual time=0.004..0.004 rows=1 loops=84)
                                                               Index Cond: (id = tg.genre_id)
 Planning Time: 14.927 ms
 JIT:
   Functions: 148
   Options: Inlining true, Optimization true, Expressions true, Deforming true
   Timing: Generation 8.544 ms, Inlining 272.987 ms, Optimization 657.063 ms, Emission 496.984 ms, Total 1435.579 ms
 Execution Time: 22307.750 ms
(65 rows)

