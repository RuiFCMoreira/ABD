explain analyze SELECT n.id,
    n.primary_name,
    date_part('year', NOW())::int - n.birth_year AS age,
    count(*) AS roles
FROM name n
JOIN titlePrincipals tp ON tp.name_id = n.id
JOIN titlePrincipalsCharacters tpc ON tpc.title_id = tp.title_id
    AND tpc.name_id = tp.name_id
JOIN category c ON c.id = tp.category_id
JOIN title t ON t.id = tp.title_id
WHERE t.start_year >= date_part('year', NOW())::int - 10
    AND c.name = 'actress'
    AND n.death_year IS NULL
    AND t.title_type IN (
        'movie', 'tvSeries', 'tvMiniSeries', 'tvMovie'
    )
GROUP BY n.id
ORDER BY roles DESC
LIMIT 100;
                                                                                                       QUERY PLAN                                                                                                        
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1263190.07..1263190.10 rows=13 width=36) (actual time=41107.191..41190.665 rows=100 loops=1)
   ->  Sort  (cost=1263190.07..1263190.10 rows=13 width=36) (actual time=40598.897..40682.363 rows=100 loops=1)
         Sort Key: (count(*)) DESC
         Sort Method: top-N heapsort  Memory: 38kB
         ->  Finalize GroupAggregate  (cost=1263188.27..1263189.83 rows=13 width=36) (actual time=40323.710..40641.733 rows=183837 loops=1)
               Group Key: n.id
               ->  Gather Merge  (cost=1263188.27..1263189.52 rows=10 width=36) (actual time=40323.678..40544.535 rows=250459 loops=1)
                     Workers Planned: 2
                     Workers Launched: 2
                     ->  Partial GroupAggregate  (cost=1262188.25..1262188.34 rows=5 width=36) (actual time=40302.626..40376.320 rows=83486 loops=3)
                           Group Key: n.id
                           ->  Sort  (cost=1262188.25..1262188.26 rows=5 width=28) (actual time=40302.578..40336.974 rows=132116 loops=3)
                                 Sort Key: n.id
                                 Sort Method: external merge  Disk: 4816kB
                                 Worker 0:  Sort Method: external merge  Disk: 4744kB
                                 Worker 1:  Sort Method: external merge  Disk: 4760kB
                                 ->  Nested Loop  (cost=218005.27..1262188.19 rows=5 width=28) (actual time=18792.853..40108.487 rows=132116 loops=3)
                                       ->  Nested Loop  (cost=218004.71..1262167.51 rows=5 width=20) (actual time=18791.382..29494.099 rows=132656 loops=3)
                                             ->  Parallel Hash Join  (cost=218004.14..1028520.57 rows=87717 width=30) (actual time=18790.101..19400.028 rows=149480 loops=3)
                                                   Hash Cond: ((tp.title_id)::text = (t.id)::text)
                                                   ->  Hash Join  (cost=1.16..781764.71 rows=1941667 width=20) (actual time=0.450..6928.278 rows=3185892 loops=3)
                                                         Hash Cond: (tp.category_id = c.id)
                                                         ->  Parallel Seq Scan on titleprincipals tp  (cost=0.00..699000.00 rows=23300000 width=24) (actual time=0.214..4941.585 rows=18639969 loops=3)
                                                         ->  Hash  (cost=1.15..1.15 rows=1 width=4) (actual time=0.064..0.066 rows=1 loops=3)
                                                               Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                               ->  Seq Scan on category c  (cost=0.00..1.15 rows=1 width=4) (actual time=0.054..0.057 rows=1 loops=3)
                                                                     Filter: ((name)::text = 'actress'::text)
                                                                     Rows Removed by Filter: 11
                                                   ->  Parallel Hash  (cost=214792.32..214792.32 rows=184693 width=10) (actual time=10973.362..10973.363 rows=117416 loops=3)
                                                         Buckets: 131072  Batches: 8  Memory Usage: 3136kB
                                                         ->  Parallel Bitmap Heap Scan on title t  (cost=11491.00..214792.32 rows=184693 width=10) (actual time=345.976..10911.233 rows=117416 loops=3)
                                                               Recheck Cond: ((title_type)::text = ANY ('{movie,tvSeries,tvMiniSeries,tvMovie}'::text[]))
                                                               Rows Removed by Index Recheck: 1574173
                                                               Filter: (start_year >= ((date_part('year'::text, now()))::integer - 10))
                                                               Rows Removed by Filter: 241368
                                                               Heap Blocks: exact=14447 lossy=22829
                                                               ->  Bitmap Index Scan on title_type_idx  (cost=0.00..11380.18 rows=1057391 width=0) (actual time=75.258..75.259 rows=1076354 loops=1)
                                                                     Index Cond: ((title_type)::text = ANY ('{movie,tvSeries,tvMiniSeries,tvMovie}'::text[]))
                                             ->  Index Only Scan using titleprincipalscharacters_pkey on titleprincipalscharacters tpc  (cost=0.56..2.65 rows=1 width=20) (actual time=0.067..0.067 rows=1 loops=448441)
                                                   Index Cond: ((title_id = (tp.title_id)::text) AND (name_id = (tp.name_id)::text))
                                                   Heap Fetches: 0
                                       ->  Index Scan using name_pkey on name n  (cost=0.56..4.14 rows=1 width=28) (actual time=0.079..0.079 rows=1 loops=397968)
                                             Index Cond: ((id)::text = (tp.name_id)::text)
                                             Filter: (death_year IS NULL)
                                             Rows Removed by Filter: 0
 Planning Time: 19.452 ms
 JIT:
   Functions: 121
   Options: Inlining true, Optimization true, Expressions true, Deforming true
   Timing: Generation 7.077 ms, Inlining 272.288 ms, Optimization 577.316 ms, Emission 430.533 ms, Total 1287.214 ms
 Execution Time: 41530.839 ms
(51 rows)

