explain analyze SELECT t.id, t.primary_title, tg.genres, te.season_number, count(*) AS views
FROM title t
JOIN titleEpisode te ON te.parent_title_id = t.id
JOIN title t2 ON t2.id = te.title_id
JOIN userHistory uh ON uh.title_id = t2.id
JOIN users u ON u.id = uh.user_id
JOIN (
    SELECT tg.title_id, array_agg(g.name) AS genres
    FROM titleGenre tg
    JOIN genre g ON g.id = tg.genre_id
    GROUP BY tg.title_id
) tg ON tg.title_id = t.id
WHERE t.title_type = 'tvSeries'
    AND uh.last_seen BETWEEN NOW() - INTERVAL '30 days' AND NOW()
    AND te.season_number IS NOT NULL
    AND u.country_code NOT IN ('US', 'GB')
GROUP BY t.id, t.primary_title, tg.genres, te.season_number
ORDER BY count(*) DESC, t.id
LIMIT 100;
                                                                                                   QUERY PLAN                                                                                                    
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1133233.15..1133233.40 rows=100 width=74) (actual time=22051.360..22051.526 rows=100 loops=1)
   ->  Sort  (cost=1133233.15..1133266.81 rows=13462 width=74) (actual time=21482.296..21482.455 rows=100 loops=1)
         Sort Key: (count(*)) DESC, t.id
         Sort Method: top-N heapsort  Memory: 41kB
         ->  Finalize GroupAggregate  (cost=125757.83..1132718.65 rows=13462 width=74) (actual time=6757.539..21480.272 rows=6194 loops=1)
               Group Key: t.id, (array_agg(g.name)), te.season_number
               ->  Gather Merge  (cost=125757.83..1132471.85 rows=11218 width=74) (actual time=6757.497..21476.746 rows=6942 loops=1)
                     Workers Planned: 2
                     Workers Launched: 2
                     ->  Partial GroupAggregate  (cost=124757.81..1130176.99 rows=5609 width=74) (actual time=6733.193..20867.869 rows=2314 loops=3)
                           Group Key: t.id, (array_agg(g.name)), te.season_number
                           ->  Incremental Sort  (cost=124757.81..1130064.81 rows=5609 width=66) (actual time=6733.154..20866.192 rows=2569 loops=3)
                                 Sort Key: t.id, (array_agg(g.name)), te.season_number
                                 Presorted Key: t.id
                                 Full-sort Groups: 82  Sort Method: quicksort  Average Memory: 29kB  Peak Memory: 29kB
                                 Worker 0:  Full-sort Groups: 81  Sort Method: quicksort  Average Memory: 29kB  Peak Memory: 29kB
                                 Worker 1:  Full-sort Groups: 77  Sort Method: quicksort  Average Memory: 29kB  Peak Memory: 29kB
                                 ->  Merge Join  (cost=124578.58..1129812.40 rows=5609 width=66) (actual time=6712.602..20862.354 rows=2569 loops=3)
                                       Merge Cond: ((te.parent_title_id)::text = (tg.title_id)::text)
                                       ->  Sort  (cost=124577.87..124577.97 rows=41 width=44) (actual time=6645.379..6647.192 rows=2659 loops=3)
                                             Sort Key: t.id
                                             Sort Method: quicksort  Memory: 340kB
                                             Worker 0:  Sort Method: quicksort  Memory: 343kB
                                             Worker 1:  Sort Method: quicksort  Memory: 331kB
                                             ->  Nested Loop  (cost=1.16..124576.77 rows=41 width=44) (actual time=294.066..6639.557 rows=2659 loops=3)
                                                   ->  Nested Loop  (cost=0.87..124508.94 rows=42 width=48) (actual time=294.017..6606.230 rows=2684 loops=3)
                                                         ->  Nested Loop  (cost=0.87..124301.42 rows=1695 width=18) (actual time=292.981..5131.129 rows=2801 loops=3)
                                                               ->  Nested Loop  (cost=0.43..122940.46 rows=2815 width=24) (actual time=291.801..3326.582 rows=3902 loops=3)
                                                                     ->  Parallel Seq Scan on userhistory uh  (cost=0.00..111330.01 rows=2815 width=14) (actual time=290.911..1952.280 rows=3902 loops=3)
                                                                           Filter: ((last_seen <= now()) AND (last_seen >= (now() - '30 days'::interval)))
                                                                           Rows Removed by Filter: 1996729
                                                                     ->  Index Only Scan using title_pkey on title t2  (cost=0.43..4.12 rows=1 width=10) (actual time=0.350..0.350 rows=1 loops=11706)
                                                                           Index Cond: (id = (uh.title_id)::text)
                                                                           Heap Fetches: 0
                                                               ->  Index Scan using titleepisode_pkey on titleepisode te  (cost=0.43..0.48 rows=1 width=24) (actual time=0.460..0.460 rows=1 loops=11706)
                                                                     Index Cond: ((title_id)::text = (t2.id)::text)
                                                                     Filter: (season_number IS NOT NULL)
                                                                     Rows Removed by Filter: 0
                                                         ->  Index Scan using title_hash on title t  (cost=0.00..0.12 rows=1 width=30) (actual time=0.524..0.524 rows=1 loops=8403)
                                                               Index Cond: ((id)::text = (te.parent_title_id)::text)
                                                               Rows Removed by Index Recheck: 0
                                                               Filter: ((title_type)::text = 'tvSeries'::text)
                                                               Rows Removed by Filter: 0
                                                   ->  Index Scan using users_pkey on users u  (cost=0.29..1.62 rows=1 width=4) (actual time=0.010..0.010 rows=1 loops=8053)
                                                         Index Cond: (id = uh.user_id)
                                                         Filter: ((country_code)::text <> ALL ('{US,GB}'::text[]))
                                                         Rows Removed by Filter: 0
                                       ->  GroupAggregate  (cost=0.71..957823.80 rows=3788382 width=42) (actual time=1.388..13243.597 rows=9374225 loops=3)
                                             Group Key: tg.title_id
                                             ->  Nested Loop  (cost=0.71..834474.73 rows=15198860 width=17) (actual time=1.357..7022.274 rows=15192486 loops=3)
                                                   ->  Index Only Scan using titlegenre_pkey on titlegenre tg  (cost=0.56..462079.46 rows=15198860 width=14) (actual time=1.247..2179.990 rows=15192486 loops=3)
                                                         Heap Fetches: 0
                                                   ->  Memoize  (cost=0.15..0.17 rows=1 width=11) (actual time=0.000..0.000 rows=1 loops=45577457)
                                                         Cache Key: tg.genre_id
                                                         Cache Mode: logical
                                                         Hits: 15197777  Misses: 28  Evictions: 0  Overflows: 0  Memory Usage: 4kB
                                                         Worker 0:  Hits: 15182261  Misses: 28  Evictions: 0  Overflows: 0  Memory Usage: 4kB
                                                         Worker 1:  Hits: 15197335  Misses: 28  Evictions: 0  Overflows: 0  Memory Usage: 4kB
                                                         ->  Index Scan using genre_pkey on genre g  (cost=0.14..0.16 rows=1 width=11) (actual time=0.005..0.005 rows=1 loops=84)
                                                               Index Cond: (id = tg.genre_id)
 Planning Time: 15.740 ms
 JIT:
   Functions: 148
   Options: Inlining true, Optimization true, Expressions true, Deforming true
   Timing: Generation 8.456 ms, Inlining 278.791 ms, Optimization 662.493 ms, Emission 500.794 ms, Total 1450.533 ms
 Execution Time: 22405.577 ms
(66 rows)

