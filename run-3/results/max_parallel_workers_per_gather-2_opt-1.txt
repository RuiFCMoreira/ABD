explain analyze SELECT t.id, t.primary_title, tg.genres, te.season_number, count(*) AS views
FROM title t
JOIN titleEpisode te ON te.parent_title_id = t.id
JOIN userHistory uh ON uh.title_id = te.title_id
JOIN users u ON u.id = uh.user_id
JOIN (
    SELECT tg.title_id, array_agg(g.name) AS genres
    FROM titleGenre tg
    JOIN genre g ON g.id = tg.genre_id
    GROUP BY tg.title_id
) tg ON tg.title_id = t.id
WHERE t.title_type = 'tvSeries'
    AND uh.last_seen BETWEEN NOW() - INTERVAL '30 days' AND NOW()
    AND te.season_number IS NOT NULL
    AND u.country_code NOT IN ('US', 'GB')
GROUP BY t.id, t.primary_title, tg.genres, te.season_number
ORDER BY count(*) DESC, t.id
LIMIT 100;
                                                                                                   QUERY PLAN                                                                                                    
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1129609.37..1129609.62 rows=100 width=74) (actual time=22727.899..22728.069 rows=100 loops=1)
   ->  Sort  (cost=1129609.37..1129631.97 rows=9042 width=74) (actual time=22204.581..22204.743 rows=100 loops=1)
         Sort Key: (count(*)) DESC, t.id
         Sort Method: top-N heapsort  Memory: 41kB
         ->  GroupAggregate  (cost=96445.49..1129263.79 rows=9042 width=74) (actual time=3840.870..22201.456 rows=6318 loops=1)
               Group Key: t.id, (array_agg(g.name)), te.season_number
               ->  Nested Loop  (cost=96445.49..1129082.95 rows=9042 width=66) (actual time=3840.404..22195.239 rows=7868 loops=1)
                     ->  Gather Merge  (cost=96445.19..1120478.94 rows=9042 width=70) (actual time=3839.728..22048.106 rows=7940 loops=1)
                           Workers Planned: 4
                           Workers Launched: 4
                           ->  Incremental Sort  (cost=95445.13..1118401.90 rows=2260 width=70) (actual time=3785.967..21170.997 rows=1588 loops=5)
                                 Sort Key: t.id, (array_agg(g.name)), te.season_number
                                 Presorted Key: t.id
                                 Full-sort Groups: 54  Sort Method: quicksort  Average Memory: 29kB  Peak Memory: 29kB
                                 Worker 0:  Full-sort Groups: 48  Sort Method: quicksort  Average Memory: 29kB  Peak Memory: 29kB
                                 Worker 1:  Full-sort Groups: 51  Sort Method: quicksort  Average Memory: 29kB  Peak Memory: 29kB
                                 Worker 2:  Full-sort Groups: 49  Sort Method: quicksort  Average Memory: 29kB  Peak Memory: 29kB
                                 Worker 3:  Full-sort Groups: 49  Sort Method: quicksort  Average Memory: 29kB  Peak Memory: 29kB
                                 ->  Merge Join  (cost=94992.33..1118300.20 rows=2260 width=70) (actual time=3752.359..21167.938 rows=1588 loops=5)
                                       Merge Cond: ((te.parent_title_id)::text = (tg.title_id)::text)
                                       ->  Sort  (cost=94991.62..94991.66 rows=14 width=48) (actual time=3659.215..3660.502 rows=1645 loops=5)
                                             Sort Key: t.id
                                             Sort Method: quicksort  Memory: 227kB
                                             Worker 0:  Sort Method: quicksort  Memory: 207kB
                                             Worker 1:  Sort Method: quicksort  Memory: 216kB
                                             Worker 2:  Sort Method: quicksort  Memory: 211kB
                                             Worker 3:  Sort Method: quicksort  Memory: 212kB
                                             ->  Nested Loop  (cost=0.87..94991.36 rows=14 width=48) (actual time=291.618..3654.905 rows=1645 loops=5)
                                                   ->  Nested Loop  (cost=0.43..94671.83 rows=570 width=18) (actual time=290.606..2744.127 rows=1717 loops=5)
                                                         ->  Parallel Seq Scan on userhistory uh  (cost=0.00..88823.18 rows=717 width=14) (actual time=289.340..1498.508 rows=2390 loops=5)
                                                               Filter: ((last_seen <= now()) AND (last_seen >= (now() - '30 days'::interval)))
                                                               Rows Removed by Filter: 1197989
                                                         ->  Index Scan using titleepisode_pkey on titleepisode te  (cost=0.43..8.16 rows=1 width=24) (actual time=0.518..0.518 rows=1 loops=11948)
                                                               Index Cond: ((title_id)::text = (uh.title_id)::text)
                                                               Filter: (season_number IS NOT NULL)
                                                               Rows Removed by Filter: 0
                                                   ->  Index Scan using title_pkey on title t  (cost=0.43..0.56 rows=1 width=30) (actual time=0.527..0.527 rows=1 loops=8585)
                                                         Index Cond: ((id)::text = (te.parent_title_id)::text)
                                                         Filter: ((title_type)::text = 'tvSeries'::text)
                                                         Rows Removed by Filter: 0
                                       ->  GroupAggregate  (cost=0.71..966868.20 rows=4513416 width=42) (actual time=1.212..16211.230 rows=9372714 loops=5)
                                             Group Key: tg.title_id
                                             ->  Nested Loop  (cost=0.71..834458.28 rows=15198444 width=17) (actual time=1.173..8403.753 rows=15190029 loops=5)
                                                   ->  Index Only Scan using titlegenre_pkey on titlegenre tg  (cost=0.56..462073.22 rows=15198444 width=14) (actual time=1.081..2606.376 rows=15190029 loops=5)
                                                         Heap Fetches: 0
                                                   ->  Memoize  (cost=0.15..0.17 rows=1 width=11) (actual time=0.000..0.000 rows=1 loops=75950146)
                                                         Cache Key: tg.genre_id
                                                         Cache Mode: logical
                                                         Hits: 15197777  Misses: 28  Evictions: 0  Overflows: 0  Memory Usage: 4kB
                                                         Worker 0:  Hits: 15186028  Misses: 28  Evictions: 0  Overflows: 0  Memory Usage: 4kB
                                                         Worker 1:  Hits: 15197699  Misses: 28  Evictions: 0  Overflows: 0  Memory Usage: 4kB
                                                         Worker 2:  Hits: 15197335  Misses: 28  Evictions: 0  Overflows: 0  Memory Usage: 4kB
                                                         Worker 3:  Hits: 15171167  Misses: 28  Evictions: 0  Overflows: 0  Memory Usage: 4kB
                                                         ->  Index Scan using genre_pkey on genre g  (cost=0.14..0.16 rows=1 width=11) (actual time=0.005..0.005 rows=1 loops=140)
                                                               Index Cond: (id = tg.genre_id)
                     ->  Memoize  (cost=0.30..3.00 rows=1 width=4) (actual time=0.018..0.018 rows=1 loops=7940)
                           Cache Key: uh.user_id
                           Cache Mode: logical
                           Hits: 287  Misses: 7653  Evictions: 0  Overflows: 0  Memory Usage: 775kB
                           ->  Index Scan using users_pkey on users u  (cost=0.29..2.99 rows=1 width=4) (actual time=0.017..0.017 rows=1 loops=7653)
                                 Index Cond: (id = uh.user_id)
                                 Filter: ((country_code)::text <> ALL ('{US,GB}'::text[]))
                                 Rows Removed by Filter: 0
 Planning Time: 14.548 ms
 JIT:
   Functions: 190
   Options: Inlining true, Optimization true, Expressions true, Deforming true
   Timing: Generation 10.818 ms, Inlining 461.651 ms, Optimization 881.709 ms, Emission 625.161 ms, Total 1979.340 ms
 Execution Time: 23128.230 ms
(69 rows)

