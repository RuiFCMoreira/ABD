explain analyze SELECT t.id, t.primary_title, tg.genres, te.season_number, count(*) AS views
FROM title t
JOIN titleEpisode te ON te.parent_title_id = t.id
JOIN title t2 ON t2.id = te.title_id
JOIN userHistory uh ON uh.title_id = t2.id
JOIN users u ON u.id = uh.user_id
JOIN (
    SELECT tg.title_id, array_agg(g.name) AS genres
    FROM titleGenre tg
    JOIN genre g ON g.id = tg.genre_id
    GROUP BY tg.title_id
) tg ON tg.title_id = t.id
WHERE t.title_type = 'tvSeries'
    AND uh.last_seen BETWEEN NOW() - INTERVAL '30 days' AND NOW()
    AND te.season_number IS NOT NULL
    AND u.country_code NOT IN ('US', 'GB')
GROUP BY t.id, t.primary_title, tg.genres, te.season_number
ORDER BY count(*) DESC, t.id
LIMIT 100;
                                                                                                   QUERY PLAN                                                                                                    
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1162723.88..1162724.13 rows=100 width=74) (actual time=22434.342..22434.502 rows=100 loops=1)
   ->  Sort  (cost=1162723.88..1162762.55 rows=15469 width=74) (actual time=21915.613..21915.766 rows=100 loops=1)
         Sort Key: (count(*)) DESC, t.id
         Sort Method: top-N heapsort  Memory: 41kB
         ->  GroupAggregate  (cost=126392.67..1162132.66 rows=15469 width=74) (actual time=6406.228..21913.039 rows=6278 loops=1)
               Group Key: t.id, (array_agg(g.name)), te.season_number
               ->  Nested Loop  (cost=126392.67..1161823.28 rows=15469 width=66) (actual time=6405.640..21908.000 rows=7809 loops=1)
                     ->  Gather Merge  (cost=126392.37..1151115.27 rows=15630 width=70) (actual time=6404.939..21772.783 rows=7881 loops=1)
                           Workers Planned: 2
                           Workers Launched: 2
                           ->  Incremental Sort  (cost=125392.34..1148311.16 rows=6512 width=70) (actual time=6382.074..21131.652 rows=2627 loops=3)
                                 Sort Key: t.id, (array_agg(g.name)), te.season_number
                                 Presorted Key: t.id
                                 Full-sort Groups: 84  Sort Method: quicksort  Average Memory: 29kB  Peak Memory: 29kB
                                 Worker 0:  Full-sort Groups: 80  Sort Method: quicksort  Average Memory: 30kB  Peak Memory: 30kB
                                 Worker 1:  Full-sort Groups: 83  Sort Method: quicksort  Average Memory: 29kB  Peak Memory: 29kB
                                 ->  Merge Join  (cost=125235.27..1148018.12 rows=6512 width=70) (actual time=6359.146..21127.302 rows=2627 loops=3)
                                       Merge Cond: ((te.parent_title_id)::text = (tg.title_id)::text)
                                       ->  Sort  (cost=125234.56..125234.66 rows=40 width=48) (actual time=6286.180..6288.250 rows=2721 loops=3)
                                             Sort Key: t.id
                                             Sort Method: quicksort  Memory: 378kB
                                             Worker 0:  Sort Method: quicksort  Memory: 364kB
                                             Worker 1:  Sort Method: quicksort  Memory: 371kB
                                             ->  Nested Loop  (cost=1.30..125233.50 rows=40 width=48) (actual time=243.260..6279.515 rows=2721 loops=3)
                                                   ->  Nested Loop  (cost=0.87..124286.30 rows=1688 width=18) (actual time=242.152..5039.924 rows=2840 loops=3)
                                                         ->  Nested Loop  (cost=0.43..122927.23 rows=2811 width=24) (actual time=240.745..3215.100 rows=3953 loops=3)
                                                               ->  Parallel Seq Scan on userhistory uh  (cost=0.00..111331.30 rows=2811 width=14) (actual time=239.765..1948.963 rows=3953 loops=3)
                                                                     Filter: ((last_seen <= now()) AND (last_seen >= (now() - '30 days'::interval)))
                                                                     Rows Removed by Filter: 1996678
                                                               ->  Index Only Scan using title_pkey on title t2  (cost=0.43..4.13 rows=1 width=10) (actual time=0.318..0.318 rows=1 loops=11858)
                                                                     Index Cond: (id = (uh.title_id)::text)
                                                                     Heap Fetches: 0
                                                         ->  Index Scan using titleepisode_pkey on titleepisode te  (cost=0.43..0.48 rows=1 width=24) (actual time=0.459..0.459 rows=1 loops=11858)
                                                               Index Cond: ((title_id)::text = (t2.id)::text)
                                                               Filter: (season_number IS NOT NULL)
                                                               Rows Removed by Filter: 0
                                                   ->  Index Scan using title_pkey on title t  (cost=0.43..0.56 rows=1 width=30) (actual time=0.434..0.434 rows=1 loops=8519)
                                                         Index Cond: ((id)::text = (te.parent_title_id)::text)
                                                         Filter: ((title_type)::text = 'tvSeries'::text)
                                                         Rows Removed by Filter: 0
                                       ->  GroupAggregate  (cost=0.71..966584.70 rows=4490736 width=42) (actual time=1.048..13877.290 rows=9374671 loops=3)
                                             Group Key: tg.title_id
                                             ->  Nested Loop  (cost=0.71..834458.28 rows=15198444 width=17) (actual time=1.020..7586.359 rows=15193225 loops=3)
                                                   ->  Index Only Scan using titlegenre_pkey on titlegenre tg  (cost=0.56..462073.22 rows=15198444 width=14) (actual time=0.913..2838.359 rows=15193225 loops=3)
                                                         Heap Fetches: 0
                                                   ->  Memoize  (cost=0.15..0.17 rows=1 width=11) (actual time=0.000..0.000 rows=1 loops=45579675)
                                                         Cache Key: tg.genre_id
                                                         Cache Mode: logical
                                                         Hits: 15197777  Misses: 28  Evictions: 0  Overflows: 0  Memory Usage: 4kB
                                                         Worker 0:  Hits: 15197335  Misses: 28  Evictions: 0  Overflows: 0  Memory Usage: 4kB
                                                         Worker 1:  Hits: 15184479  Misses: 28  Evictions: 0  Overflows: 0  Memory Usage: 4kB
                                                         ->  Index Scan using genre_pkey on genre g  (cost=0.14..0.16 rows=1 width=11) (actual time=0.005..0.005 rows=1 loops=84)
                                                               Index Cond: (id = tg.genre_id)
                     ->  Memoize  (cost=0.30..1.63 rows=1 width=4) (actual time=0.017..0.017 rows=1 loops=7881)
                           Cache Key: uh.user_id
                           Cache Mode: logical
                           Hits: 280  Misses: 7601  Evictions: 0  Overflows: 0  Memory Usage: 770kB
                           ->  Index Scan using users_pkey on users u  (cost=0.29..1.62 rows=1 width=4) (actual time=0.016..0.016 rows=1 loops=7601)
                                 Index Cond: (id = uh.user_id)
                                 Filter: ((country_code)::text <> ALL ('{US,GB}'::text[]))
                                 Rows Removed by Filter: 0
 Planning Time: 14.527 ms
 JIT:
   Functions: 129
   Options: Inlining true, Optimization true, Expressions true, Deforming true
   Timing: Generation 7.251 ms, Inlining 271.159 ms, Optimization 558.021 ms, Emission 407.886 ms, Total 1244.317 ms
 Execution Time: 22774.760 ms
(67 rows)

