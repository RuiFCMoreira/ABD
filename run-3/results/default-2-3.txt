explain analyze SELECT t.id, t.primary_title, tg.genres, te.season_number, count(*) AS views
FROM title t
JOIN titleEpisode te ON te.parent_title_id = t.id
JOIN title t2 ON t2.id = te.title_id
JOIN userHistory uh ON uh.title_id = t2.id
JOIN users u ON u.id = uh.user_id
JOIN (
    SELECT tg.title_id, array_agg(g.name) AS genres
    FROM titleGenre tg
    JOIN genre g ON g.id = tg.genre_id
    GROUP BY tg.title_id
) tg ON tg.title_id = t.id
WHERE t.title_type = 'tvSeries'
    AND uh.last_seen BETWEEN NOW() - INTERVAL '30 days' AND NOW()
    AND te.season_number IS NOT NULL
    AND u.country_code NOT IN ('US', 'GB')
GROUP BY t.id, t.primary_title, tg.genres, te.season_number
ORDER BY count(*) DESC, t.id
LIMIT 100;
                                                                                                   QUERY PLAN                                                                                                    
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1133655.37..1133655.62 rows=100 width=74) (actual time=23282.204..23282.366 rows=100 loops=1)
   ->  Sort  (cost=1133655.37..1133671.96 rows=6634 width=74) (actual time=22680.179..22680.333 rows=100 loops=1)
         Sort Key: (count(*)) DESC, t.id
         Sort Method: top-N heapsort  Memory: 41kB
         ->  Finalize GroupAggregate  (cost=118873.10..1133401.82 rows=6634 width=74) (actual time=7701.657..22678.214 rows=5809 loops=1)
               Group Key: t.id, (array_agg(g.name)), te.season_number
               ->  Gather Merge  (cost=118873.10..1133280.20 rows=5528 width=74) (actual time=7701.601..22674.862 rows=6455 loops=1)
                     Workers Planned: 2
                     Workers Launched: 2
                     ->  Partial GroupAggregate  (cost=117873.08..1131642.11 rows=2764 width=74) (actual time=7678.161..22092.808 rows=2152 loops=3)
                           Group Key: t.id, (array_agg(g.name)), te.season_number
                           ->  Incremental Sort  (cost=117873.08..1131586.83 rows=2764 width=66) (actual time=7678.120..22091.240 rows=2376 loops=3)
                                 Sort Key: t.id, (array_agg(g.name)), te.season_number
                                 Presorted Key: t.id
                                 Full-sort Groups: 75  Sort Method: quicksort  Average Memory: 29kB  Peak Memory: 29kB
                                 Worker 0:  Full-sort Groups: 72  Sort Method: quicksort  Average Memory: 29kB  Peak Memory: 29kB
                                 Worker 1:  Full-sort Groups: 75  Sort Method: quicksort  Average Memory: 29kB  Peak Memory: 29kB
                                 ->  Merge Join  (cost=117506.23..1131462.45 rows=2764 width=66) (actual time=7653.723..22086.876 rows=2376 loops=3)
                                       Merge Cond: ((te.parent_title_id)::text = (tg.title_id)::text)
                                       ->  Sort  (cost=117505.52..117505.57 rows=19 width=44) (actual time=7582.675..7584.777 rows=2461 loops=3)
                                             Sort Key: t.id
                                             Sort Method: quicksort  Memory: 322kB
                                             Worker 0:  Sort Method: quicksort  Memory: 314kB
                                             Worker 1:  Sort Method: quicksort  Memory: 323kB
                                             ->  Nested Loop  (cost=1.59..117505.12 rows=19 width=44) (actual time=304.143..7575.705 rows=2461 loops=3)
                                                   ->  Nested Loop  (cost=1.30..117448.28 rows=19 width=48) (actual time=304.083..7537.205 rows=2484 loops=3)
                                                         ->  Nested Loop  (cost=0.87..117044.66 rows=720 width=18) (actual time=302.592..6026.096 rows=2593 loops=3)
                                                               ->  Nested Loop  (cost=0.43..116467.87 rows=1193 width=24) (actual time=300.614..3828.624 rows=3611 loops=3)
                                                                     ->  Parallel Seq Scan on userhistory uh  (cost=0.00..111329.32 rows=1193 width=14) (actual time=299.370..2286.584 rows=3611 loops=3)
                                                                           Filter: ((last_seen <= now()) AND (last_seen >= (now() - '30 days'::interval)))
                                                                           Rows Removed by Filter: 1997019
                                                                     ->  Index Only Scan using title_pkey on title t2  (cost=0.43..4.31 rows=1 width=10) (actual time=0.424..0.424 rows=1 loops=10834)
                                                                           Index Cond: (id = (uh.title_id)::text)
                                                                           Heap Fetches: 0
                                                               ->  Index Scan using titleepisode_pkey on titleepisode te  (cost=0.43..0.48 rows=1 width=24) (actual time=0.605..0.605 rows=1 loops=10834)
                                                                     Index Cond: ((title_id)::text = (t2.id)::text)
                                                                     Filter: (season_number IS NOT NULL)
                                                                     Rows Removed by Filter: 0
                                                         ->  Index Scan using title_pkey on title t  (cost=0.43..0.56 rows=1 width=30) (actual time=0.579..0.579 rows=1 loops=7778)
                                                               Index Cond: ((id)::text = (te.parent_title_id)::text)
                                                               Filter: ((title_type)::text = 'tvSeries'::text)
                                                               Rows Removed by Filter: 0
                                                   ->  Index Scan using users_pkey on users u  (cost=0.29..2.99 rows=1 width=4) (actual time=0.012..0.012 rows=1 loops=7451)
                                                         Index Cond: (id = uh.user_id)
                                                         Filter: ((country_code)::text <> ALL ('{US,GB}'::text[]))
                                                         Rows Removed by Filter: 0
                                       ->  GroupAggregate  (cost=0.71..962198.93 rows=4138392 width=42) (actual time=1.665..13509.389 rows=9374750 loops=3)
                                             Group Key: tg.title_id
                                             ->  Nested Loop  (cost=0.71..834474.73 rows=15198860 width=17) (actual time=1.633..7173.108 rows=15193346 loops=3)
                                                   ->  Index Only Scan using titlegenre_pkey on titlegenre tg  (cost=0.56..462079.46 rows=15198860 width=14) (actual time=1.560..2422.672 rows=15193346 loops=3)
                                                         Heap Fetches: 0
                                                   ->  Memoize  (cost=0.15..0.17 rows=1 width=11) (actual time=0.000..0.000 rows=1 loops=45580039)
                                                         Cache Key: tg.genre_id
                                                         Cache Mode: logical
                                                         Hits: 15197777  Misses: 28  Evictions: 0  Overflows: 0  Memory Usage: 4kB
                                                         Worker 0:  Hits: 15184479  Misses: 28  Evictions: 0  Overflows: 0  Memory Usage: 4kB
                                                         Worker 1:  Hits: 15197699  Misses: 28  Evictions: 0  Overflows: 0  Memory Usage: 4kB
                                                         ->  Index Scan using genre_pkey on genre g  (cost=0.14..0.16 rows=1 width=11) (actual time=0.003..0.003 rows=1 loops=84)
                                                               Index Cond: (id = tg.genre_id)
 Planning Time: 19.381 ms
 JIT:
   Functions: 148
   Options: Inlining true, Optimization true, Expressions true, Deforming true
   Timing: Generation 8.658 ms, Inlining 288.276 ms, Optimization 676.786 ms, Emission 533.860 ms, Total 1507.579 ms
 Execution Time: 23714.505 ms
(65 rows)

