explain analyze SELECT t.id, t.primary_title, tg.genres, te.season_number, count(*) AS views
FROM title t
JOIN titleEpisode te ON te.parent_title_id = t.id
JOIN title t2 ON t2.id = te.title_id
JOIN userHistory uh ON uh.title_id = t2.id
JOIN users u ON u.id = uh.user_id
JOIN (
    SELECT tg.title_id, array_agg(g.name) AS genres
    FROM titleGenre tg
    JOIN genre g ON g.id = tg.genre_id
    GROUP BY tg.title_id
) tg ON tg.title_id = t.id
WHERE t.title_type = 'tvSeries'
    AND uh.last_seen BETWEEN NOW() - INTERVAL '30 days' AND NOW()
    AND te.season_number IS NOT NULL
    AND u.country_code NOT IN ('US', 'GB')
GROUP BY t.id, t.primary_title, tg.genres, te.season_number
ORDER BY count(*) DESC, t.id
LIMIT 100;
                                                                                             QUERY PLAN                                                                                              
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1135302.59..1135302.84 rows=100 width=74) (actual time=23932.860..23932.996 rows=100 loops=1)
   ->  Sort  (cost=1135302.59..1135307.36 rows=1911 width=74) (actual time=23449.874..23450.002 rows=100 loops=1)
         Sort Key: (count(*)) DESC, t.id
         Sort Method: top-N heapsort  Memory: 41kB
         ->  GroupAggregate  (cost=114375.85..1135229.55 rows=1911 width=74) (actual time=4909.461..23447.553 rows=6084 loops=1)
               Group Key: t.id, (array_agg(g.name)), te.season_number
               ->  Incremental Sort  (cost=114375.85..1135191.33 rows=1911 width=66) (actual time=4909.416..23442.952 rows=7538 loops=1)
                     Sort Key: t.id, (array_agg(g.name)), te.season_number
                     Presorted Key: t.id
                     Full-sort Groups: 231  Sort Method: quicksort  Average Memory: 29kB  Peak Memory: 29kB
                     ->  Merge Join  (cost=113841.42..1135105.33 rows=1911 width=66) (actual time=4872.561..23431.138 rows=7538 loops=1)
                           Merge Cond: ((te.parent_title_id)::text = (tg.title_id)::text)
                           ->  Nested Loop  (cost=113840.72..114007.99 rows=12 width=44) (actual time=4810.824..9501.378 rows=7804 loops=1)
                                 ->  Nested Loop  (cost=113840.42..113945.94 rows=12 width=48) (actual time=4810.119..9346.973 rows=7878 loops=1)
                                       ->  Gather Merge  (cost=113840.42..113891.78 rows=441 width=18) (actual time=4808.474..4819.499 rows=8222 loops=1)
                                             Workers Planned: 2
                                             Workers Launched: 2
                                             ->  Sort  (cost=112840.40..112840.86 rows=184 width=18) (actual time=4790.018..4790.996 rows=2741 loops=3)
                                                   Sort Key: te.parent_title_id
                                                   Sort Method: quicksort  Memory: 314kB
                                                   Worker 0:  Sort Method: quicksort  Memory: 307kB
                                                   Worker 1:  Sort Method: quicksort  Memory: 310kB
                                                   ->  Nested Loop  (cost=0.87..112833.48 rows=184 width=18) (actual time=121.276..4784.516 rows=2741 loops=3)
                                                         ->  Nested Loop  (cost=0.43..112685.06 rows=307 width=24) (actual time=120.342..3066.409 rows=3820 loops=3)
                                                               ->  Parallel Seq Scan on userhistory uh  (cost=0.00..111329.82 rows=307 width=14) (actual time=119.254..1744.782 rows=3820 loops=3)
                                                                     Filter: ((last_seen <= now()) AND (last_seen >= (now() - '30 days'::interval)))
                                                                     Rows Removed by Filter: 1996811
                                                               ->  Index Only Scan using title_pkey on title t2  (cost=0.43..4.41 rows=1 width=10) (actual time=0.344..0.344 rows=1 loops=11460)
                                                                     Index Cond: (id = (uh.title_id)::text)
                                                                     Heap Fetches: 0
                                                         ->  Index Scan using titleepisode_pkey on titleepisode te  (cost=0.43..0.48 rows=1 width=24) (actual time=0.448..0.448 rows=1 loops=11460)
                                                               Index Cond: ((title_id)::text = (t2.id)::text)
                                                               Filter: (season_number IS NOT NULL)
                                                               Rows Removed by Filter: 0
                                       ->  Index Scan using title_hash on title t  (cost=0.00..0.12 rows=1 width=30) (actual time=0.549..0.549 rows=1 loops=8222)
                                             Index Cond: ((id)::text = (te.parent_title_id)::text)
                                             Rows Removed by Index Recheck: 0
                                             Filter: ((title_type)::text = 'tvSeries'::text)
                                             Rows Removed by Filter: 0
                                 ->  Index Scan using users_pkey on users u  (cost=0.29..5.17 rows=1 width=4) (actual time=0.018..0.018 rows=1 loops=7878)
                                       Index Cond: (id = uh.user_id)
                                       Filter: ((country_code)::text <> ALL ('{US,GB}'::text[]))
                                       Rows Removed by Filter: 0
                           ->  GroupAggregate  (cost=0.71..965773.62 rows=4424367 width=42) (actual time=1.479..13007.164 rows=9377582 loops=1)
                                 Group Key: tg.title_id
                                 ->  Nested Loop  (cost=0.71..834474.73 rows=15198860 width=17) (actual time=1.451..6878.212 rows=15197805 loops=1)
                                       ->  Index Only Scan using titlegenre_pkey on titlegenre tg  (cost=0.56..462079.46 rows=15198860 width=14) (actual time=1.390..2253.101 rows=15197805 loops=1)
                                             Heap Fetches: 0
                                       ->  Memoize  (cost=0.15..0.17 rows=1 width=11) (actual time=0.000..0.000 rows=1 loops=15197805)
                                             Cache Key: tg.genre_id
                                             Cache Mode: logical
                                             Hits: 15197777  Misses: 28  Evictions: 0  Overflows: 0  Memory Usage: 4kB
                                             ->  Index Scan using genre_pkey on genre g  (cost=0.14..0.16 rows=1 width=11) (actual time=0.003..0.003 rows=1 loops=28)
                                                   Index Cond: (id = tg.genre_id)
 Planning Time: 23.870 ms
 JIT:
   Functions: 73
   Options: Inlining true, Optimization true, Expressions true, Deforming true
   Timing: Generation 4.675 ms, Inlining 259.245 ms, Optimization 326.420 ms, Emission 253.523 ms, Total 843.864 ms
 Execution Time: 24285.310 ms
(60 rows)

