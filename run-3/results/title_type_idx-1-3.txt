explain analyze SELECT *
FROM (
    SELECT t.id,
        left(t.primary_title, 30),
        ((start_year / 10) * 10)::int AS decade,
        avg(uh.rating) AS rating,
        rank() over (
            PARTITION by ((start_year / 10) * 10) :: int
            ORDER BY avg(uh.rating) DESC, t.id
        ) AS rank
    FROM title t
    JOIN userHistory uh ON uh.title_id = t.id
    WHERE t.title_type = 'movie'
        AND ((start_year / 10) * 10)::int >= 1980
        AND t.id IN (
            SELECT title_id
            FROM titleGenre tg
            JOIN genre g ON g.id = tg.genre_id
            WHERE g.name IN (
                'Drama'
            )
        )
        AND t.id IN (
            SELECT title_id
            FROM titleAkas
            WHERE region IN (
                'US', 'GB', 'ES', 'DE', 'FR', 'PT'
            )
        )
    GROUP BY t.id
    HAVING count(uh.rating) >= 3
    ORDER BY decade, rating DESC
) t_
WHERE rank <= 10;
                                                                                                QUERY PLAN                                                                                                 
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Subquery Scan on t_  (cost=413488.25..413504.62 rows=128 width=86) (actual time=41375.108..41426.576 rows=50 loops=1)
   Filter: (t_.rank <= 10)
   Rows Removed by Filter: 1953
   ->  WindowAgg  (cost=413488.25..413499.80 rows=385 width=86) (actual time=41375.103..41426.452 rows=2003 loops=1)
         ->  Sort  (cost=413488.25..413489.22 rows=385 width=66) (actual time=41375.032..41424.814 rows=2003 loops=1)
               Sort Key: (((t.start_year / 10) * 10)), (avg(uh.rating)) DESC, t.id
               Sort Method: quicksort  Memory: 228kB
               ->  Finalize GroupAggregate  (cost=413324.32..413471.72 rows=385 width=66) (actual time=41314.341..41420.610 rows=2003 loops=1)
                     Group Key: t.id
                     Filter: (count(uh.rating) >= 3)
                     Rows Removed by Filter: 40986
                     ->  Gather Merge  (cost=413324.32..413445.23 rows=964 width=74) (actual time=41314.292..41389.703 rows=45103 loops=1)
                           Workers Planned: 2
                           Workers Launched: 2
                           ->  Partial GroupAggregate  (cost=412324.29..412333.93 rows=482 width=74) (actual time=41293.846..41307.488 rows=15034 loops=3)
                                 Group Key: t.id
                                 ->  Sort  (cost=412324.29..412325.50 rows=482 width=38) (actual time=41293.785..41297.183 rows=20226 loops=3)
                                       Sort Key: t.id
                                       Sort Method: quicksort  Memory: 2368kB
                                       Worker 0:  Sort Method: quicksort  Memory: 2459kB
                                       Worker 1:  Sort Method: quicksort  Memory: 2403kB
                                       ->  Nested Loop Semi Join  (cost=188254.79..412302.81 rows=482 width=38) (actual time=11526.098..41251.057 rows=20226 loops=3)
                                             ->  Nested Loop Semi Join  (cost=188254.09..394536.81 rows=8708 width=58) (actual time=11525.064..35572.983 rows=58327 loops=3)
                                                   ->  Parallel Hash Join  (cost=188253.52..300016.62 rows=55074 width=48) (actual time=11521.951..12291.368 rows=96250 loops=3)
                                                         Hash Cond: ((uh.title_id)::text = (t.id)::text)
                                                         ->  Parallel Seq Scan on userhistory uh  (cost=0.00..80070.40 rows=2500840 width=14) (actual time=0.261..1459.686 rows=2000631 loops=3)
                                                         ->  Parallel Hash  (cost=186423.71..186423.71 rows=90065 width=34) (actual time=9604.483..9604.486 rows=129726 loops=3)
                                                               Buckets: 65536  Batches: 8  Memory Usage: 3840kB
                                                               ->  Parallel Bitmap Heap Scan on title t  (cost=7145.96..186423.71 rows=90065 width=34) (actual time=121.173..9520.578 rows=129726 loops=3)
                                                                     Recheck Cond: ((title_type)::text = 'movie'::text)
                                                                     Rows Removed by Index Recheck: 830781
                                                                     Filter: (((start_year / 10) * 10) >= 1980)
                                                                     Rows Removed by Filter: 84905
                                                                     Heap Blocks: exact=21090 lossy=11075
                                                                     ->  Bitmap Index Scan on title_type_idx  (cost=0.00..7091.92 rows=648465 width=0) (actual time=52.169..52.170 rows=643892 loops=1)
                                                                           Index Cond: ((title_type)::text = 'movie'::text)
                                                   ->  Index Scan using titleakas_pkey on titleakas  (cost=0.56..34.48 rows=34 width=10) (actual time=0.241..0.241 rows=1 loops=288751)
                                                         Index Cond: ((title_id)::text = (uh.title_id)::text)
                                                         Filter: ((region)::text = ANY ('{US,GB,ES,DE,FR,PT}'::text[]))
                                                         Rows Removed by Filter: 1
                                             ->  Nested Loop  (cost=0.70..2.03 rows=1 width=10) (actual time=0.097..0.097 rows=0 loops=174982)
                                                   ->  Index Only Scan using titlegenre_pkey on titlegenre tg  (cost=0.56..1.38 rows=4 width=14) (actual time=0.092..0.093 rows=1 loops=174982)
                                                         Index Cond: (title_id = (uh.title_id)::text)
                                                         Heap Fetches: 0
                                                   ->  Index Scan using genre_pkey on genre g  (cost=0.14..0.16 rows=1 width=4) (actual time=0.002..0.002 rows=0 loops=241884)
                                                         Index Cond: (id = tg.genre_id)
                                                         Filter: ((name)::text = 'Drama'::text)
                                                         Rows Removed by Filter: 1
 Planning Time: 15.048 ms
 JIT:
   Functions: 114
   Options: Inlining false, Optimization false, Expressions true, Deforming true
   Timing: Generation 7.264 ms, Inlining 0.000 ms, Optimization 10.779 ms, Emission 192.578 ms, Total 210.621 ms
 Execution Time: 41780.372 ms
(54 rows)

