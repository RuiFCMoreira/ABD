explain analyze SELECT t.id, t.primary_title, tg.genres, te.season_number, count(*) AS views
FROM title t
JOIN titleEpisode te ON te.parent_title_id = t.id
JOIN userHistory uh ON uh.title_id = te.title_id
JOIN users u ON u.id = uh.user_id
JOIN (
    SELECT tg.title_id, array_agg(g.name) AS genres
    FROM titleGenre tg
    JOIN genre g ON g.id = tg.genre_id
    GROUP BY tg.title_id
) tg ON tg.title_id = t.id
WHERE t.title_type = 'tvSeries'
    AND uh.last_seen BETWEEN NOW() - INTERVAL '30 days' AND NOW()
    AND te.season_number IS NOT NULL
    AND u.country_code NOT IN ('US', 'GB')
GROUP BY t.id, t.primary_title, tg.genres, te.season_number
ORDER BY count(*) DESC, t.id
LIMIT 100;
                                                                                                   QUERY PLAN                                                                                                    
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=974915.51..974915.76 rows=100 width=74) (actual time=21649.108..21649.271 rows=100 loops=1)
   ->  Sort  (cost=974915.51..974967.26 rows=20698 width=74) (actual time=21081.283..21081.439 rows=100 loops=1)
         Sort Key: (count(*)) DESC, t.id
         Sort Method: top-N heapsort  Memory: 41kB
         ->  Finalize GroupAggregate  (cost=120179.66..974124.45 rows=20698 width=74) (actual time=5799.211..21079.224 rows=6075 loops=1)
               Group Key: t.id, (array_agg(g.name)), te.season_number
               ->  Gather Merge  (cost=120179.66..973744.99 rows=17248 width=74) (actual time=5799.162..21075.726 rows=6781 loops=1)
                     Workers Planned: 2
                     Workers Launched: 2
                     ->  Partial GroupAggregate  (cost=119179.64..970754.12 rows=8624 width=74) (actual time=5772.940..20339.496 rows=2260 loops=3)
                           Group Key: t.id, (array_agg(g.name)), te.season_number
                           ->  Incremental Sort  (cost=119179.64..970581.64 rows=8624 width=66) (actual time=5772.898..20337.828 rows=2508 loops=3)
                                 Sort Key: t.id, (array_agg(g.name)), te.season_number
                                 Presorted Key: t.id
                                 Full-sort Groups: 84  Sort Method: quicksort  Average Memory: 29kB  Peak Memory: 29kB
                                 Worker 0:  Full-sort Groups: 78  Sort Method: quicksort  Average Memory: 30kB  Peak Memory: 30kB
                                 Worker 1:  Full-sort Groups: 74  Sort Method: quicksort  Average Memory: 29kB  Peak Memory: 29kB
                                 ->  Merge Join  (cost=119080.93..970193.56 rows=8624 width=66) (actual time=5748.230..20333.416 rows=2508 loops=3)
                                       Merge Cond: ((te.parent_title_id)::text = (tg.title_id)::text)
                                       ->  Sort  (cost=119080.23..119080.37 rows=58 width=44) (actual time=5678.623..5680.681 rows=2597 loops=3)
                                             Sort Key: t.id
                                             Sort Method: quicksort  Memory: 348kB
                                             Worker 0:  Sort Method: quicksort  Memory: 329kB
                                             Worker 1:  Sort Method: quicksort  Memory: 319kB
                                             ->  Nested Loop  (cost=0.72..119078.53 rows=58 width=44) (actual time=296.084..5672.536 rows=2597 loops=3)
                                                   ->  Nested Loop  (cost=0.43..119038.15 rows=58 width=48) (actual time=296.025..5632.274 rows=2621 loops=3)
                                                         ->  Nested Loop  (cost=0.43..118923.02 rows=2266 width=18) (actual time=294.775..4070.706 rows=2736 loops=3)
                                                               ->  Parallel Seq Scan on userhistory uh  (cost=0.00..111328.05 rows=2867 width=14) (actual time=293.532..2142.695 rows=3812 loops=3)
                                                                     Filter: ((last_seen <= now()) AND (last_seen >= (now() - '30 days'::interval)))
                                                                     Rows Removed by Filter: 1996818
                                                               ->  Index Scan using titleepisode_pkey on titleepisode te  (cost=0.43..2.65 rows=1 width=24) (actual time=0.503..0.503 rows=1 loops=11437)
                                                                     Index Cond: ((title_id)::text = (uh.title_id)::text)
                                                                     Filter: (season_number IS NOT NULL)
                                                                     Rows Removed by Filter: 0
                                                         ->  Index Scan using title_hash on title t  (cost=0.00..0.05 rows=1 width=30) (actual time=0.567..0.567 rows=1 loops=8207)
                                                               Index Cond: ((id)::text = (te.parent_title_id)::text)
                                                               Rows Removed by Index Recheck: 0
                                                               Filter: ((title_type)::text = 'tvSeries'::text)
                                                               Rows Removed by Filter: 0
                                                   ->  Index Scan using users_pkey on users u  (cost=0.29..0.70 rows=1 width=4) (actual time=0.012..0.012 rows=1 loops=7864)
                                                         Index Cond: (id = uh.user_id)
                                                         Filter: ((country_code)::text <> ALL ('{US,GB}'::text[]))
                                                         Rows Removed by Filter: 0
                                       ->  GroupAggregate  (cost=0.71..798813.94 rows=4176969 width=42) (actual time=1.401..13685.136 rows=9374029 loops=3)
                                             Group Key: tg.title_id
                                             ->  Nested Loop  (cost=0.71..670607.53 rows=15198860 width=17) (actual time=1.372..7395.956 rows=15192209 loops=3)
                                                   ->  Index Only Scan using titlegenre_pkey on titlegenre tg  (cost=0.56..298212.26 rows=15198860 width=14) (actual time=1.306..2668.993 rows=15192209 loops=3)
                                                         Heap Fetches: 0
                                                   ->  Memoize  (cost=0.15..0.17 rows=1 width=11) (actual time=0.000..0.000 rows=1 loops=45576626)
                                                         Cache Key: tg.genre_id
                                                         Cache Mode: logical
                                                         Hits: 15182261  Misses: 28  Evictions: 0  Overflows: 0  Memory Usage: 4kB
                                                         Worker 0:  Hits: 15196504  Misses: 28  Evictions: 0  Overflows: 0  Memory Usage: 4kB
                                                         Worker 1:  Hits: 15197777  Misses: 28  Evictions: 0  Overflows: 0  Memory Usage: 4kB
                                                         ->  Index Scan using genre_pkey on genre g  (cost=0.14..0.16 rows=1 width=11) (actual time=0.004..0.004 rows=1 loops=84)
                                                               Index Cond: (id = tg.genre_id)
 Planning Time: 18.077 ms
 JIT:
   Functions: 139
   Options: Inlining true, Optimization true, Expressions true, Deforming true
   Timing: Generation 8.332 ms, Inlining 284.872 ms, Optimization 663.506 ms, Emission 498.889 ms, Total 1455.599 ms
 Execution Time: 22013.585 ms
(62 rows)

