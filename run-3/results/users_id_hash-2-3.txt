explain analyze SELECT t.id, t.primary_title, tg.genres, te.season_number, count(*) AS views
FROM title t
JOIN titleEpisode te ON te.parent_title_id = t.id
JOIN title t2 ON t2.id = te.title_id
JOIN userHistory uh ON uh.title_id = t2.id
JOIN users u ON u.id = uh.user_id
JOIN (
    SELECT tg.title_id, array_agg(g.name) AS genres
    FROM titleGenre tg
    JOIN genre g ON g.id = tg.genre_id
    GROUP BY tg.title_id
) tg ON tg.title_id = t.id
WHERE t.title_type = 'tvSeries'
    AND uh.last_seen BETWEEN NOW() - INTERVAL '30 days' AND NOW()
    AND te.season_number IS NOT NULL
    AND u.country_code NOT IN ('US', 'GB')
GROUP BY t.id, t.primary_title, tg.genres, te.season_number
ORDER BY count(*) DESC, t.id
LIMIT 100;
                                                                                                   QUERY PLAN                                                                                                    
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1163430.18..1163430.43 rows=100 width=74) (actual time=21414.746..21414.882 rows=100 loops=1)
   ->  Sort  (cost=1163430.18..1163469.11 rows=15572 width=74) (actual time=20890.533..20890.662 rows=100 loops=1)
         Sort Key: (count(*)) DESC, t.id
         Sort Method: top-N heapsort  Memory: 41kB
         ->  GroupAggregate  (cost=126310.64..1162835.03 rows=15572 width=74) (actual time=5939.158..20888.103 rows=6098 loops=1)
               Group Key: t.id, (array_agg(g.name)), te.season_number
               ->  Nested Loop  (cost=126310.64..1162523.59 rows=15572 width=66) (actual time=5938.717..20883.123 rows=7561 loops=1)
                     ->  Gather Merge  (cost=126310.63..1152765.12 rows=15738 width=70) (actual time=5937.772..20667.997 rows=7631 loops=1)
                           Workers Planned: 2
                           Workers Launched: 2
                           ->  Incremental Sort  (cost=125310.60..1149948.54 rows=6558 width=70) (actual time=5913.613..20368.989 rows=2544 loops=3)
                                 Sort Key: t.id, (array_agg(g.name)), te.season_number
                                 Presorted Key: t.id
                                 Full-sort Groups: 80  Sort Method: quicksort  Average Memory: 30kB  Peak Memory: 30kB
                                 Worker 0:  Full-sort Groups: 78  Sort Method: quicksort  Average Memory: 29kB  Peak Memory: 29kB
                                 Worker 1:  Full-sort Groups: 80  Sort Method: quicksort  Average Memory: 29kB  Peak Memory: 29kB
                                 ->  Merge Join  (cost=125154.37..1149653.43 rows=6558 width=70) (actual time=5891.531..20365.214 rows=2544 loops=3)
                                       Merge Cond: ((te.parent_title_id)::text = (tg.title_id)::text)
                                       ->  Sort  (cost=125153.66..125153.76 rows=40 width=48) (actual time=5822.576..5824.256 rows=2634 loops=3)
                                             Sort Key: t.id
                                             Sort Method: quicksort  Memory: 364kB
                                             Worker 0:  Sort Method: quicksort  Memory: 361kB
                                             Worker 1:  Sort Method: quicksort  Memory: 362kB
                                             ->  Nested Loop  (cost=1.30..125152.60 rows=40 width=48) (actual time=246.357..5816.835 rows=2634 loops=3)
                                                   ->  Nested Loop  (cost=0.87..124210.61 rows=1679 width=18) (actual time=245.330..4641.530 rows=2749 loops=3)
                                                         ->  Nested Loop  (cost=0.43..122859.77 rows=2794 width=24) (actual time=244.156..2936.105 rows=3831 loops=3)
                                                               ->  Parallel Seq Scan on userhistory uh  (cost=0.00..111329.57 rows=2794 width=14) (actual time=243.221..1758.201 rows=3831 loops=3)
                                                                     Filter: ((last_seen <= now()) AND (last_seen >= (now() - '30 days'::interval)))
                                                                     Rows Removed by Filter: 1996799
                                                               ->  Index Only Scan using title_pkey on title t2  (cost=0.43..4.13 rows=1 width=10) (actual time=0.305..0.305 rows=1 loops=11494)
                                                                     Index Cond: (id = (uh.title_id)::text)
                                                                     Heap Fetches: 0
                                                         ->  Index Scan using titleepisode_pkey on titleepisode te  (cost=0.43..0.48 rows=1 width=24) (actual time=0.443..0.443 rows=1 loops=11494)
                                                               Index Cond: ((title_id)::text = (t2.id)::text)
                                                               Filter: (season_number IS NOT NULL)
                                                               Rows Removed by Filter: 0
                                                   ->  Index Scan using title_pkey on title t  (cost=0.43..0.56 rows=1 width=30) (actual time=0.425..0.425 rows=1 loops=8248)
                                                         Index Cond: ((id)::text = (te.parent_title_id)::text)
                                                         Filter: ((title_type)::text = 'tvSeries'::text)
                                                         Rows Removed by Filter: 0
                                       ->  GroupAggregate  (cost=0.71..967441.90 rows=4559312 width=42) (actual time=1.137..13443.710 rows=9377195 loops=3)
                                             Group Key: tg.title_id
                                             ->  Nested Loop  (cost=0.71..834458.28 rows=15198444 width=17) (actual time=1.110..7210.244 rows=15197233 loops=3)
                                                   ->  Index Only Scan using titlegenre_pkey on titlegenre tg  (cost=0.56..462073.22 rows=15198444 width=14) (actual time=1.048..2404.246 rows=15197233 loops=3)
                                                         Heap Fetches: 0
                                                   ->  Memoize  (cost=0.15..0.17 rows=1 width=11) (actual time=0.000..0.000 rows=1 loops=45591700)
                                                         Cache Key: tg.genre_id
                                                         Cache Mode: logical
                                                         Hits: 15197777  Misses: 28  Evictions: 0  Overflows: 0  Memory Usage: 4kB
                                                         Worker 0:  Hits: 15197335  Misses: 28  Evictions: 0  Overflows: 0  Memory Usage: 4kB
                                                         Worker 1:  Hits: 15196504  Misses: 28  Evictions: 0  Overflows: 0  Memory Usage: 4kB
                                                         ->  Index Scan using genre_pkey on genre g  (cost=0.14..0.16 rows=1 width=11) (actual time=0.003..0.003 rows=1 loops=84)
                                                               Index Cond: (id = tg.genre_id)
                     ->  Memoize  (cost=0.01..1.48 rows=1 width=4) (actual time=0.028..0.028 rows=1 loops=7631)
                           Cache Key: uh.user_id
                           Cache Mode: logical
                           Hits: 268  Misses: 7363  Evictions: 0  Overflows: 0  Memory Usage: 746kB
                           ->  Index Scan using users_id_hash on users u  (cost=0.00..1.47 rows=1 width=4) (actual time=0.028..0.028 rows=1 loops=7363)
                                 Index Cond: (id = uh.user_id)
                                 Filter: ((country_code)::text <> ALL ('{US,GB}'::text[]))
                                 Rows Removed by Filter: 0
 Planning Time: 14.098 ms
 JIT:
   Functions: 129
   Options: Inlining true, Optimization true, Expressions true, Deforming true
   Timing: Generation 7.154 ms, Inlining 271.454 ms, Optimization 564.836 ms, Emission 417.229 ms, Total 1260.672 ms
 Execution Time: 21743.976 ms
(67 rows)

