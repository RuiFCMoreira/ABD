explain analyze SELECT t.id, t.primary_title, tg.genres, te.season_number, count(*) AS views
FROM title t
JOIN titleEpisode te ON te.parent_title_id = t.id
JOIN userHistory uh ON uh.title_id = te.title_id
JOIN users u ON u.id = uh.user_id
JOIN (
    SELECT tg.title_id, array_agg(g.name) AS genres
    FROM titleGenre tg
    JOIN genre g ON g.id = tg.genre_id
    GROUP BY tg.title_id
) tg ON tg.title_id = t.id
WHERE t.title_type = 'tvSeries'
    AND uh.last_seen BETWEEN NOW() - INTERVAL '30 days' AND NOW()
    AND te.season_number IS NOT NULL
    AND u.country_code NOT IN ('US', 'GB')
GROUP BY t.id, t.primary_title, tg.genres, te.season_number
ORDER BY count(*) DESC, t.id
LIMIT 100;
                                                                                                   QUERY PLAN                                                                                                    
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1124960.34..1124960.59 rows=100 width=74) (actual time=22256.652..22256.820 rows=100 loops=1)
   ->  Sort  (cost=1124960.34..1125005.23 rows=17958 width=74) (actual time=21751.057..21751.218 rows=100 loops=1)
         Sort Key: (count(*)) DESC, t.id
         Sort Method: top-N heapsort  Memory: 41kB
         ->  GroupAggregate  (cost=104136.66..1124274.00 rows=17958 width=74) (actual time=3713.815..21748.067 rows=6318 loops=1)
               Group Key: t.id, (array_agg(g.name)), te.season_number
               ->  Nested Loop  (cost=104136.66..1123914.84 rows=17958 width=66) (actual time=3713.214..21742.151 rows=7868 loops=1)
                     ->  Gather Merge  (cost=104136.36..1113106.45 rows=18098 width=70) (actual time=3712.451..21594.744 rows=7940 loops=1)
                           Workers Planned: 4
                           Workers Launched: 4
                           ->  Incremental Sort  (cost=103136.30..1109950.74 rows=4524 width=70) (actual time=3652.429..20227.529 rows=1588 loops=5)
                                 Sort Key: t.id, (array_agg(g.name)), te.season_number
                                 Presorted Key: t.id
                                 Full-sort Groups: 53  Sort Method: quicksort  Average Memory: 29kB  Peak Memory: 29kB
                                 Worker 0:  Full-sort Groups: 49  Sort Method: quicksort  Average Memory: 29kB  Peak Memory: 29kB
                                 Worker 1:  Full-sort Groups: 49  Sort Method: quicksort  Average Memory: 29kB  Peak Memory: 29kB
                                 Worker 2:  Full-sort Groups: 49  Sort Method: quicksort  Average Memory: 29kB  Peak Memory: 29kB
                                 Worker 3:  Full-sort Groups: 49  Sort Method: quicksort  Average Memory: 29kB  Peak Memory: 29kB
                                 ->  Merge Join  (cost=102913.73..1109747.16 rows=4524 width=70) (actual time=3616.630..20224.651 rows=1588 loops=5)
                                       Merge Cond: ((te.parent_title_id)::text = (tg.title_id)::text)
                                       ->  Sort  (cost=102913.03..102913.11 rows=32 width=48) (actual time=3528.450..3529.664 rows=1645 loops=5)
                                             Sort Key: t.id
                                             Sort Method: quicksort  Memory: 227kB
                                             Worker 0:  Sort Method: quicksort  Memory: 212kB
                                             Worker 1:  Sort Method: quicksort  Memory: 209kB
                                             Worker 2:  Sort Method: quicksort  Memory: 212kB
                                             Worker 3:  Sort Method: quicksort  Memory: 213kB
                                             ->  Nested Loop  (cost=0.87..102912.23 rows=32 width=48) (actual time=293.983..3524.481 rows=1645 loops=5)
                                                   ->  Nested Loop  (cost=0.43..102148.04 rows=1364 width=18) (actual time=292.754..2656.235 rows=1717 loops=5)
                                                         ->  Parallel Seq Scan on userhistory uh  (cost=0.00..88822.81 rows=1712 width=14) (actual time=291.521..1482.960 rows=2389 loops=5)
                                                               Filter: ((last_seen <= now()) AND (last_seen >= (now() - '30 days'::interval)))
                                                               Rows Removed by Filter: 1197990
                                                         ->  Index Scan using titleepisode_pkey on titleepisode te  (cost=0.43..7.78 rows=1 width=24) (actual time=0.488..0.488 rows=1 loops=11944)
                                                               Index Cond: ((title_id)::text = (uh.title_id)::text)
                                                               Filter: (season_number IS NOT NULL)
                                                               Rows Removed by Filter: 0
                                                   ->  Index Scan using title_pkey on title t  (cost=0.43..0.56 rows=1 width=30) (actual time=0.503..0.503 rows=1 loops=8584)
                                                         Index Cond: ((id)::text = (te.parent_title_id)::text)
                                                         Filter: ((title_type)::text = 'tvSeries'::text)
                                                         Rows Removed by Filter: 0
                                       ->  GroupAggregate  (cost=0.71..958619.97 rows=3853557 width=42) (actual time=1.068..15537.201 rows=9372470 loops=5)
                                             Group Key: tg.title_id
                                             ->  Nested Loop  (cost=0.71..834458.28 rows=15198444 width=17) (actual time=1.037..8075.648 rows=15189687 loops=5)
                                                   ->  Index Only Scan using titlegenre_pkey on titlegenre tg  (cost=0.56..462073.22 rows=15198444 width=14) (actual time=0.954..2468.710 rows=15189687 loops=5)
                                                         Heap Fetches: 0
                                                   ->  Memoize  (cost=0.15..0.17 rows=1 width=11) (actual time=0.000..0.000 rows=1 loops=75948437)
                                                         Cache Key: tg.genre_id
                                                         Cache Mode: logical
                                                         Hits: 15197699  Misses: 28  Evictions: 0  Overflows: 0  Memory Usage: 4kB
                                                         Worker 0:  Hits: 15179029  Misses: 28  Evictions: 0  Overflows: 0  Memory Usage: 4kB
                                                         Worker 1:  Hits: 15197777  Misses: 28  Evictions: 0  Overflows: 0  Memory Usage: 4kB
                                                         Worker 2:  Hits: 15176457  Misses: 28  Evictions: 0  Overflows: 0  Memory Usage: 4kB
                                                         Worker 3:  Hits: 15197335  Misses: 28  Evictions: 0  Overflows: 0  Memory Usage: 4kB
                                                         ->  Index Scan using genre_pkey on genre g  (cost=0.14..0.16 rows=1 width=11) (actual time=0.004..0.004 rows=1 loops=140)
                                                               Index Cond: (id = tg.genre_id)
                     ->  Memoize  (cost=0.30..1.61 rows=1 width=4) (actual time=0.018..0.018 rows=1 loops=7940)
                           Cache Key: uh.user_id
                           Cache Mode: logical
                           Hits: 287  Misses: 7653  Evictions: 0  Overflows: 0  Memory Usage: 775kB
                           ->  Index Scan using users_pkey on users u  (cost=0.29..1.60 rows=1 width=4) (actual time=0.018..0.018 rows=1 loops=7653)
                                 Index Cond: (id = uh.user_id)
                                 Filter: ((country_code)::text <> ALL ('{US,GB}'::text[]))
                                 Rows Removed by Filter: 0
 Planning Time: 12.462 ms
 JIT:
   Functions: 190
   Options: Inlining true, Optimization true, Expressions true, Deforming true
   Timing: Generation 11.032 ms, Inlining 454.909 ms, Optimization 881.531 ms, Emission 625.217 ms, Total 1972.690 ms
 Execution Time: 22595.701 ms
(69 rows)

