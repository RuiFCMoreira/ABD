explain analyze SELECT t.id, t.primary_title, tg.genres, te.season_number, count(*) AS views
FROM title t
JOIN titleEpisode te ON te.parent_title_id = t.id
JOIN title t2 ON t2.id = te.title_id
JOIN userHistory uh ON uh.title_id = t2.id
JOIN users u ON u.id = uh.user_id
JOIN (
    SELECT tg.title_id, array_agg(g.name) AS genres
    FROM titleGenre tg
    JOIN genre g ON g.id = tg.genre_id
    GROUP BY tg.title_id
) tg ON tg.title_id = t.id
WHERE t.title_type = 'tvSeries'
    AND uh.last_seen BETWEEN NOW() - INTERVAL '30 days' AND NOW()
    AND te.season_number IS NOT NULL
    AND u.country_code NOT IN ('US', 'GB')
GROUP BY t.id, t.primary_title, tg.genres, te.season_number
ORDER BY count(*) DESC, t.id
LIMIT 100;
                                                                                                   QUERY PLAN                                                                                                    
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1160966.82..1160967.07 rows=100 width=74) (actual time=21738.260..21738.453 rows=100 loops=1)
   ->  Sort  (cost=1160966.82..1161005.96 rows=15656 width=74) (actual time=21190.317..21190.502 rows=100 loops=1)
         Sort Key: (count(*)) DESC, t.id
         Sort Method: top-N heapsort  Memory: 41kB
         ->  GroupAggregate  (cost=126231.64..1160368.46 rows=15656 width=74) (actual time=6384.514..21187.954 rows=6178 loops=1)
               Group Key: t.id, (array_agg(g.name)), te.season_number
               ->  Nested Loop  (cost=126231.64..1160055.34 rows=15656 width=66) (actual time=6384.001..21182.937 rows=7680 loops=1)
                     ->  Gather Merge  (cost=126231.34..1149342.31 rows=15814 width=70) (actual time=6383.309..21053.347 rows=7750 loops=1)
                           Workers Planned: 2
                           Workers Launched: 2
                           ->  Incremental Sort  (cost=125231.31..1146516.95 rows=6589 width=70) (actual time=6355.993..20572.047 rows=2583 loops=3)
                                 Sort Key: t.id, (array_agg(g.name)), te.season_number
                                 Presorted Key: t.id
                                 Full-sort Groups: 81  Sort Method: quicksort  Average Memory: 29kB  Peak Memory: 29kB
                                 Worker 0:  Full-sort Groups: 82  Sort Method: quicksort  Average Memory: 29kB  Peak Memory: 29kB
                                 Worker 1:  Full-sort Groups: 79  Sort Method: quicksort  Average Memory: 29kB  Peak Memory: 29kB
                                 ->  Merge Join  (cost=125076.32..1146220.45 rows=6589 width=70) (actual time=6335.980..20567.972 rows=2583 loops=3)
                                       Merge Cond: ((te.parent_title_id)::text = (tg.title_id)::text)
                                       ->  Sort  (cost=125075.62..125075.72 rows=42 width=48) (actual time=6266.058..6268.036 rows=2675 loops=3)
                                             Sort Key: t.id
                                             Sort Method: quicksort  Memory: 367kB
                                             Worker 0:  Sort Method: quicksort  Memory: 370kB
                                             Worker 1:  Sort Method: quicksort  Memory: 361kB
                                             ->  Nested Loop  (cost=1.30..125074.48 rows=42 width=48) (actual time=249.793..6258.616 rows=2675 loops=3)
                                                   ->  Nested Loop  (cost=0.87..124135.09 rows=1676 width=18) (actual time=248.619..5016.300 rows=2792 loops=3)
                                                         ->  Nested Loop  (cost=0.43..122792.99 rows=2776 width=24) (actual time=247.109..3206.635 rows=3890 loops=3)
                                                               ->  Parallel Seq Scan on userhistory uh  (cost=0.00..111331.24 rows=2776 width=14) (actual time=245.626..1943.063 rows=3890 loops=3)
                                                                     Filter: ((last_seen <= now()) AND (last_seen >= (now() - '30 days'::interval)))
                                                                     Rows Removed by Filter: 1996741
                                                               ->  Index Only Scan using title_pkey on title t2  (cost=0.43..4.13 rows=1 width=10) (actual time=0.322..0.322 rows=1 loops=11670)
                                                                     Index Cond: (id = (uh.title_id)::text)
                                                                     Heap Fetches: 0
                                                         ->  Index Scan using titleepisode_pkey on titleepisode te  (cost=0.43..0.48 rows=1 width=24) (actual time=0.463..0.463 rows=1 loops=11670)
                                                               Index Cond: ((title_id)::text = (t2.id)::text)
                                                               Filter: (season_number IS NOT NULL)
                                                               Rows Removed by Filter: 0
                                                   ->  Index Scan using title_pkey on title t  (cost=0.43..0.56 rows=1 width=30) (actual time=0.442..0.442 rows=1 loops=8375)
                                                         Index Cond: ((id)::text = (te.parent_title_id)::text)
                                                         Filter: ((title_type)::text = 'tvSeries'::text)
                                                         Rows Removed by Filter: 0
                                       ->  GroupAggregate  (cost=0.71..965773.62 rows=4424367 width=42) (actual time=1.363..13331.991 rows=9374750 loops=3)
                                             Group Key: tg.title_id
                                             ->  Nested Loop  (cost=0.71..834474.73 rows=15198860 width=17) (actual time=1.324..7110.095 rows=15193346 loops=3)
                                                   ->  Index Only Scan using titlegenre_pkey on titlegenre tg  (cost=0.56..462079.46 rows=15198860 width=14) (actual time=1.217..2349.651 rows=15193346 loops=3)
                                                         Heap Fetches: 0
                                                   ->  Memoize  (cost=0.15..0.17 rows=1 width=11) (actual time=0.000..0.000 rows=1 loops=45580039)
                                                         Cache Key: tg.genre_id
                                                         Cache Mode: logical
                                                         Hits: 15184479  Misses: 28  Evictions: 0  Overflows: 0  Memory Usage: 4kB
                                                         Worker 0:  Hits: 15197699  Misses: 28  Evictions: 0  Overflows: 0  Memory Usage: 4kB
                                                         Worker 1:  Hits: 15197777  Misses: 28  Evictions: 0  Overflows: 0  Memory Usage: 4kB
                                                         ->  Index Scan using genre_pkey on genre g  (cost=0.14..0.16 rows=1 width=11) (actual time=0.004..0.004 rows=1 loops=84)
                                                               Index Cond: (id = tg.genre_id)
                     ->  Memoize  (cost=0.30..1.64 rows=1 width=4) (actual time=0.016..0.016 rows=1 loops=7750)
                           Cache Key: uh.user_id
                           Cache Mode: logical
                           Hits: 276  Misses: 7474  Evictions: 0  Overflows: 0  Memory Usage: 757kB
                           ->  Index Scan using users_pkey on users u  (cost=0.29..1.63 rows=1 width=4) (actual time=0.016..0.016 rows=1 loops=7474)
                                 Index Cond: (id = uh.user_id)
                                 Filter: ((country_code)::text <> ALL ('{US,GB}'::text[]))
                                 Rows Removed by Filter: 0
 Planning Time: 18.388 ms
 JIT:
   Functions: 129
   Options: Inlining true, Optimization true, Expressions true, Deforming true
   Timing: Generation 7.415 ms, Inlining 277.767 ms, Optimization 575.414 ms, Emission 431.315 ms, Total 1291.911 ms
 Execution Time: 22131.970 ms
(67 rows)

