explain analyze SELECT n.id,
    n.primary_name,
    date_part('year', NOW())::int - n.birth_year AS age,
    count(*) AS roles
FROM name n
JOIN titlePrincipals tp ON tp.name_id = n.id
JOIN titlePrincipalsCharacters tpc ON tpc.title_id = tp.title_id
    AND tpc.name_id = tp.name_id
JOIN category c ON c.id = tp.category_id
JOIN title t ON t.id = tp.title_id
WHERE t.start_year >= date_part('year', NOW())::int - 10
    AND c.name = 'actress'
    AND n.death_year IS NULL
    AND t.title_type IN (
        'movie', 'tvSeries', 'tvMiniSeries', 'tvMovie'
    )
GROUP BY n.id
ORDER BY roles DESC
LIMIT 100;
                                                                                                        QUERY PLAN                                                                                                         
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1280626.34..1280626.38 rows=14 width=36) (actual time=32591.463..32673.609 rows=100 loops=1)
   ->  Sort  (cost=1280626.34..1280626.38 rows=14 width=36) (actual time=32104.465..32186.595 rows=100 loops=1)
         Sort Key: (count(*)) DESC
         Sort Method: top-N heapsort  Memory: 38kB
         ->  Finalize GroupAggregate  (cost=1280624.24..1280626.07 rows=14 width=36) (actual time=31827.183..32142.653 rows=183837 loops=1)
               Group Key: n.id
               ->  Gather Merge  (cost=1280624.24..1280625.73 rows=12 width=36) (actual time=31827.140..32044.560 rows=250590 loops=1)
                     Workers Planned: 2
                     Workers Launched: 2
                     ->  Partial GroupAggregate  (cost=1279624.22..1279624.33 rows=6 width=36) (actual time=31803.402..31876.400 rows=83530 loops=3)
                           Group Key: n.id
                           ->  Sort  (cost=1279624.22..1279624.24 rows=6 width=28) (actual time=31803.353..31836.772 rows=132116 loops=3)
                                 Sort Key: n.id
                                 Sort Method: external merge  Disk: 4736kB
                                 Worker 0:  Sort Method: external merge  Disk: 4888kB
                                 Worker 1:  Sort Method: external merge  Disk: 4688kB
                                 ->  Nested Loop  (cost=234363.96..1279624.14 rows=6 width=28) (actual time=10257.210..31594.434 rows=132116 loops=3)
                                       ->  Nested Loop  (cost=234363.40..1279599.32 rows=6 width=20) (actual time=10255.420..21025.881 rows=132656 loops=3)
                                             ->  Parallel Hash Join  (cost=234362.84..1044884.26 rows=88118 width=30) (actual time=10254.252..10892.654 rows=149480 loops=3)
                                                   Hash Cond: ((tp.title_id)::text = (t.id)::text)
                                                   ->  Hash Join  (cost=1.16..781764.71 rows=1941667 width=20) (actual time=0.645..6764.019 rows=3185892 loops=3)
                                                         Hash Cond: (tp.category_id = c.id)
                                                         ->  Parallel Seq Scan on titleprincipals tp  (cost=0.00..699000.00 rows=23300000 width=24) (actual time=0.514..4732.712 rows=18639969 loops=3)
                                                         ->  Hash  (cost=1.15..1.15 rows=1 width=4) (actual time=0.066..0.067 rows=1 loops=3)
                                                               Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                               ->  Seq Scan on category c  (cost=0.00..1.15 rows=1 width=4) (actual time=0.055..0.056 rows=1 loops=3)
                                                                     Filter: ((name)::text = 'actress'::text)
                                                                     Rows Removed by Filter: 11
                                                   ->  Parallel Hash  (cost=231133.11..231133.11 rows=185725 width=10) (actual time=2616.216..2616.217 rows=117416 loops=3)
                                                         Buckets: 131072  Batches: 8  Memory Usage: 3136kB
                                                         ->  Parallel Seq Scan on title t  (cost=0.00..231133.11 rows=185725 width=10) (actual time=246.531..2574.699 rows=117416 loops=3)
                                                               Filter: (((title_type)::text = ANY ('{movie,tvSeries,tvMiniSeries,tvMovie}'::text[])) AND (start_year >= ((date_part('year'::text, now()))::integer - 10)))
                                                               Rows Removed by Filter: 3156125
                                             ->  Index Only Scan using titleprincipalscharacters_pkey on titleprincipalscharacters tpc  (cost=0.56..2.65 rows=1 width=20) (actual time=0.067..0.067 rows=1 loops=448441)
                                                   Index Cond: ((title_id = (tp.title_id)::text) AND (name_id = (tp.name_id)::text))
                                                   Heap Fetches: 0
                                       ->  Index Scan using name_pkey on name n  (cost=0.56..4.14 rows=1 width=28) (actual time=0.079..0.079 rows=1 loops=397968)
                                             Index Cond: ((id)::text = (tp.name_id)::text)
                                             Filter: (death_year IS NULL)
                                             Rows Removed by Filter: 0
 Planning Time: 18.380 ms
 JIT:
   Functions: 115
   Options: Inlining true, Optimization true, Expressions true, Deforming true
   Timing: Generation 6.843 ms, Inlining 267.701 ms, Optimization 539.994 ms, Emission 405.809 ms, Total 1220.346 ms
 Execution Time: 33010.709 ms
(46 rows)

