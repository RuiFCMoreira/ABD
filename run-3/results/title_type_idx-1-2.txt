explain analyze SELECT *
FROM (
    SELECT t.id,
        left(t.primary_title, 30),
        ((start_year / 10) * 10)::int AS decade,
        avg(uh.rating) AS rating,
        rank() over (
            PARTITION by ((start_year / 10) * 10) :: int
            ORDER BY avg(uh.rating) DESC, t.id
        ) AS rank
    FROM title t
    JOIN userHistory uh ON uh.title_id = t.id
    WHERE t.title_type = 'movie'
        AND ((start_year / 10) * 10)::int >= 1980
        AND t.id IN (
            SELECT title_id
            FROM titleGenre tg
            JOIN genre g ON g.id = tg.genre_id
            WHERE g.name IN (
                'Drama'
            )
        )
        AND t.id IN (
            SELECT title_id
            FROM titleAkas
            WHERE region IN (
                'US', 'GB', 'ES', 'DE', 'FR', 'PT'
            )
        )
    GROUP BY t.id
    HAVING count(uh.rating) >= 3
    ORDER BY decade, rating DESC
) t_
WHERE rank <= 10;
                                                                                                QUERY PLAN                                                                                                 
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Subquery Scan on t_  (cost=408187.59..408203.53 rows=125 width=86) (actual time=30904.737..30957.368 rows=50 loops=1)
   Filter: (t_.rank <= 10)
   Rows Removed by Filter: 1953
   ->  WindowAgg  (cost=408187.59..408198.84 rows=375 width=86) (actual time=30904.732..30957.251 rows=2003 loops=1)
         ->  Sort  (cost=408187.59..408188.53 rows=375 width=66) (actual time=30904.680..30955.562 rows=2003 loops=1)
               Sort Key: (((t.start_year / 10) * 10)), (avg(uh.rating)) DESC, t.id
               Sort Method: quicksort  Memory: 228kB
               ->  Finalize GroupAggregate  (cost=408028.40..408171.56 rows=375 width=66) (actual time=30844.401..30951.592 rows=2003 loops=1)
                     Group Key: t.id
                     Filter: (count(uh.rating) >= 3)
                     Rows Removed by Filter: 40986
                     ->  Gather Merge  (cost=408028.40..408145.80 rows=936 width=74) (actual time=30844.360..30920.752 rows=45049 loops=1)
                           Workers Planned: 2
                           Workers Launched: 2
                           ->  Partial GroupAggregate  (cost=407028.38..407037.74 rows=468 width=74) (actual time=30824.200..30837.446 rows=15016 loops=3)
                                 Group Key: t.id
                                 ->  Sort  (cost=407028.38..407029.55 rows=468 width=38) (actual time=30824.139..30827.319 rows=20226 loops=3)
                                       Sort Key: t.id
                                       Sort Method: quicksort  Memory: 2433kB
                                       Worker 0:  Sort Method: quicksort  Memory: 2388kB
                                       Worker 1:  Sort Method: quicksort  Memory: 2410kB
                                       ->  Nested Loop Semi Join  (cost=188239.77..407007.62 rows=468 width=38) (actual time=11811.559..30780.090 rows=20226 loops=3)
                                             ->  Nested Loop Semi Join  (cost=188239.20..401789.79 rows=3015 width=58) (actual time=11806.917..18570.738 rows=33464 loops=3)
                                                   ->  Parallel Hash Join  (cost=188238.50..299996.94 rows=54575 width=48) (actual time=11805.487..12532.540 rows=96250 loops=3)
                                                         Hash Cond: ((uh.title_id)::text = (t.id)::text)
                                                         ->  Parallel Seq Scan on userhistory uh  (cost=0.00..80070.66 rows=2500866 width=14) (actual time=0.441..1484.377 rows=2000631 loops=3)
                                                         ->  Parallel Hash  (cost=186422.60..186422.60 rows=89352 width=34) (actual time=9851.513..9851.516 rows=129726 loops=3)
                                                               Buckets: 65536  Batches: 8  Memory Usage: 3840kB
                                                               ->  Parallel Bitmap Heap Scan on title t  (cost=7087.04..186422.60 rows=89352 width=34) (actual time=116.149..9770.519 rows=129726 loops=3)
                                                                     Recheck Cond: ((title_type)::text = 'movie'::text)
                                                                     Rows Removed by Index Recheck: 830781
                                                                     Filter: (((start_year / 10) * 10) >= 1980)
                                                                     Rows Removed by Filter: 84905
                                                                     Heap Blocks: exact=20843 lossy=10919
                                                                     ->  Bitmap Index Scan on title_type_idx  (cost=0.00..7033.43 rows=643332 width=0) (actual time=50.614..50.615 rows=643892 loops=1)
                                                                           Index Cond: ((title_type)::text = 'movie'::text)
                                                   ->  Nested Loop  (cost=0.70..1.86 rows=1 width=10) (actual time=0.062..0.062 rows=0 loops=288751)
                                                         ->  Index Only Scan using titlegenre_pkey on titlegenre tg  (cost=0.56..1.36 rows=3 width=14) (actual time=0.059..0.059 rows=1 loops=288751)
                                                               Index Cond: (title_id = (uh.title_id)::text)
                                                               Heap Fetches: 0
                                                         ->  Index Scan using genre_pkey on genre g  (cost=0.14..0.16 rows=1 width=4) (actual time=0.001..0.001 rows=0 loops=366136)
                                                               Index Cond: (id = tg.genre_id)
                                                               Filter: ((name)::text = 'Drama'::text)
                                                               Rows Removed by Filter: 1
                                             ->  Index Scan using titleakas_pkey on titleakas  (cost=0.56..34.98 rows=34 width=10) (actual time=0.364..0.364 rows=1 loops=100393)
                                                   Index Cond: ((title_id)::text = (uh.title_id)::text)
                                                   Filter: ((region)::text = ANY ('{US,GB,ES,DE,FR,PT}'::text[]))
                                                   Rows Removed by Filter: 2
 Planning Time: 16.081 ms
 JIT:
   Functions: 111
   Options: Inlining false, Optimization false, Expressions true, Deforming true
   Timing: Generation 7.139 ms, Inlining 0.000 ms, Optimization 12.801 ms, Emission 184.923 ms, Total 204.862 ms
 Execution Time: 31319.555 ms
(54 rows)

