explain analyze SELECT t.id, t.primary_title, tg.genres, te.season_number, count(*) AS views
FROM title t
JOIN titleEpisode te ON te.parent_title_id = t.id
JOIN title t2 ON t2.id = te.title_id
JOIN userHistory uh ON uh.title_id = t2.id
JOIN users u ON u.id = uh.user_id
JOIN (
    SELECT tg.title_id, array_agg(g.name) AS genres
    FROM titleGenre tg
    JOIN genre g ON g.id = tg.genre_id
    GROUP BY tg.title_id
) tg ON tg.title_id = t.id
WHERE t.title_type = 'tvSeries'
    AND uh.last_seen BETWEEN NOW() - INTERVAL '30 days' AND NOW()
    AND te.season_number IS NOT NULL
    AND u.country_code NOT IN ('US', 'GB')
GROUP BY t.id, t.primary_title, tg.genres, te.season_number
ORDER BY count(*) DESC, t.id
LIMIT 100;
                                                                                                   QUERY PLAN                                                                                                    
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1140403.21..1140403.46 rows=100 width=74) (actual time=21519.870..21520.020 rows=100 loops=1)
   ->  Sort  (cost=1140403.21..1140420.41 rows=6880 width=74) (actual time=20990.558..20990.701 rows=100 loops=1)
         Sort Key: (count(*)) DESC, t.id
         Sort Method: top-N heapsort  Memory: 41kB
         ->  GroupAggregate  (cost=118807.28..1140140.26 rows=6880 width=74) (actual time=6377.190..20988.008 rows=6235 loops=1)
               Group Key: t.id, (array_agg(g.name)), te.season_number
               ->  Nested Loop  (cost=118807.28..1140002.66 rows=6880 width=66) (actual time=6376.706..20982.885 rows=7754 loops=1)
                     ->  Gather Merge  (cost=118806.98..1131458.02 rows=6880 width=70) (actual time=6375.986..20850.182 rows=7824 loops=1)
                           Workers Planned: 2
                           Workers Launched: 2
                           ->  Incremental Sort  (cost=117806.96..1129663.87 rows=2867 width=70) (actual time=6354.132..20401.211 rows=2608 loops=3)
                                 Sort Key: t.id, (array_agg(g.name)), te.season_number
                                 Presorted Key: t.id
                                 Full-sort Groups: 83  Sort Method: quicksort  Average Memory: 29kB  Peak Memory: 29kB
                                 Worker 0:  Full-sort Groups: 80  Sort Method: quicksort  Average Memory: 30kB  Peak Memory: 30kB
                                 Worker 1:  Full-sort Groups: 81  Sort Method: quicksort  Average Memory: 29kB  Peak Memory: 29kB
                                 ->  Merge Join  (cost=117453.93..1129534.86 rows=2867 width=70) (actual time=6331.763..20397.451 rows=2608 loops=3)
                                       Merge Cond: ((te.parent_title_id)::text = (tg.title_id)::text)
                                       ->  Sort  (cost=117453.23..117453.28 rows=20 width=48) (actual time=6264.441..6266.121 rows=2701 loops=3)
                                             Sort Key: t.id
                                             Sort Method: quicksort  Memory: 377kB
                                             Worker 0:  Sort Method: quicksort  Memory: 363kB
                                             Worker 1:  Sort Method: quicksort  Memory: 367kB
                                             ->  Nested Loop  (cost=1.30..117452.80 rows=20 width=48) (actual time=245.879..6257.743 rows=2701 loops=3)
                                                   ->  Nested Loop  (cost=0.87..117050.44 rows=717 width=18) (actual time=244.832..5014.869 rows=2819 loops=3)
                                                         ->  Nested Loop  (cost=0.43..116473.17 rows=1194 width=24) (actual time=243.661..3194.095 rows=3926 loops=3)
                                                               ->  Parallel Seq Scan on userhistory uh  (cost=0.00..111330.25 rows=1194 width=14) (actual time=242.610..1939.965 rows=3926 loops=3)
                                                                     Filter: ((last_seen <= now()) AND (last_seen >= (now() - '30 days'::interval)))
                                                                     Rows Removed by Filter: 1996705
                                                               ->  Index Only Scan using title_pkey on title t2  (cost=0.43..4.31 rows=1 width=10) (actual time=0.317..0.317 rows=1 loops=11777)
                                                                     Index Cond: (id = (uh.title_id)::text)
                                                                     Heap Fetches: 0
                                                         ->  Index Scan using titleepisode_pkey on titleepisode te  (cost=0.43..0.48 rows=1 width=24) (actual time=0.461..0.461 rows=1 loops=11777)
                                                               Index Cond: ((title_id)::text = (t2.id)::text)
                                                               Filter: (season_number IS NOT NULL)
                                                               Rows Removed by Filter: 0
                                                   ->  Index Scan using title_pkey on title t  (cost=0.43..0.56 rows=1 width=30) (actual time=0.438..0.438 rows=1 loops=8456)
                                                         Index Cond: ((id)::text = (te.parent_title_id)::text)
                                                         Filter: ((title_type)::text = 'tvSeries'::text)
                                                         Rows Removed by Filter: 0
                                       ->  GroupAggregate  (cost=0.71..961260.64 rows=4063329 width=42) (actual time=0.897..13098.656 rows=9377470 loops=3)
                                             Group Key: tg.title_id
                                             ->  Nested Loop  (cost=0.71..834474.73 rows=15198860 width=17) (actual time=0.870..6884.011 rows=15197632 loops=3)
                                                   ->  Index Only Scan using titlegenre_pkey on titlegenre tg  (cost=0.56..462079.46 rows=15198860 width=14) (actual time=0.808..2122.930 rows=15197632 loops=3)
                                                         Heap Fetches: 0
                                                   ->  Memoize  (cost=0.15..0.17 rows=1 width=11) (actual time=0.000..0.000 rows=1 loops=45592895)
                                                         Cache Key: tg.genre_id
                                                         Cache Mode: logical
                                                         Hits: 15197777  Misses: 28  Evictions: 0  Overflows: 0  Memory Usage: 4kB
                                                         Worker 0:  Hits: 15197335  Misses: 28  Evictions: 0  Overflows: 0  Memory Usage: 4kB
                                                         Worker 1:  Hits: 15197699  Misses: 28  Evictions: 0  Overflows: 0  Memory Usage: 4kB
                                                         ->  Index Scan using genre_pkey on genre g  (cost=0.14..0.16 rows=1 width=11) (actual time=0.003..0.003 rows=1 loops=84)
                                                               Index Cond: (id = tg.genre_id)
                     ->  Memoize  (cost=0.30..3.00 rows=1 width=4) (actual time=0.017..0.017 rows=1 loops=7824)
                           Cache Key: uh.user_id
                           Cache Mode: logical
                           Hits: 277  Misses: 7547  Evictions: 0  Overflows: 0  Memory Usage: 765kB
                           ->  Index Scan using users_pkey on users u  (cost=0.29..2.99 rows=1 width=4) (actual time=0.016..0.016 rows=1 loops=7547)
                                 Index Cond: (id = uh.user_id)
                                 Filter: ((country_code)::text <> ALL ('{US,GB}'::text[]))
                                 Rows Removed by Filter: 0
 Planning Time: 14.816 ms
 JIT:
   Functions: 129
   Options: Inlining true, Optimization true, Expressions true, Deforming true
   Timing: Generation 7.229 ms, Inlining 274.793 ms, Optimization 564.250 ms, Emission 417.140 ms, Total 1263.411 ms
 Execution Time: 21871.510 ms
(67 rows)

