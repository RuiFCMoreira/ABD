explain analyze SELECT t.id, t.primary_title, tg.genres, te.season_number, count(*) AS views
FROM title t
JOIN titleEpisode te ON te.parent_title_id = t.id
JOIN userHistory uh ON uh.title_id = te.title_id
JOIN users u ON u.id = uh.user_id
JOIN (
    SELECT tg.title_id, array_agg(g.name) AS genres
    FROM titleGenre tg
    JOIN genre g ON g.id = tg.genre_id
    GROUP BY tg.title_id
) tg ON tg.title_id = t.id
WHERE t.title_type = 'tvSeries'
    AND uh.last_seen BETWEEN NOW() - INTERVAL '30 days' AND NOW()
    AND te.season_number IS NOT NULL
    AND u.country_code NOT IN ('US', 'GB')
GROUP BY t.id, t.primary_title, tg.genres, te.season_number
ORDER BY count(*) DESC, t.id
LIMIT 100;
                                                                                                   QUERY PLAN                                                                                                    
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1126627.73..1126627.98 rows=100 width=74) (actual time=20461.565..20461.716 rows=100 loops=1)
   ->  Sort  (cost=1126627.73..1126639.38 rows=4659 width=74) (actual time=19919.858..19920.001 rows=100 loops=1)
         Sort Key: (count(*)) DESC, t.id
         Sort Method: top-N heapsort  Memory: 41kB
         ->  Finalize GroupAggregate  (cost=119481.57..1126449.67 rows=4659 width=74) (actual time=5073.344..19917.786 rows=6102 loops=1)
               Group Key: t.id, (array_agg(g.name)), te.season_number
               ->  Gather Merge  (cost=119481.57..1126364.26 rows=3882 width=74) (actual time=5073.327..19914.253 rows=6809 loops=1)
                     Workers Planned: 2
                     Workers Launched: 2
                     ->  Partial GroupAggregate  (cost=118481.55..1124916.16 rows=1941 width=74) (actual time=5051.312..19310.632 rows=2270 loops=3)
                           Group Key: t.id, (array_agg(g.name)), te.season_number
                           ->  Incremental Sort  (cost=118481.55..1124877.34 rows=1941 width=66) (actual time=5051.276..19308.983 rows=2523 loops=3)
                                 Sort Key: t.id, (array_agg(g.name)), te.season_number
                                 Presorted Key: t.id
                                 Full-sort Groups: 82  Sort Method: quicksort  Average Memory: 29kB  Peak Memory: 29kB
                                 Worker 0:  Full-sort Groups: 78  Sort Method: quicksort  Average Memory: 29kB  Peak Memory: 29kB
                                 Worker 1:  Full-sort Groups: 76  Sort Method: quicksort  Average Memory: 29kB  Peak Memory: 29kB
                                 ->  Merge Join  (cost=117962.82..1124789.99 rows=1941 width=66) (actual time=5029.982..19305.165 rows=2523 loops=3)
                                       Merge Cond: ((te.parent_title_id)::text = (tg.title_id)::text)
                                       ->  Sort  (cost=117962.12..117962.15 rows=14 width=44) (actual time=4961.975..4963.662 rows=2612 loops=3)
                                             Sort Key: t.id
                                             Sort Method: quicksort  Memory: 343kB
                                             Worker 0:  Sort Method: quicksort  Memory: 332kB
                                             Worker 1:  Sort Method: quicksort  Memory: 326kB
                                             ->  Nested Loop  (cost=1.16..117961.85 rows=14 width=44) (actual time=276.299..4956.504 rows=2612 loops=3)
                                                   ->  Nested Loop  (cost=0.87..117910.88 rows=14 width=48) (actual time=276.260..4928.470 rows=2637 loops=3)
                                                         ->  Nested Loop  (cost=0.43..117576.30 rows=596 width=18) (actual time=275.240..3605.973 rows=2752 loops=3)
                                                               ->  Parallel Seq Scan on userhistory uh  (cost=0.00..111329.72 rows=756 width=14) (actual time=274.037..1857.581 rows=3835 loops=3)
                                                                     Filter: ((last_seen <= now()) AND (last_seen >= (now() - '30 days'::interval)))
                                                                     Rows Removed by Filter: 1996796
                                                               ->  Index Scan using titleepisode_pkey on titleepisode te  (cost=0.43..8.26 rows=1 width=24) (actual time=0.454..0.454 rows=1 loops=11504)
                                                                     Index Cond: ((title_id)::text = (uh.title_id)::text)
                                                                     Filter: (season_number IS NOT NULL)
                                                                     Rows Removed by Filter: 0
                                                         ->  Index Scan using title_pkey on title t  (cost=0.43..0.56 rows=1 width=30) (actual time=0.478..0.478 rows=1 loops=8256)
                                                               Index Cond: ((id)::text = (te.parent_title_id)::text)
                                                               Filter: ((title_type)::text = 'tvSeries'::text)
                                                               Rows Removed by Filter: 0
                                                   ->  Index Scan using users_pkey on users u  (cost=0.29..3.64 rows=1 width=4) (actual time=0.009..0.009 rows=1 loops=7911)
                                                         Index Cond: (id = uh.user_id)
                                                         Filter: ((country_code)::text <> ALL ('{US,GB}'::text[]))
                                                         Rows Removed by Filter: 0
                                       ->  GroupAggregate  (cost=0.71..958638.83 rows=3853584 width=42) (actual time=1.168..13409.041 rows=9377195 loops=3)
                                             Group Key: tg.title_id
                                             ->  Nested Loop  (cost=0.71..834474.73 rows=15198860 width=17) (actual time=1.136..7199.619 rows=15197233 loops=3)
                                                   ->  Index Only Scan using titlegenre_pkey on titlegenre tg  (cost=0.56..462079.46 rows=15198860 width=14) (actual time=1.051..2497.237 rows=15197233 loops=3)
                                                         Heap Fetches: 0
                                                   ->  Memoize  (cost=0.15..0.17 rows=1 width=11) (actual time=0.000..0.000 rows=1 loops=45591700)
                                                         Cache Key: tg.genre_id
                                                         Cache Mode: logical
                                                         Hits: 15197777  Misses: 28  Evictions: 0  Overflows: 0  Memory Usage: 4kB
                                                         Worker 0:  Hits: 15197335  Misses: 28  Evictions: 0  Overflows: 0  Memory Usage: 4kB
                                                         Worker 1:  Hits: 15196504  Misses: 28  Evictions: 0  Overflows: 0  Memory Usage: 4kB
                                                         ->  Index Scan using genre_pkey on genre g  (cost=0.14..0.16 rows=1 width=11) (actual time=0.004..0.004 rows=1 loops=84)
                                                               Index Cond: (id = tg.genre_id)
 Planning Time: 13.734 ms
 JIT:
   Functions: 139
   Options: Inlining true, Optimization true, Expressions true, Deforming true
   Timing: Generation 7.850 ms, Inlining 272.169 ms, Optimization 619.965 ms, Emission 470.671 ms, Total 1370.654 ms
 Execution Time: 20810.774 ms
(61 rows)

