explain analyze SELECT n.id,
    n.primary_name,
    date_part('year', NOW())::int - n.birth_year AS age,
    count(*) AS roles
FROM name n
JOIN titlePrincipals tp ON tp.name_id = n.id
JOIN titlePrincipalsCharacters tpc ON tpc.title_id = tp.title_id
    AND tpc.name_id = tp.name_id
JOIN category c ON c.id = tp.category_id
JOIN title t ON t.id = tp.title_id
WHERE t.start_year >= date_part('year', NOW())::int - 10
    AND c.name = 'actress'
    AND n.death_year IS NULL
    AND t.title_type IN (
        'movie', 'tvSeries', 'tvMiniSeries', 'tvMovie'
    )
GROUP BY n.id
ORDER BY roles DESC
LIMIT 100;
                                                                                                           QUERY PLAN                                                                                                            
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1229852.01..1229852.03 rows=9 width=36) (actual time=25750.850..25772.112 rows=100 loops=1)
   ->  Sort  (cost=1229852.01..1229852.03 rows=9 width=36) (actual time=25287.473..25308.728 rows=100 loops=1)
         Sort Key: (count(*)) DESC
         Sort Method: top-N heapsort  Memory: 38kB
         ->  Finalize GroupAggregate  (cost=1229850.65..1229851.87 rows=9 width=36) (actual time=25020.420..25268.963 rows=183837 loops=1)
               Group Key: n.id
               ->  Gather Merge  (cost=1229850.65..1229851.65 rows=8 width=36) (actual time=25020.387..25171.333 rows=249837 loops=1)
                     Workers Planned: 2
                     Workers Launched: 2
                     ->  Partial GroupAggregate  (cost=1228850.63..1228850.70 rows=4 width=36) (actual time=24996.652..25064.916 rows=83279 loops=3)
                           Group Key: n.id
                           ->  Sort  (cost=1228850.63..1228850.64 rows=4 width=28) (actual time=24996.599..25020.474 rows=132116 loops=3)
                                 Sort Key: n.id
                                 Sort Method: quicksort  Memory: 13232kB
                                 Worker 0:  Sort Method: quicksort  Memory: 15131kB
                                 Worker 1:  Sort Method: quicksort  Memory: 15102kB
                                 ->  Nested Loop  (cost=233357.03..1228850.59 rows=4 width=28) (actual time=2787.269..24771.011 rows=132116 loops=3)
                                       ->  Nested Loop  (cost=233356.47..1228834.04 rows=4 width=20) (actual time=2763.063..14344.913 rows=132656 loops=3)
                                             ->  Hash Join  (cost=233355.91..997224.79 rows=86952 width=30) (actual time=2762.009..10287.556 rows=149480 loops=3)
                                                   Hash Cond: (tp.category_id = c.id)
                                                   ->  Parallel Hash Join  (cost=233354.74..993517.26 rows=1043432 width=34) (actual time=2509.674..9963.641 rows=766313 loops=3)
                                                         Hash Cond: ((tp.title_id)::text = (t.id)::text)
                                                         ->  Parallel Seq Scan on titleprincipals tp  (cost=0.00..699000.00 rows=23300000 width=24) (actual time=0.606..4636.393 rows=18639969 loops=3)
                                                         ->  Parallel Hash  (cost=231065.26..231065.26 rows=183159 width=10) (actual time=2430.765..2430.767 rows=117416 loops=3)
                                                               Buckets: 524288  Batches: 1  Memory Usage: 20672kB
                                                               ->  Parallel Seq Scan on title t  (cost=0.00..231065.26 rows=183159 width=10) (actual time=10.440..2371.116 rows=117416 loops=3)
                                                                     Filter: (((title_type)::text = ANY ('{movie,tvSeries,tvMiniSeries,tvMovie}'::text[])) AND (start_year >= ((date_part('year'::text, now()))::integer - 10)))
                                                                     Rows Removed by Filter: 3156125
                                                   ->  Hash  (cost=1.15..1.15 rows=1 width=4) (actual time=223.561..223.562 rows=1 loops=3)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Seq Scan on category c  (cost=0.00..1.15 rows=1 width=4) (actual time=223.543..223.545 rows=1 loops=3)
                                                               Filter: ((name)::text = 'actress'::text)
                                                               Rows Removed by Filter: 11
                                             ->  Index Only Scan using titleprincipalscharacters_pkey on titleprincipalscharacters tpc  (cost=0.56..2.65 rows=1 width=20) (actual time=0.026..0.026 rows=1 loops=448441)
                                                   Index Cond: ((title_id = (tp.title_id)::text) AND (name_id = (tp.name_id)::text))
                                                   Heap Fetches: 0
                                       ->  Index Scan using name_pkey on name n  (cost=0.56..4.14 rows=1 width=28) (actual time=0.078..0.078 rows=1 loops=397968)
                                             Index Cond: ((id)::text = (tp.name_id)::text)
                                             Filter: (death_year IS NULL)
                                             Rows Removed by Filter: 0
 Planning Time: 19.097 ms
 JIT:
   Functions: 115
   Options: Inlining true, Optimization true, Expressions true, Deforming true
   Timing: Generation 6.474 ms, Inlining 266.409 ms, Optimization 492.423 ms, Emission 375.700 ms, Total 1141.005 ms
 Execution Time: 26132.303 ms
(46 rows)

