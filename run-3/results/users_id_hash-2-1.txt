explain analyze SELECT t.id, t.primary_title, tg.genres, te.season_number, count(*) AS views
FROM title t
JOIN titleEpisode te ON te.parent_title_id = t.id
JOIN title t2 ON t2.id = te.title_id
JOIN userHistory uh ON uh.title_id = t2.id
JOIN users u ON u.id = uh.user_id
JOIN (
    SELECT tg.title_id, array_agg(g.name) AS genres
    FROM titleGenre tg
    JOIN genre g ON g.id = tg.genre_id
    GROUP BY tg.title_id
) tg ON tg.title_id = t.id
WHERE t.title_type = 'tvSeries'
    AND uh.last_seen BETWEEN NOW() - INTERVAL '30 days' AND NOW()
    AND te.season_number IS NOT NULL
    AND u.country_code NOT IN ('US', 'GB')
GROUP BY t.id, t.primary_title, tg.genres, te.season_number
ORDER BY count(*) DESC, t.id
LIMIT 100;
                                                                                                   QUERY PLAN                                                                                                    
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1137651.02..1137651.27 rows=100 width=74) (actual time=21477.342..21477.512 rows=100 loops=1)
   ->  Sort  (cost=1137651.02..1137685.72 rows=13882 width=74) (actual time=20928.484..20928.647 rows=100 loops=1)
         Sort Key: (count(*)) DESC, t.id
         Sort Method: top-N heapsort  Memory: 41kB
         ->  Finalize GroupAggregate  (cost=126776.63..1137120.46 rows=13882 width=74) (actual time=5974.583..20926.478 rows=6101 loops=1)
               Group Key: t.id, (array_agg(g.name)), te.season_number
               ->  Gather Merge  (cost=126776.63..1136865.96 rows=11568 width=74) (actual time=5974.562..20923.028 rows=6804 loops=1)
                     Workers Planned: 2
                     Workers Launched: 2
                     ->  Partial GroupAggregate  (cost=125776.60..1134530.70 rows=5784 width=74) (actual time=5952.729..20220.562 rows=2268 loops=3)
                           Group Key: t.id, (array_agg(g.name)), te.season_number
                           ->  Incremental Sort  (cost=125776.60..1134415.02 rows=5784 width=66) (actual time=5952.697..20218.922 rows=2522 loops=3)
                                 Sort Key: t.id, (array_agg(g.name)), te.season_number
                                 Presorted Key: t.id
                                 Full-sort Groups: 81  Sort Method: quicksort  Average Memory: 29kB  Peak Memory: 29kB
                                 Worker 0:  Full-sort Groups: 78  Sort Method: quicksort  Average Memory: 29kB  Peak Memory: 29kB
                                 Worker 1:  Full-sort Groups: 77  Sort Method: quicksort  Average Memory: 29kB  Peak Memory: 29kB
                                 ->  Merge Join  (cost=125602.22..1134154.74 rows=5784 width=66) (actual time=5930.799..20215.215 rows=2522 loops=3)
                                       Merge Cond: ((te.parent_title_id)::text = (tg.title_id)::text)
                                       ->  Sort  (cost=125601.52..125601.62 rows=41 width=44) (actual time=5864.611..5866.159 rows=2611 loops=3)
                                             Sort Key: t.id
                                             Sort Method: quicksort  Memory: 339kB
                                             Worker 0:  Sort Method: quicksort  Memory: 332kB
                                             Worker 1:  Sort Method: quicksort  Memory: 329kB
                                             ->  Nested Loop  (cost=1.30..125600.42 rows=41 width=44) (actual time=286.738..5859.637 rows=2611 loops=3)
                                                   ->  Nested Loop  (cost=1.30..125540.25 rows=42 width=48) (actual time=286.671..5834.883 rows=2636 loops=3)
                                                         ->  Nested Loop  (cost=0.87..124566.64 rows=1737 width=18) (actual time=285.846..4689.337 rows=2751 loops=3)
                                                               ->  Nested Loop  (cost=0.43..123175.72 rows=2877 width=24) (actual time=284.571..3014.483 rows=3833 loops=3)
                                                                     ->  Parallel Seq Scan on userhistory uh  (cost=0.00..111327.66 rows=2877 width=14) (actual time=283.790..1857.177 rows=3833 loops=3)
                                                                           Filter: ((last_seen <= now()) AND (last_seen >= (now() - '30 days'::interval)))
                                                                           Rows Removed by Filter: 1996797
                                                                     ->  Index Only Scan using title_pkey on title t2  (cost=0.43..4.12 rows=1 width=10) (actual time=0.300..0.300 rows=1 loops=11500)
                                                                           Index Cond: (id = (uh.title_id)::text)
                                                                           Heap Fetches: 0
                                                               ->  Index Scan using titleepisode_pkey on titleepisode te  (cost=0.43..0.48 rows=1 width=24) (actual time=0.435..0.435 rows=1 loops=11500)
                                                                     Index Cond: ((title_id)::text = (t2.id)::text)
                                                                     Filter: (season_number IS NOT NULL)
                                                                     Rows Removed by Filter: 0
                                                         ->  Index Scan using title_pkey on title t  (cost=0.43..0.56 rows=1 width=30) (actual time=0.414..0.414 rows=1 loops=8253)
                                                               Index Cond: ((id)::text = (te.parent_title_id)::text)
                                                               Filter: ((title_type)::text = 'tvSeries'::text)
                                                               Rows Removed by Filter: 0
                                                   ->  Index Scan using users_id_hash on users u  (cost=0.00..1.43 rows=1 width=4) (actual time=0.008..0.008 rows=1 loops=7908)
                                                         Index Cond: (id = uh.user_id)
                                                         Filter: ((country_code)::text <> ALL ('{US,GB}'::text[]))
                                                         Rows Removed by Filter: 0
                                       ->  GroupAggregate  (cost=0.71..959482.28 rows=3921060 width=42) (actual time=1.257..13413.381 rows=9377470 loops=3)
                                             Group Key: tg.title_id
                                             ->  Nested Loop  (cost=0.71..834474.73 rows=15198860 width=17) (actual time=1.229..7235.441 rows=15197632 loops=3)
                                                   ->  Index Only Scan using titlegenre_pkey on titlegenre tg  (cost=0.56..462079.46 rows=15198860 width=14) (actual time=1.166..2556.268 rows=15197632 loops=3)
                                                         Heap Fetches: 0
                                                   ->  Memoize  (cost=0.15..0.17 rows=1 width=11) (actual time=0.000..0.000 rows=1 loops=45592895)
                                                         Cache Key: tg.genre_id
                                                         Cache Mode: logical
                                                         Hits: 15197335  Misses: 28  Evictions: 0  Overflows: 0  Memory Usage: 4kB
                                                         Worker 0:  Hits: 15197699  Misses: 28  Evictions: 0  Overflows: 0  Memory Usage: 4kB
                                                         Worker 1:  Hits: 15197777  Misses: 28  Evictions: 0  Overflows: 0  Memory Usage: 4kB
                                                         ->  Index Scan using genre_pkey on genre g  (cost=0.14..0.16 rows=1 width=11) (actual time=0.003..0.003 rows=1 loops=84)
                                                               Index Cond: (id = tg.genre_id)
 Planning Time: 13.942 ms
 JIT:
   Functions: 148
   Options: Inlining true, Optimization true, Expressions true, Deforming true
   Timing: Generation 8.218 ms, Inlining 270.641 ms, Optimization 644.628 ms, Emission 484.796 ms, Total 1408.284 ms
 Execution Time: 21806.622 ms
(65 rows)

