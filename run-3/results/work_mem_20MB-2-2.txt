explain analyze SELECT t.id, t.primary_title, tg.genres, te.season_number, count(*) AS views
FROM title t
JOIN titleEpisode te ON te.parent_title_id = t.id
JOIN title t2 ON t2.id = te.title_id
JOIN userHistory uh ON uh.title_id = t2.id
JOIN users u ON u.id = uh.user_id
JOIN (
    SELECT tg.title_id, array_agg(g.name) AS genres
    FROM titleGenre tg
    JOIN genre g ON g.id = tg.genre_id
    GROUP BY tg.title_id
) tg ON tg.title_id = t.id
WHERE t.title_type = 'tvSeries'
    AND uh.last_seen BETWEEN NOW() - INTERVAL '30 days' AND NOW()
    AND te.season_number IS NOT NULL
    AND u.country_code NOT IN ('US', 'GB')
GROUP BY t.id, t.primary_title, tg.genres, te.season_number
ORDER BY count(*) DESC, t.id
LIMIT 100;
                                                                                                   QUERY PLAN                                                                                                    
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1136133.50..1136133.75 rows=100 width=74) (actual time=21401.550..21401.708 rows=100 loops=1)
   ->  Sort  (cost=1136133.50..1136140.20 rows=2683 width=74) (actual time=20886.423..20886.573 rows=100 loops=1)
         Sort Key: (count(*)) DESC, t.id
         Sort Method: top-N heapsort  Memory: 41kB
         ->  GroupAggregate  (cost=116107.60..1136030.95 rows=2683 width=74) (actual time=6190.870..20884.113 rows=6043 loops=1)
               Group Key: t.id, (array_agg(g.name)), te.season_number
               ->  Nested Loop  (cost=116107.60..1135977.29 rows=2683 width=66) (actual time=6190.309..20879.158 rows=7478 loops=1)
                     ->  Gather Merge  (cost=116107.31..1124917.13 rows=2683 width=70) (actual time=6189.598..20754.976 rows=7546 loops=1)
                           Workers Planned: 2
                           Workers Launched: 2
                           ->  Incremental Sort  (cost=115107.28..1123607.42 rows=1118 width=70) (actual time=6164.808..20235.978 rows=2515 loops=3)
                                 Sort Key: t.id, (array_agg(g.name)), te.season_number
                                 Presorted Key: t.id
                                 Full-sort Groups: 81  Sort Method: quicksort  Average Memory: 29kB  Peak Memory: 29kB
                                 Worker 0:  Full-sort Groups: 78  Sort Method: quicksort  Average Memory: 30kB  Peak Memory: 30kB
                                 Worker 1:  Full-sort Groups: 75  Sort Method: quicksort  Average Memory: 29kB  Peak Memory: 29kB
                                 ->  Merge Join  (cost=114204.45..1123557.11 rows=1118 width=70) (actual time=6141.108..20231.879 rows=2515 loops=3)
                                       Merge Cond: ((te.parent_title_id)::text = (tg.title_id)::text)
                                       ->  Sort  (cost=114203.75..114203.77 rows=8 width=48) (actual time=6076.363..6078.292 rows=2604 loops=3)
                                             Sort Key: t.id
                                             Sort Method: quicksort  Memory: 370kB
                                             Worker 0:  Sort Method: quicksort  Memory: 360kB
                                             Worker 1:  Sort Method: quicksort  Memory: 348kB
                                             ->  Nested Loop  (cost=1.30..114203.63 rows=8 width=48) (actual time=245.818..6069.839 rows=2604 loops=3)
                                                   ->  Nested Loop  (cost=0.87..114016.94 rows=333 width=18) (actual time=244.810..4870.180 rows=2717 loops=3)
                                                         ->  Nested Loop  (cost=0.43..113750.07 rows=552 width=24) (actual time=243.557..3134.127 rows=3787 loops=3)
                                                               ->  Parallel Seq Scan on userhistory uh  (cost=0.00..111328.95 rows=552 width=14) (actual time=242.591..1913.063 rows=3787 loops=3)
                                                                     Filter: ((last_seen <= now()) AND (last_seen >= (now() - '30 days'::interval)))
                                                                     Rows Removed by Filter: 1996843
                                                               ->  Index Only Scan using title_pkey on title t2  (cost=0.43..4.39 rows=1 width=10) (actual time=0.320..0.320 rows=1 loops=11362)
                                                                     Index Cond: (id = (uh.title_id)::text)
                                                                     Heap Fetches: 0
                                                         ->  Index Scan using titleepisode_pkey on titleepisode te  (cost=0.43..0.48 rows=1 width=24) (actual time=0.456..0.456 rows=1 loops=11362)
                                                               Index Cond: ((title_id)::text = (t2.id)::text)
                                                               Filter: (season_number IS NOT NULL)
                                                               Rows Removed by Filter: 0
                                                   ->  Index Scan using title_pkey on title t  (cost=0.43..0.56 rows=1 width=30) (actual time=0.439..0.439 rows=1 loops=8152)
                                                         Index Cond: ((id)::text = (te.parent_title_id)::text)
                                                         Filter: ((title_type)::text = 'tvSeries'::text)
                                                         Rows Removed by Filter: 0
                                       ->  GroupAggregate  (cost=0.71..959896.27 rows=3955661 width=42) (actual time=1.073..13214.936 rows=9374225 loops=3)
                                             Group Key: tg.title_id
                                             ->  Nested Loop  (cost=0.71..834458.28 rows=15198444 width=17) (actual time=1.042..7036.243 rows=15192486 loops=3)
                                                   ->  Index Only Scan using titlegenre_pkey on titlegenre tg  (cost=0.56..462073.22 rows=15198444 width=14) (actual time=0.991..2423.371 rows=15192486 loops=3)
                                                         Heap Fetches: 0
                                                   ->  Memoize  (cost=0.15..0.17 rows=1 width=11) (actual time=0.000..0.000 rows=1 loops=45577457)
                                                         Cache Key: tg.genre_id
                                                         Cache Mode: logical
                                                         Hits: 15197777  Misses: 28  Evictions: 0  Overflows: 0  Memory Usage: 4kB
                                                         Worker 0:  Hits: 15197335  Misses: 28  Evictions: 0  Overflows: 0  Memory Usage: 4kB
                                                         Worker 1:  Hits: 15182261  Misses: 28  Evictions: 0  Overflows: 0  Memory Usage: 4kB
                                                         ->  Index Scan using genre_pkey on genre g  (cost=0.14..0.16 rows=1 width=11) (actual time=0.003..0.003 rows=1 loops=84)
                                                               Index Cond: (id = tg.genre_id)
                     ->  Index Scan using users_pkey on users u  (cost=0.29..4.12 rows=1 width=4) (actual time=0.016..0.016 rows=1 loops=7546)
                           Index Cond: (id = uh.user_id)
                           Filter: ((country_code)::text <> ALL ('{US,GB}'::text[]))
                           Rows Removed by Filter: 0
 Planning Time: 15.313 ms
 JIT:
   Functions: 124
   Options: Inlining true, Optimization true, Expressions true, Deforming true
   Timing: Generation 7.362 ms, Inlining 277.315 ms, Optimization 555.442 ms, Emission 410.036 ms, Total 1250.154 ms
 Execution Time: 21748.542 ms
(63 rows)

