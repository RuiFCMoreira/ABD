explain analyze SELECT t.id, t.primary_title, tg.genres, te.season_number, count(*) AS views
FROM title t
JOIN titleEpisode te ON te.parent_title_id = t.id
JOIN title t2 ON t2.id = te.title_id
JOIN userHistory uh ON uh.title_id = t2.id
JOIN users u ON u.id = uh.user_id
JOIN (
    SELECT tg.title_id, array_agg(g.name) AS genres
    FROM titleGenre tg
    JOIN genre g ON g.id = tg.genre_id
    GROUP BY tg.title_id
) tg ON tg.title_id = t.id
WHERE t.title_type = 'tvSeries'
    AND uh.last_seen BETWEEN NOW() - INTERVAL '30 days' AND NOW()
    AND te.season_number IS NOT NULL
    AND u.country_code NOT IN ('US', 'GB')
GROUP BY t.id, t.primary_title, tg.genres, te.season_number
ORDER BY count(*) DESC, t.id
LIMIT 100;
                                                                                                   QUERY PLAN                                                                                                    
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1146419.70..1146419.95 rows=100 width=74) (actual time=21750.157..21750.315 rows=100 loops=1)
   ->  Sort  (cost=1146419.70..1146428.18 rows=3394 width=74) (actual time=21182.939..21183.089 rows=100 loops=1)
         Sort Key: (count(*)) DESC, t.id
         Sort Method: top-N heapsort  Memory: 41kB
         ->  Finalize GroupAggregate  (cost=115967.96..1146289.98 rows=3394 width=74) (actual time=6277.679..21180.920 rows=6105 loops=1)
               Group Key: t.id, (array_agg(g.name)), te.season_number
               ->  Gather Merge  (cost=115967.96..1146227.76 rows=2828 width=74) (actual time=6277.645..21177.402 rows=6846 loops=1)
                     Workers Planned: 2
                     Workers Launched: 2
                     ->  Partial GroupAggregate  (cost=114967.94..1144901.32 rows=1414 width=74) (actual time=6255.542..20585.856 rows=2282 loops=3)
                           Group Key: t.id, (array_agg(g.name)), te.season_number
                           ->  Incremental Sort  (cost=114967.94..1144873.04 rows=1414 width=66) (actual time=6255.505..20584.189 rows=2524 loops=3)
                                 Sort Key: t.id, (array_agg(g.name)), te.season_number
                                 Presorted Key: t.id
                                 Full-sort Groups: 82  Sort Method: quicksort  Average Memory: 29kB  Peak Memory: 29kB
                                 Worker 0:  Full-sort Groups: 79  Sort Method: quicksort  Average Memory: 29kB  Peak Memory: 29kB
                                 Worker 1:  Full-sort Groups: 76  Sort Method: quicksort  Average Memory: 29kB  Peak Memory: 29kB
                                 ->  Merge Join  (cost=114239.09..1144809.41 rows=1414 width=66) (actual time=6231.540..20580.286 rows=2524 loops=3)
                                       Merge Cond: ((te.parent_title_id)::text = (tg.title_id)::text)
                                       ->  Sort  (cost=114238.39..114238.41 rows=8 width=44) (actual time=6163.722..6165.467 rows=2613 loops=3)
                                             Sort Key: t.id
                                             Sort Method: quicksort  Memory: 342kB
                                             Worker 0:  Sort Method: quicksort  Memory: 334kB
                                             Worker 1:  Sort Method: quicksort  Memory: 325kB
                                             ->  Nested Loop  (cost=1.59..114238.27 rows=8 width=44) (actual time=299.241..6157.870 rows=2613 loops=3)
                                                   ->  Nested Loop  (cost=1.30..114205.29 rows=8 width=48) (actual time=299.204..6127.775 rows=2638 loops=3)
                                                         ->  Nested Loop  (cost=0.87..114018.13 rows=334 width=18) (actual time=298.368..4926.925 rows=2753 loops=3)
                                                               ->  Nested Loop  (cost=0.43..113751.26 rows=552 width=24) (actual time=297.011..3168.417 rows=3836 loops=3)
                                                                     ->  Parallel Seq Scan on userhistory uh  (cost=0.00..111330.11 rows=552 width=14) (actual time=296.143..1950.966 rows=3836 loops=3)
                                                                           Filter: ((last_seen <= now()) AND (last_seen >= (now() - '30 days'::interval)))
                                                                           Rows Removed by Filter: 1996794
                                                                     ->  Index Only Scan using title_pkey on title t2  (cost=0.43..4.39 rows=1 width=10) (actual time=0.315..0.315 rows=1 loops=11509)
                                                                           Index Cond: (id = (uh.title_id)::text)
                                                                           Heap Fetches: 0
                                                               ->  Index Scan using titleepisode_pkey on titleepisode te  (cost=0.43..0.48 rows=1 width=24) (actual time=0.456..0.456 rows=1 loops=11509)
                                                                     Index Cond: ((title_id)::text = (t2.id)::text)
                                                                     Filter: (season_number IS NOT NULL)
                                                                     Rows Removed by Filter: 0
                                                         ->  Index Scan using title_pkey on title t  (cost=0.43..0.56 rows=1 width=30) (actual time=0.434..0.434 rows=1 loops=8260)
                                                               Index Cond: ((id)::text = (te.parent_title_id)::text)
                                                               Filter: ((title_type)::text = 'tvSeries'::text)
                                                               Rows Removed by Filter: 0
                                                   ->  Index Scan using users_pkey on users u  (cost=0.29..4.12 rows=1 width=4) (actual time=0.009..0.009 rows=1 loops=7915)
                                                         Index Cond: (id = uh.user_id)
                                                         Filter: ((country_code)::text <> ALL ('{US,GB}'::text[]))
                                                         Rows Removed by Filter: 0
                                       ->  GroupAggregate  (cost=0.71..970513.22 rows=4803535 width=42) (actual time=1.207..13454.441 rows=9377274 loops=3)
                                             Group Key: tg.title_id
                                             ->  Nested Loop  (cost=0.71..834474.73 rows=15198860 width=17) (actual time=1.175..7189.210 rows=15197355 loops=3)
                                                   ->  Index Only Scan using titlegenre_pkey on titlegenre tg  (cost=0.56..462079.46 rows=15198860 width=14) (actual time=1.088..2511.496 rows=15197355 loops=3)
                                                         Heap Fetches: 0
                                                   ->  Memoize  (cost=0.15..0.17 rows=1 width=11) (actual time=0.000..0.000 rows=1 loops=45592064)
                                                         Cache Key: tg.genre_id
                                                         Cache Mode: logical
                                                         Hits: 15197777  Misses: 28  Evictions: 0  Overflows: 0  Memory Usage: 4kB
                                                         Worker 0:  Hits: 15196504  Misses: 28  Evictions: 0  Overflows: 0  Memory Usage: 4kB
                                                         Worker 1:  Hits: 15197699  Misses: 28  Evictions: 0  Overflows: 0  Memory Usage: 4kB
                                                         ->  Index Scan using genre_pkey on genre g  (cost=0.14..0.16 rows=1 width=11) (actual time=0.004..0.004 rows=1 loops=84)
                                                               Index Cond: (id = tg.genre_id)
 Planning Time: 14.932 ms
 JIT:
   Functions: 148
   Options: Inlining true, Optimization true, Expressions true, Deforming true
   Timing: Generation 8.347 ms, Inlining 276.362 ms, Optimization 668.160 ms, Emission 510.418 ms, Total 1463.287 ms
 Execution Time: 22114.496 ms
(65 rows)

