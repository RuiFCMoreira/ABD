explain analyze SELECT t.id, t.primary_title, tg.genres, te.season_number, count(*) AS views
FROM title t
JOIN titleEpisode te ON te.parent_title_id = t.id
JOIN userHistory uh ON uh.title_id = te.title_id
JOIN users u ON u.id = uh.user_id
JOIN (
    SELECT tg.title_id, array_agg(g.name) AS genres
    FROM titleGenre tg
    JOIN genre g ON g.id = tg.genre_id
    GROUP BY tg.title_id
) tg ON tg.title_id = t.id
WHERE t.title_type = 'tvSeries'
    AND uh.last_seen BETWEEN NOW() - INTERVAL '30 days' AND NOW()
    AND te.season_number IS NOT NULL
    AND u.country_code NOT IN ('US', 'GB')
GROUP BY t.id, t.primary_title, tg.genres, te.season_number
ORDER BY count(*) DESC, t.id
LIMIT 100;
                                                                                                   QUERY PLAN                                                                                                    
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1015569.31..1015569.56 rows=100 width=74) (actual time=39264.681..39264.847 rows=100 loops=1)
   ->  Sort  (cost=1015569.31..1015578.84 rows=3810 width=74) (actual time=38733.588..38733.747 rows=100 loops=1)
         Sort Key: (count(*)) DESC, t.id
         Sort Method: top-N heapsort  Memory: 41kB
         ->  Finalize GroupAggregate  (cost=117786.08..1015423.70 rows=3810 width=74) (actual time=5268.391..38731.686 rows=5759 loops=1)
               Group Key: t.id, (array_agg(g.name)), te.season_number
               ->  Gather Merge  (cost=117786.08..1015353.84 rows=3176 width=74) (actual time=5268.358..38728.484 rows=6421 loops=1)
                     Workers Planned: 2
                     Workers Launched: 2
                     ->  Partial GroupAggregate  (cost=116786.06..1013987.22 rows=1588 width=74) (actual time=5241.801..38010.304 rows=2140 loops=3)
                           Group Key: t.id, (array_agg(g.name)), te.season_number
                           ->  Incremental Sort  (cost=116786.06..1013955.46 rows=1588 width=66) (actual time=5241.755..38008.725 rows=2353 loops=3)
                                 Sort Key: t.id, (array_agg(g.name)), te.season_number
                                 Presorted Key: t.id
                                 Full-sort Groups: 77  Sort Method: quicksort  Average Memory: 29kB  Peak Memory: 29kB
                                 Worker 0:  Full-sort Groups: 72  Sort Method: quicksort  Average Memory: 29kB  Peak Memory: 29kB
                                 Worker 1:  Full-sort Groups: 71  Sort Method: quicksort  Average Memory: 29kB  Peak Memory: 29kB
                                 ->  Merge Join  (cost=116220.77..1013884.00 rows=1588 width=66) (actual time=5180.749..38004.166 rows=2353 loops=3)
                                       Merge Cond: ((te.parent_title_id)::text = (tg.title_id)::text)
                                       ->  Sort  (cost=116220.21..116220.24 rows=11 width=44) (actual time=5028.216..5030.474 rows=2437 loops=3)
                                             Sort Key: t.id
                                             Sort Method: quicksort  Memory: 324kB
                                             Worker 0:  Sort Method: quicksort  Memory: 315kB
                                             Worker 1:  Sort Method: quicksort  Memory: 313kB
                                             ->  Nested Loop  (cost=1.16..116220.02 rows=11 width=44) (actual time=265.556..5023.086 rows=2437 loops=3)
                                                   ->  Nested Loop  (cost=0.87..116174.70 rows=11 width=48) (actual time=265.512..4997.139 rows=2460 loops=3)
                                                         ->  Nested Loop  (cost=0.43..115928.97 rows=438 width=18) (actual time=264.280..3681.684 rows=2567 loops=3)
                                                               ->  Parallel Seq Scan on userhistory uh  (cost=0.00..111331.13 rows=553 width=14) (actual time=263.123..1982.702 rows=3578 loops=3)
                                                                     Filter: ((last_seen <= now()) AND (last_seen >= (now() - '30 days'::interval)))
                                                                     Rows Removed by Filter: 1997052
                                                               ->  Index Scan using titleepisode_pkey on titleepisode te  (cost=0.43..8.31 rows=1 width=24) (actual time=0.473..0.473 rows=1 loops=10735)
                                                                     Index Cond: ((title_id)::text = (uh.title_id)::text)
                                                                     Filter: (season_number IS NOT NULL)
                                                                     Rows Removed by Filter: 0
                                                         ->  Index Scan using title_pkey on title t  (cost=0.43..0.56 rows=1 width=30) (actual time=0.510..0.510 rows=1 loops=7701)
                                                               Index Cond: ((id)::text = (te.parent_title_id)::text)
                                                               Filter: ((title_type)::text = 'tvSeries'::text)
                                                               Rows Removed by Filter: 0
                                                   ->  Index Scan using users_pkey on users u  (cost=0.29..4.12 rows=1 width=4) (actual time=0.009..0.009 rows=1 loops=7379)
                                                         Index Cond: (id = uh.user_id)
                                                         Filter: ((country_code)::text <> ALL ('{US,GB}'::text[]))
                                                         Rows Removed by Filter: 0
                                       ->  GroupAggregate  (cost=0.56..846625.48 rows=4081771 width=42) (actual time=1.939..31990.765 rows=9377470 loops=3)
                                             Group Key: tg.title_id
                                             ->  Nested Loop  (cost=0.56..719609.04 rows=15198860 width=17) (actual time=1.904..25320.864 rows=15197632 loops=3)
                                                   ->  Index Only Scan using titlegenre_pkey on titlegenre tg  (cost=0.56..462079.46 rows=15198860 width=14) (actual time=1.308..2246.142 rows=15197632 loops=3)
                                                         Heap Fetches: 0
                                                   ->  Index Scan using genre_id_hash on genre g  (cost=0.00..0.02 rows=1 width=11) (actual time=0.001..0.001 rows=1 loops=45592895)
                                                         Index Cond: (id = tg.genre_id)
 Planning Time: 13.854 ms
 JIT:
   Functions: 124
   Options: Inlining true, Optimization true, Expressions true, Deforming true
   Timing: Generation 7.483 ms, Inlining 276.133 ms, Optimization 592.550 ms, Emission 451.134 ms, Total 1327.300 ms
 Execution Time: 39614.537 ms
(55 rows)

