explain analyze SELECT t.id, t.primary_title, tg.genres, te.season_number, count(*) AS views
FROM title t
JOIN titleEpisode te ON te.parent_title_id = t.id
JOIN userHistory uh ON uh.title_id = te.title_id
JOIN users u ON u.id = uh.user_id
JOIN (
    SELECT tg.title_id, array_agg(g.name) AS genres
    FROM titleGenre tg
    JOIN genre g ON g.id = tg.genre_id
    GROUP BY tg.title_id
) tg ON tg.title_id = t.id
WHERE t.title_type = 'tvSeries'
    AND uh.last_seen BETWEEN NOW() - INTERVAL '30 days' AND NOW()
    AND te.season_number IS NOT NULL
    AND u.country_code NOT IN ('US', 'GB')
GROUP BY t.id, t.primary_title, tg.genres, te.season_number
ORDER BY count(*) DESC, t.id
LIMIT 100;
                                                                                                   QUERY PLAN                                                                                                    
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1131782.16..1131782.41 rows=100 width=74) (actual time=20695.699..20695.852 rows=100 loops=1)
   ->  Sort  (cost=1131782.16..1131791.19 rows=3610 width=74) (actual time=20154.270..20154.415 rows=100 loops=1)
         Sort Key: (count(*)) DESC, t.id
         Sort Method: top-N heapsort  Memory: 41kB
         ->  Finalize GroupAggregate  (cost=117864.02..1131644.19 rows=3610 width=74) (actual time=5274.655..20152.201 rows=6229 loops=1)
               Group Key: t.id, (array_agg(g.name)), te.season_number
               ->  Gather Merge  (cost=117864.02..1131578.01 rows=3008 width=74) (actual time=5274.621..20148.593 rows=6957 loops=1)
                     Workers Planned: 2
                     Workers Launched: 2
                     ->  Partial GroupAggregate  (cost=116863.99..1130230.79 rows=1504 width=74) (actual time=5253.087..19524.884 rows=2319 loops=3)
                           Group Key: t.id, (array_agg(g.name)), te.season_number
                           ->  Incremental Sort  (cost=116863.99..1130200.71 rows=1504 width=66) (actual time=5253.051..19523.224 rows=2582 loops=3)
                                 Sort Key: t.id, (array_agg(g.name)), te.season_number
                                 Presorted Key: t.id
                                 Full-sort Groups: 83  Sort Method: quicksort  Average Memory: 29kB  Peak Memory: 29kB
                                 Worker 0:  Full-sort Groups: 78  Sort Method: quicksort  Average Memory: 29kB  Peak Memory: 29kB
                                 Worker 1:  Full-sort Groups: 80  Sort Method: quicksort  Average Memory: 29kB  Peak Memory: 29kB
                                 ->  Merge Join  (cost=116189.82..1130133.03 rows=1504 width=66) (actual time=5230.393..19519.429 rows=2582 loops=3)
                                       Merge Cond: ((te.parent_title_id)::text = (tg.title_id)::text)
                                       ->  Sort  (cost=116189.11..116189.14 rows=10 width=44) (actual time=5166.351..5168.330 rows=2674 loops=3)
                                             Sort Key: t.id
                                             Sort Method: quicksort  Memory: 347kB
                                             Worker 0:  Sort Method: quicksort  Memory: 332kB
                                             Worker 1:  Sort Method: quicksort  Memory: 338kB
                                             ->  Nested Loop  (cost=1.16..116188.95 rows=10 width=44) (actual time=275.717..5160.973 rows=2674 loops=3)
                                                   ->  Nested Loop  (cost=0.87..116147.67 rows=10 width=48) (actual time=275.670..5133.518 rows=2699 loops=3)
                                                         ->  Nested Loop  (cost=0.43..115903.08 rows=436 width=18) (actual time=274.442..3748.764 rows=2816 loops=3)
                                                               ->  Parallel Seq Scan on userhistory uh  (cost=0.00..111330.52 rows=550 width=14) (actual time=273.210..1938.030 rows=3923 loops=3)
                                                                     Filter: ((last_seen <= now()) AND (last_seen >= (now() - '30 days'::interval)))
                                                                     Rows Removed by Filter: 1996708
                                                               ->  Index Scan using titleepisode_pkey on titleepisode te  (cost=0.43..8.31 rows=1 width=24) (actual time=0.460..0.460 rows=1 loops=11769)
                                                                     Index Cond: ((title_id)::text = (uh.title_id)::text)
                                                                     Filter: (season_number IS NOT NULL)
                                                                     Rows Removed by Filter: 0
                                                         ->  Index Scan using title_pkey on title t  (cost=0.43..0.56 rows=1 width=30) (actual time=0.489..0.489 rows=1 loops=8448)
                                                               Index Cond: ((id)::text = (te.parent_title_id)::text)
                                                               Filter: ((title_type)::text = 'tvSeries'::text)
                                                               Rows Removed by Filter: 0
                                                   ->  Index Scan using users_pkey on users u  (cost=0.29..4.13 rows=1 width=4) (actual time=0.008..0.008 rows=1 loops=8096)
                                                         Index Cond: (id = uh.user_id)
                                                         Filter: ((country_code)::text <> ALL ('{US,GB}'::text[]))
                                                         Rows Removed by Filter: 0
                                       ->  GroupAggregate  (cost=0.71..962198.93 rows=4138392 width=42) (actual time=1.086..13375.025 rows=9374475 loops=3)
                                             Group Key: tg.title_id
                                             ->  Nested Loop  (cost=0.71..834474.73 rows=15198860 width=17) (actual time=1.049..7122.858 rows=15192948 loops=3)
                                                   ->  Index Only Scan using titlegenre_pkey on titlegenre tg  (cost=0.56..462079.46 rows=15198860 width=14) (actual time=0.973..2419.439 rows=15192948 loops=3)
                                                         Heap Fetches: 0
                                                   ->  Memoize  (cost=0.15..0.17 rows=1 width=11) (actual time=0.000..0.000 rows=1 loops=45578844)
                                                         Cache Key: tg.genre_id
                                                         Cache Mode: logical
                                                         Hits: 15197777  Misses: 28  Evictions: 0  Overflows: 0  Memory Usage: 4kB
                                                         Worker 0:  Hits: 15196504  Misses: 28  Evictions: 0  Overflows: 0  Memory Usage: 4kB
                                                         Worker 1:  Hits: 15184479  Misses: 28  Evictions: 0  Overflows: 0  Memory Usage: 4kB
                                                         ->  Index Scan using genre_pkey on genre g  (cost=0.14..0.16 rows=1 width=11) (actual time=0.003..0.003 rows=1 loops=84)
                                                               Index Cond: (id = tg.genre_id)
 Planning Time: 13.397 ms
 JIT:
   Functions: 139
   Options: Inlining true, Optimization true, Expressions true, Deforming true
   Timing: Generation 7.925 ms, Inlining 272.609 ms, Optimization 618.546 ms, Emission 468.898 ms, Total 1367.979 ms
 Execution Time: 21037.556 ms
(61 rows)

