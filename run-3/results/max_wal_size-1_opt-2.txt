explain analyze SELECT *
FROM (
    SELECT t.id,
        left(t.primary_title, 30),
        ((start_year / 10) * 10)::int AS decade,
        avg(uh.rating) AS rating,
        rank() over (
            PARTITION by ((start_year / 10) * 10) :: int
            ORDER BY avg(uh.rating) DESC, t.id
        ) AS rank
    FROM title t
    JOIN userHistory uh ON uh.title_id = t.id
    JOIN titleGenre TG ON tg.title_id = t.id AND tg.genre_id = 8
    WHERE t.title_type = 'movie'
        AND ((start_year / 10) * 10)::int >= 1980
        AND t.id IN (
            SELECT title_id
            FROM titleAkas
            WHERE region IN (
                'US', 'GB', 'ES', 'DE', 'FR', 'PT'
            )
        )
    GROUP BY t.id
    HAVING count(uh.rating) >= 3
    ORDER BY decade, rating DESC
) t_
WHERE rank <= 10;
                                                                                           QUERY PLAN                                                                                            
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Subquery Scan on t_  (cost=423627.86..423828.37 rows=1573 width=86) (actual time=33337.753..33453.663 rows=50 loops=1)
   Filter: (t_.rank <= 10)
   Rows Removed by Filter: 1953
   ->  WindowAgg  (cost=423627.86..423769.40 rows=4718 width=86) (actual time=33337.748..33453.555 rows=2003 loops=1)
         ->  Sort  (cost=423627.86..423639.65 rows=4718 width=66) (actual time=33337.699..33451.927 rows=2003 loops=1)
               Sort Key: (((t.start_year / 10) * 10)), (avg(uh.rating)) DESC, t.id
               Sort Method: quicksort  Memory: 228kB
               ->  Finalize GroupAggregate  (cost=421536.08..423339.96 rows=4718 width=66) (actual time=33277.605..33448.096 rows=2003 loops=1)
                     Group Key: t.id
                     Filter: (count(uh.rating) >= 3)
                     Rows Removed by Filter: 40986
                     ->  Gather Merge  (cost=421536.08..423015.59 rows=11796 width=74) (actual time=33277.547..33417.342 rows=45049 loops=1)
                           Workers Planned: 2
                           Workers Launched: 2
                           ->  Partial GroupAggregate  (cost=420536.06..420654.02 rows=5898 width=74) (actual time=33255.392..33268.657 rows=15016 loops=3)
                                 Group Key: t.id
                                 ->  Sort  (cost=420536.06..420550.80 rows=5898 width=38) (actual time=33255.337..33258.628 rows=20226 loops=3)
                                       Sort Key: t.id
                                       Sort Method: quicksort  Memory: 2373kB
                                       Worker 0:  Sort Method: quicksort  Memory: 2451kB
                                       Worker 1:  Sort Method: quicksort  Memory: 2406kB
                                       ->  Nested Loop  (cost=202275.53..420166.67 rows=5898 width=38) (actual time=4617.428..33216.744 rows=20226 loops=3)
                                             ->  Nested Loop Semi Join  (cost=202274.97..408715.06 rows=8609 width=58) (actual time=4613.452..27913.567 rows=58327 loops=3)
                                                   ->  Parallel Hash Join  (cost=202274.41..314031.26 rows=54794 width=48) (actual time=4611.930..5345.485 rows=96250 loops=3)
                                                         Hash Cond: ((uh.title_id)::text = (t.id)::text)
                                                         ->  Parallel Seq Scan on userhistory uh  (cost=0.00..80069.41 rows=2500741 width=14) (actual time=0.279..1628.660 rows=2000631 loops=3)
                                                         ->  Parallel Hash  (cost=200452.36..200452.36 rows=89684 width=34) (actual time=2521.253..2521.255 rows=129726 loops=3)
                                                               Buckets: 65536  Batches: 8  Memory Usage: 3840kB
                                                               ->  Parallel Seq Scan on title t  (cost=0.00..200452.36 rows=89684 width=34) (actual time=51.119..2460.629 rows=129726 loops=3)
                                                                     Filter: (((title_type)::text = 'movie'::text) AND (((start_year / 10) * 10) >= 1980))
                                                                     Rows Removed by Filter: 3143815
                                                   ->  Index Scan using titleakas_pkey on titleakas  (cost=0.56..35.99 rows=35 width=10) (actual time=0.234..0.234 rows=1 loops=288751)
                                                         Index Cond: ((title_id)::text = (uh.title_id)::text)
                                                         Filter: ((region)::text = ANY ('{US,GB,ES,DE,FR,PT}'::text[]))
                                                         Rows Removed by Filter: 1
                                             ->  Index Only Scan using titlegenre_pkey on titlegenre tg  (cost=0.56..1.33 rows=1 width=10) (actual time=0.090..0.090 rows=0 loops=174982)
                                                   Index Cond: ((title_id = (uh.title_id)::text) AND (genre_id = 8))
                                                   Heap Fetches: 0
 Planning Time: 13.553 ms
 JIT:
   Functions: 90
   Options: Inlining false, Optimization false, Expressions true, Deforming true
   Timing: Generation 6.786 ms, Inlining 0.000 ms, Optimization 5.482 ms, Emission 142.478 ms, Total 154.746 ms
 Execution Time: 33809.253 ms
(44 rows)

